import matplotlib.pyplot as plt
from calendar import c
from cgitb import enable, reset, text
from distutils import command
from itertools import count
from pydoc import describe
from secrets import choice
from sqlite3 import enable_callback_tracebacks
from tkinter import *
from tkinter import messagebox
from tkinter import ttk
from textwrap import wrap
from tkinter import font
from tkinter.font import BOLD
from urllib.parse import parse_qs
from PIL import ImageTk, Image, ImageFile
from matplotlib.font_manager import json_dump
from numpy import choose, empty, place
import pandas as pd
from tkinter.messagebox import showinfo
import tkinter.scrolledtext as scrolledtext
from tkinter.filedialog import askopenfilename
import os
import webbrowser
from pip import main
from tkcalendar import Calendar
from tkcalendar import DateEntry
from datetime import date
from tkinter import filedialog
import subprocess
import mysql.connector
import io
from openpyxl.workbook import Workbook
from openpyxl import load_workbook
import shutil
import csv
import json
from tkPDFViewer import tkPDFViewer as pdf
from tkinter import Tk, Canvas

import customtkinter
import PIL.Image
from PIL import ImageGrab
from PIL import ImageTk, Image, ImageFile
import PIL.Image
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
import numpy as np
import re
from datetime import date,datetime, timedelta

from array import *

finsysdb = mysql.connector.connect(
    host="localhost", user="root", password="", database="newfinsys", port="3306"
)
fbcursor = finsysdb.cursor(buffered=True)

root=Tk()
root.geometry("1366x768+0+0")

root.title("Fin sYs")

p1 = PhotoImage(file = 'images/favicon.png')
root.iconphoto(False, p1)

#-------------------------------------------------------------------------------------------------------------------------Images


pro_pic =PIL.Image.open("profilepic\propic.jpg")
# resized_pro_pic= pro_pic.resize((170,170))
prof_pics=ImageTk.PhotoImage(pro_pic)



imgr1 =PIL.Image.open("images\logs.png")
exprefreshIcon=ImageTk.PhotoImage(imgr1)

notic =PIL.Image.open("images/bell.png")
noti=ImageTk.PhotoImage(notic)

mnu =PIL.Image.open("images\menu bar.PNG")
mnus=ImageTk.PhotoImage(mnu)


srh =PIL.Image.open("images\search.PNG")
srh_img=ImageTk.PhotoImage(srh)

stn =PIL.Image.open("images/brightness-solid-24.png")
stn_img=ImageTk.PhotoImage(stn)

logo =PIL.Image.open("images\logo-icon.png")
resized_image= logo.resize((50,50))
mai_logo= ImageTk.PhotoImage(resized_image)

sig_up =PIL.Image.open("images/register.png")
resized_sign_up= sig_up.resize((500,400))
sign_up=ImageTk.PhotoImage(resized_sign_up)


#------------------------------------------------------------------------------------------------------------Login Button Function

def main_sign_in():
    
        usr_nm=nm_ent.get()
        usr_pass=pass_ent.get()
        sql_log_sql='select * from auth_user where username=%s'
        vals=(nm_ent.get(),)
        fbcursor.execute(sql_log_sql,vals)
        check_logins=fbcursor.fetchone()
        
        if usr_nm=="" or usr_pass=="" or usr_nm=="Username" or usr_pass=="********":
            messagebox.showerror("Login Failed","Enter username and password")
        else:

            sql_log_sql='select * from auth_user where username=%s'
            vals=(nm_ent.get(),)
            fbcursor.execute(sql_log_sql,vals)
            check_login=fbcursor.fetchone()
            
            if check_login is None:
                messagebox.showerror("Login Failed","Create an account")
            else:
                if check_login[4]==usr_nm and check_login[1]==usr_pass:
                    
                    

                    pro_pic =PIL.Image.open("profilepic\propic"+str(check_logins[0])+".png")
                        # resized_pro_pic= pro_pic.resize((170,170))
                    prof_pics=ImageTk.PhotoImage(pro_pic)

                    dash_pro_pic =PIL.Image.open("profilepic\propic"+str(check_logins[0])+".png")
                    dash_resized_pro_pic= dash_pro_pic.resize((50,50))
                    dash_prof_pics=ImageTk.PhotoImage(dash_resized_pro_pic)
                    
                    try:
                        main_frame_signup.pack_forget()
                    except:
                        pass
                    try:
                        main_frame_signin.pack_forget()
                    except:
                        pass
                    Sys_top_frame=Frame(root, height=70,bg="#213b52")
                    Sys_top_frame.pack(fill=X,)

                    #---------------------------------------------------------------------------------------Top Menu
                    tp_lb_nm=LabelFrame(Sys_top_frame,bg="#213b52")#-----------------------------Logo Name Frame
                    tp_lb_nm.grid(row=1,column=1,sticky='nsew')
                    tp_lb_nm.grid_rowconfigure(0,weight=1)
                    tp_lb_nm.grid_columnconfigure(0,weight=1)

                    label = Label(tp_lb_nm, image = mai_logo,height=70,bg="#213b52",border=0)
                    label.grid(row=2,column=1,sticky='nsew')
                    label = Label(tp_lb_nm, text="Fin sYs",bg="#213b52", fg="white",font=('Calibri 30 bold'),border=0)
                    label.grid(row=2,column=2,sticky='nsew')
                
                    mnu_btn = Button(tp_lb_nm, image=mnus, bg="white", fg="black",border=0)
                    mnu_btn.grid(row=2,column=4,padx=50)

                    

                    tp_lb_srh=LabelFrame(Sys_top_frame,bg="#213b52")#-------------------------Serch area Frame
                    tp_lb_srh.grid(row=1,column=2,sticky='nsew')
                    tp_lb_srh.grid_rowconfigure(0,weight=1)
                    tp_lb_srh.grid_columnconfigure(0,weight=1)

                    def srh_fn(event):
                        if srh_top.get()=="Search":
                            srh_top.delete(0,END)
                        else:
                            pass

                    

                    #------------------------------------------------------settings 
                    def close_lst_2():
                            lst_prf2.place_forget()
                            set_btn4 = Button(tp_lb_srh, image=stn_img,command=settings, bg="#213b52", fg="black",border=0)
                            set_btn4.grid(row=2,column=5,padx=(0,30))
                            
                    def settings():
                        

                        # create a list box
                        stng = ("Accounts And Settings","Customize From Style","Chart Of Accounts")

                        stngs = StringVar(value=stng)
                        global lst_prf2
                        lst_prf2 = Listbox(root,listvariable=stngs,height=3 ,selectmode='extended',bg="black",fg="white")

                        lst_prf2.place(relx=0.70, rely=0.10)
                        lst_prf2.bind('<<ListboxSelect>>', )
                        set_btn.grid_forget()
                        set_btn2 = Button(tp_lb_srh, image=stn_img,command=close_lst_2, bg="#213b52", fg="black",border=0)
                        set_btn2.grid(row=2,column=5,padx=(0,30))

                    set_btn = Button(tp_lb_srh, image=stn_img,command=settings, bg="#213b52", fg="black",border=0)
                    set_btn.grid(row=2,column=5,padx=(0,30))

                    tp_lb_nm=LabelFrame(Sys_top_frame,bg="#213b52")#-----------------------------Notification
                    tp_lb_nm.grid(row=1,column=3,sticky='nsew')
                    tp_lb_nm.grid_rowconfigure(0,weight=1)
                    tp_lb_nm.grid_columnconfigure(0,weight=1)
                    srh_btn = Button(tp_lb_nm, image=noti, bg="#213b52", fg="black",border=0)
                    srh_btn.grid(row=0,column=0,padx=35)
                    
                    tp_lb_npr=LabelFrame(Sys_top_frame,bg="#213b52")#---------------------------profile area name
                    tp_lb_npr.grid(row=1,column=4,sticky='nsew')
                    tp_lb_npr.grid_rowconfigure(0,weight=1)
                    tp_lb_npr.grid_columnconfigure(0,weight=1)
                    dtl_sqls="select * from auth_user where username=%s"
                    dtl_sqls_val=(nm_ent.get(),)
                    fbcursor.execute(dtl_sqls,dtl_sqls_val,)
                    dtls=fbcursor.fetchone()

                    sql_pro_sql="select * from app1_company where id_id =%s"
                    sql_pro_sql_val=(dtls[0],)
                    fbcursor.execute(sql_pro_sql,sql_pro_sql_val,)
                    dtl_cmp_pro=fbcursor.fetchone()

                    label = Label(tp_lb_npr, text=str(dtl_cmp_pro[1])+"\nOnline",bg="#213b52", fg="white", anchor="center",width=10,height=2,font=('Calibri 16 bold'),border=0)
                    label.grid(row=0,column=1,sticky='nsew')
                    # label = Label(tp_lb_npr, text="Online",bg="#213b52", fg="white",width=15,font=('Calibri 12 bold'),border=0)
                    # label.grid(row=2,column=1,sticky='nsew')

                    
                    
                    def lst_frt():
                        lst_prf.place_forget()
                        srh_btn3 = Button(tp_lb_npr,image=dash_prof_pics, bg="White", fg="black",command=profile)
                        srh_btn3.grid(row=0,column=2,padx=15)
                    def lst_prf_slt(event):
                        def edit_profile():
                            def responsive_widgets_edit(event):
                                dwidth = event.width
                                dheight = event.height
                                dcanvas = event.widget
                                


                                r1 = 25
                                x1 = dwidth/63
                                x2 = dwidth/1.021
                                y1 = dheight/13
                                y2 = dheight/.53

                                dcanvas.coords("bg_polygen_pr",x1 + r1,y1,
                                x1 + r1,y1,
                                x2 - r1,y1,
                                x2 - r1,y1,     
                                x2,y1,     
                                #--------------------
                                x2,y1 + r1,     
                                x2,y1 + r1,     
                                x2,y2 - r1,     
                                x2,y2 - r1,     
                                x2,y2,
                                #--------------------
                                x2 - r1,y2,     
                                x2 - r1,y2,     
                                x1 + r1,y2,
                                x1 + r1,y2,
                                x1,y2,
                                #--------------------
                                x1,y2 - r1,
                                x1,y2 - r1,
                                x1,y1 + r1,
                                x1,y1 + r1,
                                x1,y1,
                                )                              

                                
                                # dcanvas.coords("bg_polygen_pr",dwidth/16,dheight/.6,dwidth/1.07,dheight/9)
                                dcanvas.coords("my_pro",dwidth/2.3,dheight/12.5)
                                dcanvas.coords("pr_img",dwidth/2.3,dheight/5)
                                

                                dcanvas.coords("pr_hr_l",dwidth/16,dheight/6.5,dwidth/1.07,dheight/6.5)
                                dcanvas.coords("pr_hd",dwidth/20,dheight/2.2)
                                dcanvas.coords("pr_1_nm",dwidth/17.075,dheight/1.9)
                                dcanvas.coords("fr_name_ent",dwidth/17.075,dheight/1.75)
                                dcanvas.coords("pr_em_lb",dwidth/17.075,dheight/1.56)
                                dcanvas.coords("em_ent",dwidth/17.075,dheight/1.47)
                                dcanvas.coords("pr_crpass_lb",dwidth/17.075,dheight/1.33)
                                dcanvas.coords("pr_crpass_ent",dwidth/17.075,dheight/1.26)
                                dcanvas.coords("pr_re_pass_lb",dwidth/17.075,dheight/1.16)
                                dcanvas.coords("pr_re_pass_ent",dwidth/17.075,dheight/1.1)
                                dcanvas.coords("last_nm_lb",dwidth/1.92,dheight/1.9)
                                dcanvas.coords("lst_nm_ent",dwidth/1.92,dheight/1.75)
                                dcanvas.coords("usr_nm_lb",dwidth/1.92,dheight/1.56)
                                dcanvas.coords("usr_nm_ent",dwidth/1.92,dheight/1.47)
                                dcanvas.coords("pr_new_pass_lb",dwidth/1.92,dheight/1.33)
                                dcanvas.coords("pr_new_pass_ent",dwidth/1.92,dheight/1.26)

                                
                                #-------------------------------------------------------------------------company section
                                dcanvas.coords("cmp_hd",dwidth/20,dheight/1)
                                dcanvas.coords("cmp_nm_lb",dwidth/17.075,dheight/0.93)
                                dcanvas.coords("cmp_nm_ent",dwidth/17.075,dheight/0.89)
                                dcanvas.coords("cmp_cty_lb",dwidth/17.075,dheight/0.84)
                                dcanvas.coords("cmp_cty_ent",dwidth/17.075,dheight/0.81)
                                dcanvas.coords("cmp_pin_lb",dwidth/17.075,dheight/0.77)
                                dcanvas.coords("cmp_pin_ent",dwidth/17.075,dheight/.745)
                                dcanvas.coords("cmp_ph_lb",dwidth/17.075,dheight/.712)
                                dcanvas.coords("cmp_ph_ent",dwidth/17.075,dheight/.69)
                                dcanvas.coords("cmp_indest_lb",dwidth/17.075,dheight/.66)
                                dcanvas.coords("cmp_indest_ent",dwidth/17.075,dheight/.64)
                                dcanvas.coords("cmp_file_lb",dwidth/17.075,dheight/.615)
                                dcanvas.coords("cmp_file_ent",dwidth/17.075,dheight/.6)
                                

                                #--------------------------------------------------------------------------company right

                                dcanvas.coords("cmp_addr_lb",dwidth/1.92,dheight/0.93)
                                dcanvas.coords("cmp_addr_ent",dwidth/1.92,dheight/0.89)
                                dcanvas.coords("cmp_st_lb",dwidth/1.92,dheight/0.84)
                                dcanvas.coords("cmp_st_ent",dwidth/1.92,dheight/0.81)
                                dcanvas.coords("cmp_em_lb",dwidth/1.92,dheight/0.77)
                                dcanvas.coords("cmp_em_ent",dwidth/1.92,dheight/.745)
                                dcanvas.coords("cmp_lg_nm",dwidth/1.92,dheight/.712)
                                dcanvas.coords("cmp_lg_ent",dwidth/1.92,dheight/.69)
                                dcanvas.coords("cmp_typ_lb",dwidth/1.92,dheight/.66)
                                dcanvas.coords("cmp_typ_ent",dwidth/1.92,dheight/.64)
                                dcanvas.coords("btn_edit",dwidth/2.4,dheight/.57)
                            sql_pro="select * from auth_user where username=%s"
                            sql_pro_val=(nm_ent.get(),)
                            fbcursor.execute(sql_pro,sql_pro_val,)
                            edi_dtl=fbcursor.fetchone()

                            def update_profile():
                                first_name=fr_name_ent.get()
                                pro_email=em_ent.get()
                                last_name=lst_nm_ent.get()
                                pro_username=usr_nm_ent.get()
                                pro_new_pass=pr_new_pass_ent.get()

                                sql_signup='select * from auth_user'
                                fbcursor.execute(sql_signup)
                                check_none=fbcursor.fetchone()

                                if edi_dtl[4]==pro_username and edi_dtl[1]==pr_crpass_ent.get() and pro_new_pass=="" :
                                            passw=pr_crpass_ent.get()
                                    
                                            prof_edit="update auth_user set first_name=%s,last_name=%s,email=%s,username=%s,password=%s where id=%s" #adding values into db
                                            prof_edit_val=(first_name,last_name,pro_email,pro_username,passw,edi_dtl[0])
                                            fbcursor.execute(prof_edit,prof_edit_val)
                                            finsysdb.commit()

                                            #compnay
                                            cmp_name=cmp_nm_ent.get()
                                            cmp_cty=cmp_cty_ent.get()
                                            cmp_pin=cmp_pin_ent.get()
                                            cmp_phn=cmp_ph_ent.get()
                                            cmp_ind=cmp_indest_ent.get()
                                            cmp_addr=cmp_addr_ent.get()
                                            cmp_st=cmp_st_ent.get()
                                            cmp_em=cmp_em_ent.get()
                                            cmp_bname=cmp_lg_ent.get()
                                            cmp_typ=cmp_typ_ent.get()
                                            logo=cmp_file_ent.get()

                                            cmp_edit="update app1_company set cname=%s,caddress=%s,city=%s,state=%s,pincode=%s,cemail=%s,phone=%s,cimg=%s,bname=%s,industry=%s,ctype=%s where id_id =%s" #adding values into db
                                            cmp_edit_val=(cmp_name,cmp_addr,cmp_cty,cmp_st,cmp_pin,cmp_em,cmp_phn,logo,cmp_bname,cmp_ind,cmp_typ,edi_dtl[0])
                                            fbcursor.execute(cmp_edit,cmp_edit_val)
                                            finsysdb.commit()
                                            
                                        
                                else:
                                    # #username same password change
                                    if pr_new_pass_ent.get()=="":
                                        
                                        pro_new_passd=pr_crpass_ent.get()
                                        
                                    else:
                                        pro_new_passd=pr_new_pass_ent.get()
                                    if pro_new_pass==pr_re_pass_ent.get() and pr_re_pass_ent.get()==pro_new_pass:
                                            if pr_crpass_ent.get()==edi_dtl[1]:
                                                print(pro_new_pass)
                                                prof_edit="update auth_user set first_name=%s,last_name=%s,email=%s,username=%s,password=%s where id=%s" #adding values into db
                                                prof_edit_val=(first_name,last_name,pro_email,pro_username,pro_new_passd,edi_dtl[0])
                                                fbcursor.execute(prof_edit,prof_edit_val)
                                                finsysdb.commit()

                                                #compnay
                                                cmp_name=cmp_nm_ent.get()
                                                cmp_cty=cmp_cty_ent.get()
                                                cmp_pin=cmp_pin_ent.get()
                                                cmp_phn=cmp_ph_ent.get()
                                                cmp_ind=cmp_indest_ent.get()
                                                cmp_addr=cmp_addr_ent.get()
                                                cmp_st=cmp_st_ent.get()
                                                cmp_em=cmp_em_ent.get()
                                                cmp_bname=cmp_lg_ent.get()
                                                cmp_typ=cmp_typ_ent.get()
                                                logo=cmp_file_ent.get()

                                                cmp_edit="update app1_company set cname=%s,caddress=%s,city=%s,state=%s,pincode=%s,cemail=%s,phone=%s,cimg=%s,bname=%s,industry=%s,ctype=%s where id_id =%s" #adding values into db
                                                cmp_edit_val=(cmp_name,cmp_addr,cmp_cty,cmp_st,cmp_pin,cmp_em,cmp_phn,logo,cmp_bname,cmp_ind,cmp_typ,edi_dtl[0])
                                                fbcursor.execute(cmp_edit,cmp_edit_val)
                                                finsysdb.commit()
                                                
                                            else:
                                                messagebox.showerror("Updation Failed","Please check your current password")
                                    else:

                                            messagebox.showerror("Updation Failed","password and conform password does not match")
                                        
                                    
                                Sys_top_frame2.pack_forget()
                                Sys_top_frame.pack_forget()
                                Sys_mains_frame_pr_ed.grid_forget()
                                main_frame_signin.pack(fill=X,)

                            sql_pro_cmp="select * from app1_company where id_id=%s"
                            sql_pro_cmp_val=(pro_dtl[0],)
                            fbcursor.execute(sql_pro_cmp,sql_pro_cmp_val,)
                            edi_cmp_dtl=fbcursor.fetchone()

                            Sys_mains_frame_pr.place_forget()
                            global Sys_mains_frame_pr_ed
                            Sys_mains_frame_pr_ed=Frame(tab1, height=750)
                            Sys_mains_frame_pr_ed.grid(row=0,column=0,sticky='nsew')
                            Sys_mains_frame_pr_ed.grid_rowconfigure(0,weight=1)
                            Sys_mains_frame_pr_ed.grid_columnconfigure(0,weight=1)

                            pr_canvas_ed=Canvas(Sys_mains_frame_pr_ed,height=766,width=1340,scrollregion=(0,0,766,1650),bg="#2f516f",border=0)
                            pr_canvas_ed.bind('<Configure>', responsive_widgets_edit)
                            
                            pr_myscrollbar_ed=Scrollbar(Sys_mains_frame_pr_ed,orient="vertical",command=pr_canvas_ed.yview)
                            pr_canvas_ed.configure(yscrollcommand=pr_myscrollbar_ed.set)

                            pr_myscrollbar_ed.pack(side="right",fill="y")
                            pr_canvas_ed.pack(fill=X)

                            rth2 = pr_canvas_ed.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_pr"),smooth=True,)


                            grd1c=Label(pr_canvas_ed, text="MY PROFILE",bg="#213b52", fg="White", anchor="center",font=('Calibri 24 bold'))
                            win_inv1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=grd1c,tags=("my_pro"))

                            pr_img=Label(pr_canvas_ed,  image = prof_pics,bg="#213b52",width=170,height=170,  anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_img,tags=("pr_img"))

                            pr_canvas_ed.create_line(0,0, 0, 0,fill="gray",tags=("pr_hr_l") )
                            #----------------------------------------------------------------------------------------Personal info
                            pr_hd=Label(pr_canvas_ed, text="Personal Info",bg="#213b52", fg="White", anchor="center",font=('Calibri 18 bold'))
                            win_pr = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_hd,tags=("pr_hd"))

                            fir_name=Label(pr_canvas_ed, text="First Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=fir_name,tags=("pr_1_nm"))

                            fr_name_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            fr_name_ent.delete(0,END)
                            fr_name_ent.insert(0,edi_dtl[5])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=fr_name_ent,tags=("fr_name_ent"))

                            pr_em_lb=Label(pr_canvas_ed, text="E-Mail",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_em_lb,tags=("pr_em_lb"))

                            em_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            em_ent.delete(0,END)
                            em_ent.insert(0,edi_dtl[7])
                            def validate(value):
            
                                pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                                if re.fullmatch(pattern, value) is None:
                                                    
                                    return False

                                em_ent.config(fg="black")
                                return True

                            def on_invalid():
                                
                                em_ent.config(fg="red")

                            vcmdem_ent = (pr_canvas_ed.register(validate), '%P')
                            ivcmdem_ent = (pr_canvas_ed.register(on_invalid),)
                            em_ent.config(validate='focusout', validatecommand=vcmdem_ent, invalidcommand=ivcmdem_ent)                              
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=em_ent,tag=("em_ent"))

                            pr_crpass_lb=Label(pr_canvas_ed, text="Enter your Current Password",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_crpass_lb,tag=("pr_crpass_lb"))

                            pr_crpass_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'),show="*")
                            
                            pr_crpass_ent.delete(0,END)
                            pr_crpass_ent.insert(0,edi_dtl[1])
                            
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_crpass_ent,tag=("pr_crpass_ent"))

                            pr_re_pass_lb=Label(pr_canvas_ed, text="Re-type new Password",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_re_pass_lb,tag=("pr_re_pass_lb"))

                            pr_re_pass_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'),show="*")
                            def pas_val_fun1(value):
            
                                pattern = r'(?=^.{8,}$)(?=.*\d)(?=.*[!@#$%^&*]+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$'
                                if re.fullmatch(pattern, value) is None:
                                                    
                                    return False

                                pr_re_pass_ent.config(fg="black")
                                return True

                            def pass_inval_fun1():
                                pr_re_pass_ent.config(fg="red")

                            pas_val1 = (pr_canvas_ed.register(pas_val_fun1), '%P')
                            pass_inval1 = (pr_canvas_ed.register(pass_inval_fun1),)

                            pr_re_pass_ent.config(validate='focusout', validatecommand=pas_val1, invalidcommand=pass_inval1)

                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_re_pass_ent,tag=("pr_re_pass_ent"))


                            last_nm_lb=Label(pr_canvas_ed, text="Last Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=last_nm_lb,tag=("last_nm_lb"))

                            lst_nm_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            lst_nm_ent.delete(0,END)
                            lst_nm_ent.insert(0,edi_dtl[6])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=lst_nm_ent,tag=("lst_nm_ent"))

                            usr_nm_lb=Label(pr_canvas_ed, text="Username",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=usr_nm_lb, tag=("usr_nm_lb"))

                            usr_nm_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            usr_nm_ent.delete(0,END)
                            usr_nm_ent.insert(0,edi_dtl[4])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=usr_nm_ent,tag=("usr_nm_ent"))

                            pr_new_pass_lb=Label(pr_canvas_ed, text="Enter New Password",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_new_pass_lb,tag=("pr_new_pass_lb"))

                            pr_new_pass_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'),show="*",)
                            def pas_val_fun2(value):
            
                                pattern = r'(?=^.{8,}$)(?=.*\d)(?=.*[!@#$%^&*]+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$'
                                if re.fullmatch(pattern, value) is None:
                                                    
                                    return False

                                pr_new_pass_ent.config(fg="black")
                                return True

                            def pass_inval_fun2():
                                pr_new_pass_ent.config(fg="red")

                            pas_val2 = (pr_canvas_ed.register(pas_val_fun2), '%P')
                            pass_inval2 = (pr_canvas_ed.register(pass_inval_fun2),)

                            pr_new_pass_ent.config(validate='focusout', validatecommand=pas_val2, invalidcommand=pass_inval2)
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=pr_new_pass_ent,tag=("pr_new_pass_ent"))


                            # #------------------------------------------------------------------------------------------------COMPANY SECTION
                            cmp_hd=Label(pr_canvas_ed, text="Company Info",bg="#213b52", fg="White", anchor="center",font=('Calibri 18 bold'))
                            win_pr = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_hd,tag=("cmp_hd"))

                            cmp_nm_lb=Label(pr_canvas_ed, text="Company Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_nm_lb,tag=("cmp_nm_lb"))

                            cmp_nm_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_nm_ent.delete(0,END)
                            cmp_nm_ent.insert(0,edi_cmp_dtl[1])
                            
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_nm_ent,tag=("cmp_nm_ent"))

                            cmp_cty_lb=Label(pr_canvas_ed, text="City",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_cty_lb,tag=("cmp_cty_lb"))

                            cmp_cty_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_cty_ent.delete(0,END)
                            cmp_cty_ent.insert(0,edi_cmp_dtl[3])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_cty_ent,tag=("cmp_cty_ent"))

                            cmp_pin_lb=Label(pr_canvas_ed, text="Pincode",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_pin_lb,tag=("cmp_pin_lb"))

                            cmp_pin_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_pin_ent.delete(0,END)
                            cmp_pin_ent.insert(0,edi_cmp_dtl[5])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_pin_ent,tag=("cmp_pin_ent"))

                            cmp_ph_lb=Label(pr_canvas_ed, text="Phone Number",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_ph_lb,tag=("cmp_ph_lb"))

                            cmp_ph_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_ph_ent.delete(0,END)
                            cmp_ph_ent.insert(0,edi_cmp_dtl[7])
                            def validate_telb512(value):
            
                                    pattern = r'^[0-9]\d{9}$'
                                    if re.fullmatch(pattern, value) is None:
                                        
                                        return False
                                    cmp_ph_ent.config(fg="black")
                                    return True

                            def on_invalid_telb512():
                                    cmp_ph_ent.config(fg="red")
                                    
                            v_tel_cmd = (pr_canvas_ed.register(validate_telb512), '%P')
                            iv_tel_cmd = (pr_canvas_ed.register(on_invalid_telb512),)
                            cmp_ph_ent.config(validate='focusout', validatecommand=v_tel_cmd, invalidcommand=iv_tel_cmd)
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_ph_ent,tag=("cmp_ph_ent"))

                            cmp_indest_lb=Label(pr_canvas_ed, text="Your Industry",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_indest_lb,tag=("cmp_indest_lb"))

                            cmp_indest_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_indest_ent.delete(0,END)
                            cmp_indest_ent.insert(0,edi_cmp_dtl[10])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_indest_ent,tag=("cmp_indest_ent"))

                            # #----------------------------------------------------------------------------------------------------RIGHT SIDE
                            cmp_addr_lb=Label(pr_canvas_ed, text="Company Address",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_addr_lb,tag=("cmp_addr_lb"))

                            cmp_addr_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_addr_ent.delete(0,END)
                            cmp_addr_ent.insert(0,edi_cmp_dtl[2])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_addr_ent,tag=("cmp_addr_ent"))

                            cmp_st_lb=Label(pr_canvas_ed, text="State",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_st_lb,tag=("cmp_st_lb"))

                            cmp_st_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_st_ent.delete(0,END)
                            cmp_st_ent.insert(0,edi_cmp_dtl[4])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_st_ent,tag=("cmp_st_ent"))

                            cmp_em_lb=Label(pr_canvas_ed, text="Email",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_em_lb,tag=("cmp_em_lb"))

                            cmp_em_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_em_ent.delete(0,END)
                            cmp_em_ent.insert(0,edi_cmp_dtl[6])
                            def validateb2113(value):
            
                                pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                                if re.fullmatch(pattern, value) is None:
                                                    
                                    return False

                                cmp_em_ent.config(fg="black")
                                return True

                            def on_invalidb2113():
                                
                                cmp_em_ent.config(fg="red")

                            vcmdb2113 = (pr_canvas_ed.register(validateb2113), '%P')
                            ivcmdb2113 = (pr_canvas_ed.register(on_invalidb2113),)
                            cmp_em_ent.config(validate='focusout', validatecommand=vcmdb2113, invalidcommand=ivcmdb2113) 

                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_em_ent,tag=("cmp_em_ent"))

                            cmp_lg_nm=Label(pr_canvas_ed, text="Legal Business Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_lg_nm,tag=("cmp_lg_nm"))

                            cmp_lg_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_lg_ent.delete(0,END)
                            cmp_lg_ent.insert(0,edi_cmp_dtl[9])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_lg_ent,tag=("cmp_lg_ent"))

                            cmp_typ_lb=Label(pr_canvas_ed, text="Company Type",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_typ_lb,tag=("cmp_typ_lb"))

                            cmp_typ_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_typ_ent.delete(0,END)
                            cmp_typ_ent.insert(0,edi_cmp_dtl[11])
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_typ_ent,tag=("cmp_typ_ent"))

                            cmp_file_lb=Label(pr_canvas_ed, text="File",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_file_lb,tag=("cmp_file_lb"))
                            def fil_ents(event):
                                sql_log_sql='select * from auth_user where username=%s'
                                vals=(nm_ent.get(),)
                                fbcursor.execute(sql_log_sql,vals)
                                check_logins=fbcursor.fetchone()
                                cmp_logo = askopenfilename(filetypes=(("png file ",'.png'),('PDF', '*.pdf',),("jpg file", ".jpg"),  ("All files", "*.*"),))
                                logo_crp=cmp_logo.split('/',-1)
                                
                                im1 = Image.open(r""+cmp_logo) 
                                im1 = im1.save("profilepic/propic"+str(check_logins[0])+".png")

                                cmp_file_ent.delete("0",END)
                                cmp_file_ent.insert(0,logo_crp[-1])

                            cmp_file_ent=Entry(pr_canvas_ed,width=55,font=('Calibri 14 bold'))
                            cmp_file_ent.delete(0,END)
                            cmp_file_ent.insert(0,edi_cmp_dtl[8])
                            cmp_file_ent.bind("<Button-1>",fil_ents)
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=cmp_file_ent,tag=("cmp_file_ent"))


                            btn_edit = Button(pr_canvas_ed, text='Update Profile', command=update_profile, bg="#213b52", fg="White",borderwidth = 3,height=2,width=30)
                            win_info1 = pr_canvas_ed.create_window(0, 0, anchor="nw", window=btn_edit,tag=("btn_edit"))

                        
                        selected_indices = lst_prf.curselection()
                        selected_langs = ",".join([lst_prf.get(i) for i in selected_indices])
                        lst_prf.place_forget()

                        def pr_responsive_widgets(event):
                                
                                dwidth = event.width
                                dheight = event.height
                                dcanvas = event.widget
                            
                                
                                r1 = 25
                                x1 = dwidth/63
                                x2 = dwidth/1.021
                                y1 = dheight/13
                                y2 = dheight/.6

                                dcanvas.coords("bg_polygen_pr",x1 + r1,y1,
                                x1 + r1,y1,
                                x2 - r1,y1,
                                x2 - r1,y1,     
                                x2,y1,     
                                #--------------------
                                x2,y1 + r1,     
                                x2,y1 + r1,     
                                x2,y2 - r1,     
                                x2,y2 - r1,     
                                x2,y2,
                                #--------------------
                                x2 - r1,y2,     
                                x2 - r1,y2,     
                                x1 + r1,y2,
                                x1 + r1,y2,
                                x1,y2,
                                #--------------------
                                x1,y2 - r1,
                                x1,y2 - r1,
                                x1,y1 + r1,
                                x1,y1 + r1,
                                x1,y1,
                                )                   
                
                                dcanvas.coords("my_pro",dwidth/2.3,dheight/13)
                                dcanvas.coords("pr_img",dwidth/2.3,dheight/5)

                                dcanvas.coords("pr_hr_l",dwidth/16,dheight/6.5,dwidth/1.07,dheight/6.5)
                                dcanvas.coords("pr_hd",dwidth/20,dheight/2.2)
                                dcanvas.coords("pr_1_nm",dwidth/17.075,dheight/1.9)
                                dcanvas.coords("fr_name_ent",dwidth/17.075,dheight/1.75)
                                
                                dcanvas.coords("pr_em_lb",dwidth/17.075,dheight/1.56)
                                dcanvas.coords("em_ent",dwidth/17.075,dheight/1.47)
                                dcanvas.coords("last_nm_lb",dwidth/1.92,dheight/1.9)
                                dcanvas.coords("lst_nm_ent",dwidth/1.92,dheight/1.75)
                                dcanvas.coords("usr_nm_lb",dwidth/1.92,dheight/1.56)
                                dcanvas.coords("usr_nm_ent",dwidth/1.92,dheight/1.47)

                                #-------------------------------------------------------------------------company section
                                dcanvas.coords("cmp_hd",dwidth/20,dheight/1.32)
                                dcanvas.coords("cmp_nm_lb",dwidth/17.075,dheight/1.22)
                                dcanvas.coords("cmp_nm_ent",dwidth/17.075,dheight/1.16)
                                dcanvas.coords("cmp_cty_lb",dwidth/17.075,dheight/1.07)
                                dcanvas.coords("cmp_cty_ent",dwidth/17.075,dheight/1.02)
                                dcanvas.coords("cmp_pin_lb",dwidth/17.075,dheight/.95)
                                dcanvas.coords("cmp_pin_ent",dwidth/17.075,dheight/.91)
                                dcanvas.coords("cmp_ph_lb",dwidth/17.075,dheight/.86)
                                dcanvas.coords("cmp_ph_ent",dwidth/17.075,dheight/.83)
                                dcanvas.coords("cmp_indest_lb",dwidth/17.075,dheight/.78)
                                dcanvas.coords("cmp_indest_ent",dwidth/17.075,dheight/.755)

                                #--------------------------------------------------------------------------company right

                                dcanvas.coords("cmp_addr_lb",dwidth/1.92,dheight/1.22)
                                dcanvas.coords("cmp_addr_ent",dwidth/1.92,dheight/1.16)
                                dcanvas.coords("cmp_st_lb",dwidth/1.92,dheight/1.07)
                                dcanvas.coords("cmp_st_ent",dwidth/1.92,dheight/1.02)
                                dcanvas.coords("cmp_em_lb",dwidth/1.92,dheight/.95)
                                dcanvas.coords("cmp_em_ent",dwidth/1.92,dheight/.91)
                                dcanvas.coords("cmp_lg_nm",dwidth/1.92,dheight/.86)
                                dcanvas.coords("cmp_lg_ent",dwidth/1.92,dheight/.83)
                                dcanvas.coords("cmp_typ_lb",dwidth/1.92,dheight/.78)
                                dcanvas.coords("cmp_typ_ent",dwidth/1.92,dheight/.755)
                                dcanvas.coords("btn_edit",dwidth/2.4,dheight/.71)

                        if selected_langs=="Profile":
                            # canvas.pack_forget()
                            # myscrollbar.pack_forget()
                            # Sys_mains_frame.pack_forget()
                            
                            sql_pro="select * from auth_user where username=%s"
                            sql_pro_val=(nm_ent.get(),)
                            fbcursor.execute(sql_pro,sql_pro_val,)
                            pro_dtl=fbcursor.fetchone()

                            sql_pro_cmp="select * from app1_company where id_id=%s"
                            sql_pro_cmp_val=(pro_dtl[0],)
                            fbcursor.execute(sql_pro_cmp,sql_pro_cmp_val,)
                            pro_cmp_dtl=fbcursor.fetchone()
                            
                            global Sys_mains_frame_pr
                            Sys_mains_frame_pr=Frame(tab1, height=750,bg="#2f516f",)
                            Sys_mains_frame_pr.grid(row=0,column=0,sticky='nsew')
                            Sys_mains_frame_pr.grid_rowconfigure(0,weight=1)
                            Sys_mains_frame_pr.grid_columnconfigure(0,weight=1)

                            pr_canvas=Canvas(Sys_mains_frame_pr,height=700,width=1340,scrollregion=(0,0,700,1300),bg="#2f516f",border=0)
                            pr_canvas.bind("<Configure>", pr_responsive_widgets)
                            
                            pr_myscrollbar=Scrollbar(Sys_mains_frame_pr,orient="vertical",command=pr_canvas.yview)
                            pr_canvas.configure(yscrollcommand=pr_myscrollbar.set)

                            pr_myscrollbar.pack(side="right",fill="y")
                            pr_canvas.pack(fill=X)

                            rth2 = pr_canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",smooth=True,tags=("bg_polygen_pr"))

                            grd1c=Label(pr_canvas, text="MY PROFILE",bg="#213b52", fg="White", anchor="center",font=('Calibri 24 bold'))
                            win_inv1 = pr_canvas.create_window(0, 0, anchor="nw", window=grd1c,tags=("my_pro"))

                            pr_canvas.create_line(0,0, 0, 0,fill="gray",tags=("pr_hr_l") )
                            #----------------------------------------------------------------------------------------Personal info

            
                            pr_img=Label(pr_canvas, image = prof_pics,bg="#213b52",width=170,height=170, anchor="center",)
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=pr_img,tags=("pr_img"))

                            pr_hd=Label(pr_canvas, text="Personal Info",bg="#213b52", fg="White", anchor="center",font=('Calibri 18 bold'))
                            win_pr = pr_canvas.create_window(0, 0, anchor="nw", window=pr_hd,tags=("pr_hd"))

                            fir_name=Label(pr_canvas, text="First Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=fir_name,tags=("pr_1_nm"))

                            fr_name_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            fr_name_ent.delete(0,END)
                            fr_name_ent.insert(0,pro_dtl[5])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=fr_name_ent,tags=("fr_name_ent"))

                            pr_em_lb=Label(pr_canvas, text="E-Mail",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=pr_em_lb,tags=("pr_em_lb"))

                            em_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            em_ent.delete(0,END)
                            em_ent.insert(0,pro_dtl[7])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=em_ent,tag=("em_ent"))

                            last_nm_lb=Label(pr_canvas, text="Last Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=last_nm_lb,tag=("last_nm_lb"))

                            lst_nm_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            lst_nm_ent.delete(0,END)
                            lst_nm_ent.insert(0,pro_dtl[6])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=lst_nm_ent,tag=("lst_nm_ent"))

                            usr_nm_lb=Label(pr_canvas, text="Username",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=usr_nm_lb, tag=("usr_nm_lb"))

                            usr_nm_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            usr_nm_ent.delete(0,END)
                            usr_nm_ent.insert(0,pro_dtl[4])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=usr_nm_ent,tag=("usr_nm_ent"))

                            #------------------------------------------------------------------------------------------------COMPANY SECTION
                            cmp_hd=Label(pr_canvas, text="Company Info",bg="#213b52", fg="White", anchor="center",font=('Calibri 18 bold'))
                            win_pr = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_hd,tag=("cmp_hd"))

                            cmp_nm_lb=Label(pr_canvas, text="Company Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_nm_lb,tag=("cmp_nm_lb"))

                            cmp_nm_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_nm_ent.delete(0,END)
                            cmp_nm_ent.insert(0,pro_cmp_dtl[1])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_nm_ent,tag=("cmp_nm_ent"))

                            cmp_cty_lb=Label(pr_canvas, text="City",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_cty_lb,tag=("cmp_cty_lb"))

                            cmp_cty_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_cty_ent.delete(0,END)
                            cmp_cty_ent.insert(0,pro_cmp_dtl[3])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_cty_ent,tag=("cmp_cty_ent"))

                            cmp_pin_lb=Label(pr_canvas, text="Pincode",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_pin_lb,tag=("cmp_pin_lb"))

                            cmp_pin_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_pin_ent.delete(0,END)
                            cmp_pin_ent.insert(0,pro_cmp_dtl[5])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_pin_ent,tag=("cmp_pin_ent"))

                            cmp_ph_lb=Label(pr_canvas, text="Phone Number",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_ph_lb,tag=("cmp_ph_lb"))

                            cmp_ph_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_ph_ent.delete(0,END)
                            cmp_ph_ent.insert(0,pro_cmp_dtl[7])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_ph_ent,tag=("cmp_ph_ent"))

                            cmp_indest_lb=Label(pr_canvas, text="Your Industry",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_indest_lb,tag=("cmp_indest_lb"))

                            cmp_indest_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_indest_ent.delete(0,END)
                            cmp_indest_ent.insert(0,pro_cmp_dtl[10])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_indest_ent,tag=("cmp_indest_ent"))

                            #----------------------------------------------------------------------------------------------------RIGHT SIDE
                            cmp_addr_lb=Label(pr_canvas, text="Company Address",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_addr_lb,tag=("cmp_addr_lb"))

                            cmp_addr_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_addr_ent.delete(0,END)
                            cmp_addr_ent.insert(0,pro_cmp_dtl[2])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_addr_ent,tag=("cmp_addr_ent"))

                            cmp_st_lb=Label(pr_canvas, text="State",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_st_lb,tag=("cmp_st_lb"))

                            cmp_st_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_st_ent.delete(0,END)
                            cmp_st_ent.insert(0,pro_cmp_dtl[4])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_st_ent,tag=("cmp_st_ent"))

                            cmp_em_lb=Label(pr_canvas, text="Email",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_em_lb,tag=("cmp_em_lb"))

                            cmp_em_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_em_ent.delete(0,END)
                            cmp_em_ent.insert(0,pro_cmp_dtl[6])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_em_ent,tag=("cmp_em_ent"))

                            cmp_lg_nm=Label(pr_canvas, text="Legal Business Name",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_lg_nm,tag=("cmp_lg_nm"))

                            cmp_lg_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_lg_ent.delete(0,END)
                            cmp_lg_ent.insert(0,pro_cmp_dtl[9])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_lg_ent,tag=("cmp_lg_ent"))

                            cmp_typ_lb=Label(pr_canvas, text="Company Type",bg="#213b52", fg="White", anchor="center",font=('Calibri 14 bold'))
                            win_info = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_typ_lb,tag=("cmp_typ_lb"))

                            cmp_typ_ent=Entry(pr_canvas,width=55,font=('Calibri 14 bold'))
                            cmp_typ_ent.delete(0,END)
                            cmp_typ_ent.insert(0,pro_cmp_dtl[11])
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=cmp_typ_ent,tag=("cmp_typ_ent"))


                            btn_edit = Button(pr_canvas, text='Edit Profile', command=edit_profile, bg="#213b52", fg="White",borderwidth = 3,height=2,width=30)
                            win_info1 = pr_canvas.create_window(0, 0, anchor="nw", window=btn_edit,tag=("btn_edit"))
                        
                        elif selected_langs=="Log Out":
                            
                            Sys_top_frame2.pack_forget()
                            Sys_top_frame.pack_forget()
                            main_frame_signin.pack(fill=X,)
                        elif selected_langs== "Dashboard":
                            try:
                                
                                Sys_mains_frame_pr.grid_forget()
                            except:
                                pass
                            try:
                                Sys_mains_frame_pr_ed.grid_forget()
                            except:
                                pass
                            

                        else:
                            pass
                    def profile2():
                        lst_prf.place_forget()
                        srh_btn4 = Button(tp_lb_npr,image=dash_prof_pics, bg="White", fg="black",command=profile)
                        srh_btn4.grid(row=0,column=2,padx=15)
                    def profile():
                        # create a list box
                        langs = ("Dashboard","Profile","Log Out")

                        langs_var = StringVar(value=langs)
                        global lst_prf
                        lst_prf = Listbox(root,listvariable=langs_var,height=3 ,selectmode='extended',bg="black",fg="white")

                        lst_prf.place(relx=0.90, rely=0.10)
                        lst_prf.bind('<<ListboxSelect>>', lst_prf_slt)
                        srh_btn.grid_forget()
                        srh_btn2 = Button(tp_lb_npr,image=dash_prof_pics, bg="White", fg="black",command=profile2)
                        srh_btn2.grid(row=0,column=2,padx=15)
                
                    srh_btn = Button(tp_lb_npr,image=dash_prof_pics, bg="White", fg="black",command=profile)
                    srh_btn.grid(row=0,column=2,padx=15)

                    Sys_top_frame2=Frame(root, height=10,bg="#213b52")
                    Sys_top_frame2.pack(fill=X,)
                    
                    s = ttk.Style()
                    s.theme_use('default')
                    s.configure('TNotebook.Tab', background="#213b52",foreground="white", width=150,anchor="center", padding=5)
                    s.map('TNotebook.Tab',background=[("selected","#2f516f")])
                    def right_nav():
                        
                        tabControl.pack_forget()
                        btn_nav.place_forget()
                        tabControl2.pack(expand = 1, fill ="both")
                        btn_nav2.place(relx=0, rely=0)
                        try:
                            btn_nav3.place_forget()
                        except:
                            pass
                    def left_nav():
                        
                        tabControl2.pack_forget()
                        btn_nav2.place_forget()
                        tabControl.pack(expand = 1, fill ="both")
                        global btn_nav3
                        btn_nav3=Button(Sys_top_frame2,text=">>", command=right_nav, width=3, bg="#213b52",fg="white")
                        btn_nav3.place(relx=0.97, rely=0)

                    tabControl = ttk.Notebook(Sys_top_frame2)
                    tab1 = ttk.Frame(tabControl)
                    tab2 = ttk.Frame(tabControl)
                    tab3=  ttk.Frame(tabControl)
                    tab4 = ttk.Frame(tabControl)
                    tab5 = ttk.Frame(tabControl)
                    tab6=  ttk.Frame(tabControl)
                    tab7 = ttk.Frame(tabControl)
                    tab8 = ttk.Frame(tabControl)
                    
                    
                    btn_nav=Button(Sys_top_frame2,text=">>", command=right_nav, width=3, bg="#213b52",fg="white")
                    btn_nav.place(relx=0.97, rely=0)
                    tabControl.add(tab1,compound = LEFT, text ='Dashboard',)
                    tabControl.add(tab2,compound = LEFT, text ='Banking')
                    tabControl.add(tab3,compound = LEFT, text ='Sales')
                    tabControl.add(tab4,compound = LEFT, text ='Expenses')
                    tabControl.add(tab5,compound = LEFT, text ='Payroll') 
                    tabControl.add(tab6,compound = LEFT, text ='Report')
                    tabControl.add(tab7,compound = LEFT, text ='Taxes')
                    tabControl.add(tab8,compound = LEFT, text ='Accounting')
                    
                    tabControl.pack(expand = 1, fill ="both")


                    
                    tabControl2 = ttk.Notebook(Sys_top_frame2)
                    tab9 =  ttk.Frame(tabControl2)
                    tab10=  ttk.Frame(tabControl2)
                    tab11 = ttk.Frame(tabControl2)
                    tab12=  ttk.Frame(tabControl2)
                    tab13 = ttk.Frame(tabControl2)
                    tab14 = ttk.Frame(tabControl2)
                    tab15 =  ttk.Frame(tabControl2)

                    btn_nav2=Button(Sys_top_frame2,text="<<", command=left_nav, width=3, bg="#213b52",fg="white")
                    
                        
                    tabControl2.add(tab9,compound = LEFT, text ='My Account')
                    tabControl2.add(tab10,compound = LEFT, text ='Cash Management')
                    tabControl2.add(tab11,compound = LEFT, text ='Production')
                    tabControl2.add(tab12,compound = LEFT, text ='Quality Management')
                    tabControl2.add(tab13,compound = LEFT, text ='Project Management')
                    tabControl2.add(tab14,compound = LEFT, text ='Usage Decisions')
                    tabControl2.add(tab15,compound = LEFT, text ='Account & Payable')

                
                    #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Dash Board}
                    tab1.grid_columnconfigure(0,weight=1)
                    tab1.grid_rowconfigure(0,weight=1)
                    
                    Sys_mains_frame=Frame(tab1,bg="#2f516f",)
                    Sys_mains_frame.grid(row=0,column=0,sticky='nsew')
                    
                    def responsive_wid(event):
                        dwidth = event.width
                        dheight = event.height
                        dcanvas = event.widget
                    
                        r1 = 25
                        x1 = dwidth/63
                        x2 = dwidth/1.021
                        y1 = dheight/13
                        y2 = dheight/6

                        dcanvas.coords("bg_polygen_dash",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )                    

                        r1 = 25
                        x1 = dwidth/63
                        x2 = dwidth/3.1
                        y1 = dheight/5
                        y2 = dheight/1.1

                        dcanvas.coords("bg_polygen_dash1",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        r1 = 25
                        x1 = dwidth/2.95
                        x2 = dwidth/1.529
                        y1 = dheight/5
                        y2 = dheight/1.1

                        dcanvas.coords("bg_polygen_dash2",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        r1 = 25
                        x1 = dwidth/1.49
                        x2 = dwidth/1.021
                        y1 = dheight/5
                        y2 = dheight/1.1

                        dcanvas.coords("bg_polygen_dash3",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        r1 = 25
                        x1 = dwidth/63
                        x2 = dwidth/3.1
                        y1 = dheight/1.06
                        y2 = dheight/.59
                        
                        #-----------------------------------------second row
                        dcanvas.coords("bg_polygen_dash4",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        r1 = 25
                        x1 = dwidth/2.95
                        x2 = dwidth/1.529
                        y1 = dheight/1.06
                        y2 = dheight/.59

                        dcanvas.coords("bg_polygen_dash5",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        r1 = 25
                        x1 = dwidth/1.49
                        x2 = dwidth/1.021
                        y1 = dheight/1.06
                        y2 = dheight/.59

                        dcanvas.coords("bg_polygen_dash6",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        dcanvas.coords("head_lb",dwidth/2,dheight/8.4)
                    
                        
                        dcanvas.coords("prf_lb",dwidth/53,dheight/4.7)
                        
                        dcanvas.coords("prf_hr",dwidth/53,dheight/3.7,dwidth/3.15,dheight/3.7)
                        dcanvas.coords("net_prf",dwidth/53,dheight/3.2)
                        dcanvas.coords("graph",dwidth/53,dheight/2.2)
                        #--------------------------------------------------------------second
                        dcanvas.coords("exp_hd_lb",dwidth/2.9,dheight/4.7)
                        dcanvas.coords("exp_hr",dwidth/2.9,dheight/3.7,dwidth/1.54,dheight/3.7)
                        dcanvas.coords("graph_2",dwidth/2.9,dheight/2.2)
                        
                        #-----------------------------------------------------------third
                        dcanvas.coords("bnk_lb",dwidth/1.48,dheight/4.7)
                        dcanvas.coords("bank_hr",dwidth/1.48,dheight/3.7,dwidth/1.03,dheight/3.7)
                        dcanvas.coords("inv_lb4",dwidth/1.48,dheight/3.5)
                        dcanvas.coords("inv_lb5",dwidth/1.48,dheight/3)
                        dcanvas.coords("graph9",dwidth/1.48,dheight/2.2)
                        
                        #--------------------------------------------------------------forth
                        dcanvas.coords("incom_lb",dwidth/53,dheight/1.04)
                        
                        dcanvas.coords("incom_hr",dwidth/53,dheight/0.98,dwidth/3.15,dheight/0.98)

                    
                        dcanvas.coords("graph_4",dwidth/53,dheight/0.85)
                
                        #-------------------------------------------------------------fifth
                        dcanvas.coords("inv_lb",dwidth/2.9,dheight/1.04)
                        dcanvas.coords("invs_hr",dwidth/2.9,dheight/0.98,dwidth/1.54,dheight/0.98)
                        dcanvas.coords("inv_lb2",dwidth/2.9,dheight/0.95)
                        dcanvas.coords("inv_lb3",dwidth/2.9,dheight/0.90)
                        dcanvas.coords("graph_5",dwidth/2.9,dheight/0.85)
                        #-------------------------------------------------------------sixth
                        dcanvas.coords("sales_lb",dwidth/1.48,dheight/1.04)
                        dcanvas.coords("sales_hr",dwidth/1.48,dheight/0.98,dwidth/1.03,dheight/0.98)
                        
                        


                        dcanvas.coords("grapg_6",dwidth/1.48,dheight/0.85)
                            
                    Sys_mains_frame.grid_rowconfigure(0,weight=1)
                    Sys_mains_frame.grid_columnconfigure(0,weight=1)

                    canvas = Canvas(Sys_mains_frame,height=700,bg='#2f516f',scrollregion=(0,0,700,1200))
                    sr_Scroll = Scrollbar(Sys_mains_frame,orient=VERTICAL)
                    sr_Scroll.grid(row=0,column=1,sticky='ns')
                    sr_Scroll.config(command=canvas.yview)
                    canvas.bind("<Configure>", responsive_wid)
                    canvas.config(yscrollcommand=sr_Scroll.set)
                    canvas.grid(row=0,column=0,sticky='nsew')

                    

                    cmp_name=Label(canvas, text=dtl_cmp_pro[1],bg="#213b52", fg="White", anchor="center",font=('Calibri 24 bold'))
                
                    win_inv1 = canvas.create_window(0, 0, anchor="center", window=cmp_name,tag=("head_lb"))

                    

                    
                    rth2 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash"),smooth=True,)
                    # #----------------------------------------------------------------------------------------------------------------grid 1
                    rth1 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash1"),smooth=True,)
                    #-------------------------------------------------------Income
                    sql_incomes="select sum(balance) from app1_accounts1 where cid_id=%s and detype='Income'"
                    sql_incomes_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_incomes,sql_incomes_val,)
                    incom_dtls=fbcursor.fetchone()
                    
                    if incom_dtls[0]==None or incom_dtls[0]=='':
                        tot_inc=0.0
                    else:
                        tot_inc=incom_dtls[0]
                    
                
                    #-----------------------------------------------------expense
                    sql_pro="select sum(balance) from app1_accounts1 where cid_id=%s and detype='Expenses'"
                    sql_pro_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_pro,sql_pro_val,)
                    exp_tot=fbcursor.fetchone()
                
                    if exp_tot[0]==None or exp_tot[0]=="":
                        total_exp=0.0
                    else:
                        total_exp=exp_tot[0]

                    prf_lb=Label(canvas, text="PROFIT AND LOSS",bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=prf_lb, tag=("prf_lb"))

                    canvas.create_line(0, 0, 0, 0,fill="gray", tag=("prf_hr") )
                    
                    try:
                        incomes=float(tot_inc)-float(total_exp)
                    except:
                        incomes=0.0
                
                    try:
                        if float(tot_inc) > float(total_exp):

                            net_prf=Label(canvas, text="NET INCOME: ₹"+str(incomes),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                        else:
                            net_prf=Label(canvas, text="NET LOSS: ₹"+str(incomes),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    except:
                        net_prf=Label(canvas, text="NET INCOME: ₹"+str(incomes),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=net_prf,tag=("net_prf"))

                    figlast = plt.figure(figsize=(8, 4), dpi=50) 


                    x="Income"
                    
                    y=tot_inc
                    plt.barh(x,y, label="Undefined", color="#92a1ae") 
                    plt.legend()
                
                    plt.ylabel("")
                    axes=plt.gca()
                    axes.xaxis.grid()

                    x="Expense"
            
                    try:
                        if exp_tot[0]==None or exp_tot[0]=="":
                            y=0.0
                        else:
                            y=exp_tot[0]
                    except:
                        y=0.0
                    plt.barh(x,y, color="#506579") 
                    plt.legend()
                
                    plt.ylabel("")
                    axes=plt.gca()
                    axes.xaxis.grid()
                    figlast.set_facecolor("#213b52")
                    axes.set_facecolor("#213b52")
                    
                            

                    canvasbar = FigureCanvasTkAgg(figlast, master=canvas)
                    canvasbar
                    canvasbar.draw()
                    canvasbar.get_tk_widget()
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph"))
                    # #----------------------------------------------------------------------------------------------------------------grid 2
                    
                    
                    
                    
                    rth2 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash2"),smooth=True,)

                    sql_pro="select sum(balance) from app1_accounts1 where cid_id=%s and detype='Expenses'"
                    sql_pro_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_pro,sql_pro_val,)
                    exp_tots=fbcursor.fetchone()
                    

                    if exp_tots[0] is None:
                            ttl=0.0
                    else:
                            ttl=exp_tots[0]
                
                    try:
                        exp_hd_lb=Label(canvas, text="EXPENSES: ₹"+str(ttl),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    except:
                        exp_hd_lb=Label(canvas, text="EXPENSES: ₹0.0",bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=exp_hd_lb, tag=("exp_hd_lb"))
                    canvas.create_line(0, 0, 0, 0,fill="gray" ,tag=("exp_hr"))
                    fig, ax = plt.subplots(figsize=(8, 4), dpi=50)

                    sql_typ="select balance from app1_accounts1 where cid_id=%s and detype='Expenses'"
                    sql_typ_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_typ,sql_typ_val,)
                    exp_typ=fbcursor.fetchall()

                    sql_typs="select name from app1_accounts1 where cid_id=%s and detype='Expenses'"
                    sql_typs_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_typs,sql_typs_val,)
                    exp_typs=fbcursor.fetchall()
                    
                    
                    try:
                        sql_typs="select name from app1_accounts1 where cid_id=%s and detype='Expenses'"
                        sql_typs_val=(dtl_cmp_pro[0],)
                        fbcursor.execute(sql_typs,sql_typs_val,)
                        exp_typs=fbcursor.fetchall()
                        
                        labels = []
                        for i in exp_typs:
                                labels.append(i[0])
                        size = 0.3
                        
                        arr = np.asarray(exp_typ)
                        vals = np.array(arr)
                    
                        cmap = plt.colormaps["tab20c"]
                        outer_colors = cmap(np.arange(3)*4)
                        
                        # inner_colors = cmap([1, 2, 5, 6, 9, 10])

                        ax.pie(vals.sum(axis=1), radius=1,labels=labels, colors=outer_colors,wedgeprops=dict(width=size, edgecolor='w'))

                        ax.set(aspect="equal", title='Cost Of Sales')
                    
                        fig.set_facecolor("#213b52")
                        ax.set_facecolor("#92a1ae")
                        

                        canvasbar = FigureCanvasTkAgg(fig, master=canvas)
                        
                        canvasbar.draw()
                        canvasbar.get_tk_widget()
                        win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph_2"))
                    except:
                        size = 0.3
                        
                        vals = np.array([[60.]])
                    
                        cmap = plt.colormaps["tab20c"]
                        outer_colors = cmap(np.arange(3)*4)
                        
                        # inner_colors = cmap([1, 2, 5, 6, 9, 10])

                        ax.pie(vals.sum(axis=1), radius=1, colors=outer_colors,wedgeprops=dict(width=size, edgecolor='w'))

                        ax.set(aspect="equal", title='Cost Of Sales')
                    
                        fig.set_facecolor("#213b52")
                        ax.set_facecolor("#92a1ae")
                        

                        canvasbar = FigureCanvasTkAgg(fig, master=canvas)
                        
                        canvasbar.draw()
                        canvasbar.get_tk_widget()
                        win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph_2"))

                    # #----------------------------------------------------------------------------------------------------------------grid 3
                    rth3 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash3"),smooth=True,)

                    bnk_lb=Label(canvas, text="BANK ACCOUNTS",bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=bnk_lb,tag=("bnk_lb"))
                    canvas.create_line(910, 195, 1290, 195,fill="gray",tag=("bank_hr"))
                    sql_pro="select sum(debit), sum(credit) from app1_bankstatement where cid_id=%s"
                    sql_pro_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_pro,sql_pro_val,)
                    bank_stm=fbcursor.fetchone()
                    if bank_stm[0]==None or bank_stm[0]=="":
                        debit=0.0
                    else:
                        debit=bank_stm[0]
                    if bank_stm[1]==None or bank_stm[1]=="":
                        credit=0.0
                    else:
                        credit=bank_stm[1]
                 

                    inv_lb2=Label(canvas, text="DEBIT:₹"+str(debit),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=inv_lb2, tag=("inv_lb4"))
                    inv_lb3=Label(canvas, text="CREDIT:₹"+str(credit),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0,0 , anchor="nw", window=inv_lb3, tag=("inv_lb5"))

                    figlast = plt.figure(figsize=(8, 4), dpi=50) 
                    try:
                        x="Debit"
                        y=debit
                        plt.barh(x,y, label="Undefined", color="#92a1ae") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()

                        x="Credit"
                        y=credit
                        plt.barh(x,y, color="#506579") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()
                        figlast.set_facecolor("#213b52")
                        axes.set_facecolor("#213b52")
                    except:
                        x="Debit"
                        y=0
                        plt.barh(x,y, label="Undefined", color="#92a1ae") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()

                        x="Credit"
                        y=0
                        plt.barh(x,y, color="#506579") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()
                        figlast.set_facecolor("#213b52")
                        axes.set_facecolor("#213b52")

                    
                            

                    canvasbar = FigureCanvasTkAgg(figlast, master=canvas)
                    canvasbar
                    canvasbar.draw()
                    canvasbar.get_tk_widget()
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph9"))
                    # #----------------------------------------------------------------------------------------------------------------grid 4
                    rth4 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash4"),smooth=True,)

                    sql_income="select sum(balance) from app1_accounts1 where cid_id=%s and detype='Income'"
                    sql_income_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_income,sql_pro_val,)
                    incom_dtls=fbcursor.fetchone()

                    if incom_dtls[0]==None or incom_dtls[0]=='':
                        tot_incm=0.0
                    else:
                        tot_incm=incom_dtls[0]

                    incom_lb=Label(canvas, text="INCOME: ₹"+str(tot_incm),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=incom_lb,tag=("incom_lb"))
                    canvas.create_line(0, 0, 0, 0,fill="gray",tag=("incom_hr") )

                    sql_income_chart="select balance,name from app1_accounts1 where cid_id=%s and detype='Income'"
                    sql_income_chart_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_income_chart,sql_income_chart_val,)
                    incom_chart=fbcursor.fetchall()
                    
                    try:
                        sizes = []
                        for i in incom_chart:
                            sizes.append(i[0])
                    except:
                        sizes=0
                    sql_lb_chart="select name from app1_accounts1 where cid_id=%s and detype='Income'"
                    sql_lb_chart_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_lb_chart,sql_lb_chart_val,)
                    incom_chart_lb=fbcursor.fetchall()
                    try:
                        labels = []
                        for i in incom_chart_lb:
                            labels.append(i[0])
                    except:
                        pass
                    
                    
                    fig1, ax1 = plt.subplots(figsize=(8, 4), dpi=50)
                    patches, texts, autotexts =ax1.pie(sizes, autopct='%1.1f%%',labels=labels,
                    shadow=True, startangle=90)
                    ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
                    fig1.set_facecolor("#213b52")
                    ax1.set_facecolor("#92a1ae")
                
                    for text in texts:
                        text.set_color('white')
                    for autotext in autotexts:
                        autotext.set_color('black')

                    canvasbar = FigureCanvasTkAgg(fig1, master=canvas)
                    canvasbar
                    canvasbar.draw()
                    canvasbar.get_tk_widget()
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph_4"))

                    # #----------------------------------------------------------------------------------------------------------------grid 5

                    sql_pro="select sum(amtrecvd), sum(baldue),min(invoicedate) from app1_invoice where cid_id=%s"
                    sql_pro_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_pro,sql_pro_val,)
                    exp_totl_inv=fbcursor.fetchone()

                    if exp_totl_inv[0]==None or exp_totl_inv[0]=='':
                        paid=0.0
                    else:
                        paid=exp_totl_inv[0]
                    if exp_totl_inv[1]==None or exp_totl_inv[1]=='':
                        unpaid=0.0
                    else:
                        unpaid=exp_totl_inv[1]

                    rth5 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash5"),smooth=True,)
                    inv_lb=Label(canvas, text="INVOICE",bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=inv_lb, tag=("inv_lb"))

                    canvas.create_line(0, 0, 0, 0,fill="gray", tag=("invs_hr") )
                    inv_lb2=Label(canvas, text="UNPAID:₹"+str(unpaid),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=inv_lb2, tag=("inv_lb2"))
                    inv_lb3=Label(canvas, text="PAID:₹"+str(paid),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0,0 , anchor="nw", window=inv_lb3, tag=("inv_lb3"))

                    figlast = plt.figure(figsize=(8, 4), dpi=50)
                    try:
                        x="Unpaid"
                        y=unpaid 
                        plt.barh(x,y, label="Undefined", color="#92a1ae") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()

                        x="Paid"
                        y=paid
                        plt.barh(x,y, color="#506579") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()
                        figlast.set_facecolor("#213b52")
                        axes.set_facecolor("#213b52")
                    except:
                        x="Unpaid"
                        y=0 
                        plt.barh(x,y, label="Undefined", color="#92a1ae") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()

                        x="Paid"
                        y=0
                        plt.barh(x,y, color="#506579") 
                        plt.legend()
                    
                        plt.ylabel("")
                        axes=plt.gca()
                        axes.xaxis.grid()
                        figlast.set_facecolor("#213b52")
                        axes.set_facecolor("#213b52")

                    canvasbar = FigureCanvasTkAgg(figlast, master=canvas)
                    canvasbar
                    canvasbar.draw()
                    canvasbar.get_tk_widget()
                    win_inv1 = canvas.create_window(480, 780, anchor="nw", window=canvasbar.get_tk_widget(), tag=("graph_5"))
                    #----------------------------------------------------------------------------------------------------------------grid 6
                    rth6 = canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, fill="#213b52",tags=("bg_polygen_dash6"),smooth=True,)
                    

                    canvas.create_line(0, 0, 0, 0,fill="gray", tag=("sales_hr") )
                    
                    if exp_totl_inv[2]==None or exp_totl_inv[2]=='':
                        dates_start=date.today()
                    else:
                        dates_start=exp_totl_inv[2] 
                    

                    sql_pro="select invoicedate from app1_invoice where cid_id=%s"
                    sql_pro_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_pro,sql_pro_val,)
                    sal_totl_inv=fbcursor.fetchall()

                    sql_prof="select sum(grandtotal) from app1_invoice where cid_id=%s "
                    sql_prof_val=(dtl_cmp_pro[0],)
                    fbcursor.execute(sql_prof,sql_prof_val,)
                    sal_totl_invs2=fbcursor.fetchone()
                    

                    if sal_totl_invs2[0]==None or sal_totl_invs2[0]=='':
                        tot_sal=0.0
                    else:
                        tot_sal=sal_totl_invs2[0]

                    
                   

                    sales_lb=Label(canvas, text="SALES ₹"+str(tot_sal),bg="#213b52", fg="White", anchor="nw",font=('Calibri 16 bold'))
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=sales_lb, tag=("sales_lb"))

                    
                    figlast = plt.figure(figsize=(8, 4), dpi=50)
                    try:
                        x = []
                        y = []
                        for i in sal_totl_inv:
                            x.append(i[0])
                    
                            sql_pros="select sum(grandtotal) from app1_invoice where cid_id=%s and invoicedate=%s "
                            sql_pros_val=(dtl_cmp_pro[0],i[0],)
                            fbcursor.execute(sql_pros,sql_pros_val,)
                            sal_totl_invs=fbcursor.fetchall()
                            
                            y.insert(-1,sal_totl_invs[0])
                        
                        
                        labels = x

                        plt.plot(x, y)
                        # You can specify a rotation for the tick labels in degrees or with keywords.
                        plt.xticks(x, labels, rotation='horizontal')
                        # Pad margins so that markers don't get clipped by the axes
                        plt.margins(0.2)
                        # Tweak spacing to prevent clipping of tick-labels
                        plt.subplots_adjust(bottom=0.15)
                        figlast.set_facecolor("#213b52")
                    
                    except:
                        x = [1,2]
                        y = [0,0]
                        
                        
                        
                        labels = x

                        plt.plot(x, y)
                        # You can specify a rotation for the tick labels in degrees or with keywords.
                        plt.xticks(x, labels, rotation='horizontal')
                        # Pad margins so that markers don't get clipped by the axes
                        plt.margins(0.2)
                        # Tweak spacing to prevent clipping of tick-labels
                        plt.subplots_adjust(bottom=0.15)
                        figlast.set_facecolor("#213b52")
                    canvasbar = FigureCanvasTkAgg(figlast, master=canvas)
                    canvasbar
                    canvasbar.draw()
                    canvasbar.get_tk_widget()
                    win_inv1 = canvas.create_window(0, 0, anchor="nw", window=canvasbar.get_tk_widget(), tag=("grapg_6"))
                    
                    #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333Banking Section(Tab2)

                    tab_bank = ttk.Notebook(tab2)
                    tab2_1 =  ttk.Frame(tab_bank)
                    tab2_2=  ttk.Frame(tab_bank)
                    tab2_3 = ttk.Frame(tab_bank)

                    tab_bank.add(tab2_1,compound = LEFT, text ='Online Banking')
                    tab_bank.add(tab2_2,compound = LEFT, text ='Offline banking')
                    tab_bank.add(tab2_3,compound = LEFT, text ='Bank Reconvilation')

                    
                    tab_bank.pack(expand = 1, fill ="both")

                    #333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Sales Tab}
                    tab_sales = ttk.Notebook(tab3)
                    tab3_1 =  ttk.Frame(tab_sales)
                    tab3_2=  ttk.Frame(tab_sales)
                    tab3_3 = ttk.Frame(tab_sales)
                    tab3_4=  ttk.Frame(tab_sales)

                    
                        
                    tab_sales.add(tab3_1,compound = LEFT, text ='Sales Records')
                    tab_sales.add(tab3_2,compound = LEFT, text ='Invoices')
                    tab_sales.add(tab3_3,compound = LEFT, text ='Customers')
                    tab_sales.add(tab3_4,compound = LEFT, text ='Product & Services')
                
                    tab_sales.pack(expand = 1, fill ="both")

                    tab3_1.grid_columnconfigure(0,weight=1)
                    tab3_1.grid_rowconfigure(0,weight=1)

                
                    sr_Frame = Frame(tab3_1)
                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                    def responsive_widgets_sales(event):
                        dwidth = event.width
                        dheight = event.height
                        dcanvas = event.widget
                        dcanvas.coords("line1", dwidth/31.6, dheight/2.002, dwidth/1.039, dheight/2.002)
                        dcanvas.coords("line17", dwidth/31.6, dheight/2.002, dwidth/31.6, dheight/1.274)
                        dcanvas.coords("line2", dwidth/31.6, dheight/1.797, dwidth/1.039, dheight/1.797)
                        dcanvas.coords("line3", dwidth/1.039, dheight/2.002, dwidth/1.039, dheight/1.274)
                        dcanvas.coords("line4", dwidth/31.6, dheight/1.63, dwidth/1.039, dheight/1.63)
                        dcanvas.coords("line5", dwidth/31.6, dheight/1.491, dwidth/1.039, dheight/1.491)
                        dcanvas.coords("line6", dwidth/31.6, dheight/1.374, dwidth/1.039, dheight/1.374)
                        dcanvas.coords("line7", dwidth/31.6, dheight/1.274, dwidth/1.039, dheight/1.274)
                        dcanvas.coords("line8", dwidth/7.92, dheight/2.002, dwidth/7.92, dheight/1.274)
                        dcanvas.coords("line9", dwidth/4.22, dheight/2.002, dwidth/4.22, dheight/1.274)
                        dcanvas.coords("line10", dwidth/3.2, dheight/2.002, dwidth/3.2, dheight/1.274)
                        dcanvas.coords("line11", dwidth/2.3, dheight/2.002, dwidth/2.3, dheight/1.274)
                        dcanvas.coords("line12", dwidth/1.9, dheight/2.002, dwidth/1.9, dheight/1.274)
                        dcanvas.coords("line13", dwidth/1.6, dheight/2.002, dwidth/1.6, dheight/1.274)
                        dcanvas.coords("line14", dwidth/1.38, dheight/2.002, dwidth/1.38, dheight/1.274)
                        dcanvas.coords("line15", dwidth/1.28, dheight/2.002, dwidth/1.28, dheight/1.274)
                        dcanvas.coords("line16", dwidth/1.14, dheight/2.002, dwidth/1.14, dheight/1.274)

                        r1 = 25
                        x1 = dwidth/63
                        x2 = dwidth/1.021
                        y1 = dheight/14 
                        y2 = dheight/3.505

                        dcanvas.coords("poly1",x1 + r1,y1,
                        x1 + r1,y1,
                        x2 - r1,y1,
                        x2 - r1,y1,     
                        x2,y1,     
                        #--------------------
                        x2,y1 + r1,     
                        x2,y1 + r1,     
                        x2,y2 - r1,     
                        x2,y2 - r1,     
                        x2,y2,
                        #--------------------
                        x2 - r1,y2,     
                        x2 - r1,y2,     
                        x1 + r1,y2,
                        x1 + r1,y2,
                        x1,y2,
                        #--------------------
                        x1,y2 - r1,
                        x1,y2 - r1,
                        x1,y1 + r1,
                        x1,y1 + r1,
                        x1,y1,
                        )

                        dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                        
                        r2 = 25
                        x11 = dwidth/63
                        x21 = dwidth/1.021
                        y11 = dheight/2.8
                        y21 = dheight/0.55


                        dcanvas.coords("poly2",x11 + r2,y11,
                        x11 + r2,y11,
                        x21 - r2,y11,
                        x21 - r2,y11,     
                        x21,y11,     
                        #--------------------
                        x21,y11 + r2,     
                        x21,y11 + r2,     
                        x21,y21 - r2,     
                        x21,y21 - r2,     
                        x21,y21,
                        #--------------------
                        x21 - r2,y21,     
                        x21 - r2,y21,     
                        x11 + r2,y21,
                        x11 + r2,y21,
                        x11,y21,
                        #--------------------
                        x11,y21 - r2,
                        x11,y21 - r2,
                        x11,y11 + r2,
                        x11,y11 + r2,
                        x11,y11,
                        )

                        dcanvas.coords("label1",dwidth/2,dheight/8.24)
                        dcanvas.coords("label2",dwidth/12.67,dheight/1.71)
                        dcanvas.coords("label3",dwidth/5.5,dheight/1.71)
                        dcanvas.coords("label4",dwidth/3.63,dheight/1.71)
                        dcanvas.coords("label5",dwidth/2.67,dheight/1.71)
                        dcanvas.coords("label6",dwidth/2.08,dheight/1.71)
                        dcanvas.coords("label7",dwidth/1.735,dheight/1.71)
                        dcanvas.coords("label8",dwidth/1.48,dheight/1.71)
                        dcanvas.coords("label9",dwidth/1.327,dheight/1.71)
                        dcanvas.coords("label10",dwidth/1.206,dheight/1.71)
                        
                        dcanvas.coords("label11",dwidth/12.67,dheight/1.894)
                        dcanvas.coords("label12",dwidth/5.5,dheight/1.894)
                        dcanvas.coords("label13",dwidth/3.63,dheight/1.894)
                        dcanvas.coords("label14",dwidth/2.67,dheight/1.894)
                        dcanvas.coords("label15",dwidth/2.08,dheight/1.894)
                        dcanvas.coords("label16",dwidth/1.735,dheight/1.894)
                        dcanvas.coords("label17",dwidth/1.48,dheight/1.894)
                        dcanvas.coords("label18",dwidth/1.327,dheight/1.894)
                        dcanvas.coords("label19",dwidth/1.206,dheight/1.894)
                        dcanvas.coords("label20",dwidth/1.088,dheight/1.894)


                        dcanvas.coords("combo1",dwidth/1.28,dheight/2.261)
                        dcanvas.coords("combo2",dwidth/1.115,dheight/2.261)

                        dcanvas.coords("tree_main",dwidth/40,dheight/2)

                    
                    def sr_transCombo_options(event):
                        sr_Frame.grid_forget()
                        sr_Frame_1 = Frame(tab3_1,)
                        sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                        def responsive_widgets1(event):
                            dwidth = event.width
                            dheight = event.height
                            dcanvas = event.widget
                            
                            r1 = 25
                            x1 = dwidth/63
                            x2 = dwidth/1.021
                            y1 = dheight/14 
                            y2 = dheight/3.505

                            dcanvas.coords("poly1",x1 + r1,y1,
                            x1 + r1,y1,
                            x2 - r1,y1,
                            x2 - r1,y1,     
                            x2,y1,     
                            #--------------------
                            x2,y1 + r1,     
                            x2,y1 + r1,     
                            x2,y2 - r1,     
                            x2,y2 - r1,     
                            x2,y2,
                            #--------------------
                            x2 - r1,y2,     
                            x2 - r1,y2,     
                            x1 + r1,y2,
                            x1 + r1,y2,
                            x1,y2,
                            #--------------------
                            x1,y2 - r1,
                            x1,y2 - r1,
                            x1,y1 + r1,
                            x1,y1 + r1,
                            x1,y1,
                            )

                            dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                            
                            r2 = 25
                            x11 = dwidth/63
                            x21 = dwidth/1.021
                            y11 = dheight/2.8
                            y21 = dheight/0.45


                            dcanvas.coords("poly2",x11 + r2,y11,
                            x11 + r2,y11,
                            x21 - r2,y11,
                            x21 - r2,y11,     
                            x21,y11,     
                            #--------------------
                            x21,y11 + r2,     
                            x21,y11 + r2,     
                            x21,y21 - r2,     
                            x21,y21 - r2,     
                            x21,y21,
                            #--------------------
                            x21 - r2,y21,     
                            x21 - r2,y21,     
                            x11 + r2,y21,
                            x11 + r2,y21,
                            x11,y21,
                            #--------------------
                            x11,y21 - r2,
                            x11,y21 - r2,
                            x11,y11 + r2,
                            x11,y11 + r2,
                            x11,y11,
                            )

                            r2 = 25
                            x11 = dwidth/63
                            x21 = dwidth/1.021
                            y11 = dheight/2.8
                            y21 = dheight/0.35


                            dcanvas.coords("poly3",x11 + r2,y11,
                            x11 + r2,y11,
                            x21 - r2,y11,
                            x21 - r2,y11,     
                            x21,y11,     
                            #--------------------
                            x21,y11 + r2,     
                            x21,y11 + r2,     
                            x21,y21 - r2,     
                            x21,y21 - r2,     
                            x21,y21,
                            #--------------------
                            x21 - r2,y21,     
                            x21 - r2,y21,     
                            x11 + r2,y21,
                            x11 + r2,y21,
                            x11,y21,
                            #--------------------
                            x11,y21 - r2,
                            x11,y21 - r2,
                            x11,y11 + r2,
                            x11,y11 + r2,
                            x11,y11,
                            )

                            r2 = 25
                            x11 = dwidth/63
                            x21 = dwidth/1.021
                            y11 = dheight/2.8
                            y21 = dheight/0.65


                            dcanvas.coords("poly4",x11 + r2,y11,
                            x11 + r2,y11,
                            x21 - r2,y11,
                            x21 - r2,y11,     
                            x21,y11,     
                            #--------------------
                            x21,y11 + r2,     
                            x21,y11 + r2,     
                            x21,y21 - r2,     
                            x21,y21 - r2,     
                            x21,y21,
                            #--------------------
                            x21 - r2,y21,     
                            x21 - r2,y21,     
                            x11 + r2,y21,
                            x11 + r2,y21,
                            x11,y21,
                            #--------------------
                            x11,y21 - r2,
                            x11,y21 - r2,
                            x11,y11 + r2,
                            x11,y11 + r2,
                            x11,y11,
                            )

                            r2 = 25
                            x11 = dwidth/63
                            x21 = dwidth/1.021
                            y11 = dheight/2.8
                            y21 = dheight/0.4


                            dcanvas.coords("poly5",x11 + r2,y11,
                            x11 + r2,y11,
                            x21 - r2,y11,
                            x21 - r2,y11,     
                            x21,y11,     
                            #--------------------
                            x21,y11 + r2,     
                            x21,y11 + r2,     
                            x21,y21 - r2,     
                            x21,y21 - r2,     
                            x21,y21,
                            #--------------------
                            x21 - r2,y21,     
                            x21 - r2,y21,     
                            x11 + r2,y21,
                            x11 + r2,y21,
                            x11,y21,
                            #--------------------
                            x11,y21 - r2,
                            x11,y21 - r2,
                            x11,y11 + r2,
                            x11,y11 + r2,
                            x11,y11,
                            )
                            

                            dcanvas.coords("label1",dwidth/2,dheight/8.24)
                            dcanvas.coords("label2",dwidth/2,dheight/2.4)

                            #payment-------------
                            try:
                                dcanvas.coords("label3",dwidth/7.91,dheight/1.76)
                                dcanvas.coords("label4",dwidth/2.28,dheight/1.76)
                                dcanvas.coords("label5",dwidth/1.23,dheight/1.76)
                                dcanvas.coords("label6",dwidth/6.1,dheight/1.445)
                                dcanvas.coords("label7",dwidth/6.1,dheight/1.235)
                                dcanvas.coords("label8",dwidth/1.23,dheight/1.445)
                                dcanvas.coords("label9",dwidth/1.23,dheight/1.235)
                                dcanvas.coords("label10",dwidth/1.23,dheight/1.09)
                                dcanvas.coords("label11",dwidth/1.23,dheight/1.04)
                                dcanvas.coords("label12",dwidth/16.2,dheight/0.97)
                                dcanvas.coords("label13",dwidth/9.8,dheight/0.94)
                                dcanvas.coords("label14",dwidth/3.7,dheight/0.94)
                                dcanvas.coords("label15",dwidth/2.12,dheight/0.94)
                                dcanvas.coords("label16",dwidth/1.56,dheight/0.94)
                                dcanvas.coords("label17",dwidth/1.245,dheight/0.94)
                                dcanvas.coords("label18",dwidth/1.53,dheight/0.583)
                                dcanvas.coords("label19",dwidth/1.53,dheight/0.55)
                                dcanvas.coords("label20",dwidth/16.2,dheight/0.91)

                                dcanvas.coords("entry1",dwidth/2.5,dheight/1.68)
                                dcanvas.coords("entry2",dwidth/1.35,dheight/1.68)
                                dcanvas.coords("entry3",dwidth/11,dheight/1.195)
                                dcanvas.coords("entry4",dwidth/1.35,dheight/1.195)
                                dcanvas.coords("entry5",dwidth/1.214,dheight/0.583)
                                dcanvas.coords("entry6",dwidth/1.214,dheight/0.55)
                                try:
                                    dcanvas.coords("entry7",dwidth/11,dheight/1.1)
                                except:
                                    pass
                                dcanvas.coords("entry8",dwidth/7.13,dheight/0.9)
                                dcanvas.coords("entry9",dwidth/3.15,dheight/0.9)
                                dcanvas.coords("entry10",dwidth/2.015,dheight/0.9)
                                dcanvas.coords("entry11",dwidth/1.48,dheight/0.9)
                                dcanvas.coords("entry12",dwidth/1.175,dheight/0.9)

                                dcanvas.coords("combo1",dwidth/11,dheight/1.68)
                                dcanvas.coords("combo2",dwidth/1.35,dheight/1.39)

                                dcanvas.coords("button1",dwidth/3.89,dheight/1.6115)
                                dcanvas.coords("button2",dwidth/1.103,dheight/1.3415)
                                dcanvas.coords("button3",dwidth/27,dheight/3)
                                dcanvas.coords("button4",dwidth/1.16,dheight/0.51)

                                dcanvas.coords("line1",dwidth/31.6,dheight/1.002,dwidth/1.039,dheight/1.002)
                                dcanvas.coords("line2",dwidth/31.6,dheight/0.94,dwidth/1.039,dheight/0.94)
                                dcanvas.coords("line3",dwidth/31.6,dheight/1.002,dwidth/31.6,dheight/0.878)
                                dcanvas.coords("line4",dwidth/1.039,dheight/1.002,dwidth/1.039,dheight/0.878)
                                dcanvas.coords("line5",dwidth/11,dheight/1.002,dwidth/11,dheight/0.878)
                                dcanvas.coords("line6",dwidth/4,dheight/1.002,dwidth/4,dheight/0.878)
                                dcanvas.coords("line7",dwidth/2.8,dheight/1.002,dwidth/2.8,dheight/0.878)
                                dcanvas.coords("line8",dwidth/1.65,dheight/1.002,dwidth/1.65,dheight/0.878)
                                dcanvas.coords("line9",dwidth/1.25,dheight/1.002,dwidth/1.25,dheight/0.878)
                                dcanvas.coords("line10",dwidth/1.7,dheight/0.6,dwidth/1.7,dheight/0.535)
                                dcanvas.coords("line11",dwidth/1.078,dheight/0.6,dwidth/1.078,dheight/0.535)
                                dcanvas.coords("line12",dwidth/1.7,dheight/0.6,dwidth/1.078,dheight/0.6)
                                dcanvas.coords("line13",dwidth/1.7,dheight/0.566,dwidth/1.078,dheight/0.566)
                                dcanvas.coords("line14",dwidth/1.7,dheight/0.535,dwidth/1.078,dheight/0.535)
                                dcanvas.coords("line15",dwidth/1.39,dheight/0.6,dwidth/1.39,dheight/0.535)
                                dcanvas.coords("line16",dwidth/31.6,dheight/0.878,dwidth/1.039,dheight/0.878)
                            except:
                                pass

                            #sales receipt-----------
                            try:
                                dcanvas.coords("label21",dwidth/7.91,dheight/1.76)
                                dcanvas.coords("label22",dwidth/2.47,dheight/1.76)
                                dcanvas.coords("label23",dwidth/6.13,dheight/1.44)
                                dcanvas.coords("label24",dwidth/2.27,dheight/1.45)
                                dcanvas.coords("label25",dwidth/6.13,dheight/0.907)
                                dcanvas.coords("label26",dwidth/6.13,dheight/0.81)
                                dcanvas.coords("label27",dwidth/2.27,dheight/0.81)
                                try:
                                    dcanvas.coords("label28",dwidth/1.395,dheight/0.81)
                                except:
                                    pass
                                dcanvas.coords("label29",dwidth/1.225,dheight/1.75)
                                dcanvas.coords("label30",dwidth/1.2,dheight/1.63)
                                dcanvas.coords("label31",dwidth/20,dheight/0.675)
                                dcanvas.coords("label32",dwidth/20,dheight/0.62)
                                dcanvas.coords("label64",dwidth/20,dheight/0.565)
                                dcanvas.coords("label65",dwidth/20,dheight/0.519)
                                dcanvas.coords("label66",dwidth/20,dheight/0.481)
                                dcanvas.coords("label67",dwidth/2.06,dheight/0.6)
                                dcanvas.coords("label68",dwidth/2.06,dheight/0.549)
                                dcanvas.coords("label69",dwidth/2.06,dheight/0.506)
                                dcanvas.coords("label70",dwidth/2.06,dheight/0.47)
                                dcanvas.coords("label33",dwidth/7.91,dheight/0.675)
                                dcanvas.coords("label34",dwidth/4.2,dheight/0.675)
                                dcanvas.coords("label35",dwidth/2.74,dheight/0.675)
                                dcanvas.coords("label36",dwidth/2.07,dheight/0.675)
                                dcanvas.coords("label37",dwidth/1.68,dheight/0.675)
                                dcanvas.coords("label38",dwidth/1.39,dheight/0.675)
                                dcanvas.coords("label39",dwidth/1.205,dheight/0.675)
                                dcanvas.coords("label40",dwidth/1.52,dheight/0.436)
                                dcanvas.coords("label41",dwidth/1.52,dheight/0.412)
                                dcanvas.coords("label42",dwidth/1.52,dheight/0.3905)
                                dcanvas.coords("label43",dwidth/1.54,dheight/1.45)

                                dcanvas.coords("label44",dwidth/20,dheight/1.135)
                                dcanvas.coords("label45",dwidth/20,dheight/1.03)
                                dcanvas.coords("label46",dwidth/7.4,dheight/1.135)
                                dcanvas.coords("label47",dwidth/3.342,dheight/1.135)
                                dcanvas.coords("label48",dwidth/2.19,dheight/1.135)
                                dcanvas.coords("label49",dwidth/1.68,dheight/1.135)
                                dcanvas.coords("label50",dwidth/1.328,dheight/1.135)
                                dcanvas.coords("label51",dwidth/1.11,dheight/1.135)
                                dcanvas.coords("label52",dwidth/1.41,dheight/0.83)
                                dcanvas.coords("label53",dwidth/1.41,dheight/0.77)
                                dcanvas.coords("label54",dwidth/1.41,dheight/0.715)

                                dcanvas.coords("label55",dwidth/2.4,dheight/2.254)
                                dcanvas.coords("label56",dwidth/1.49,dheight/2.254)
                                dcanvas.coords("label57",dwidth/2.4,dheight/1.8)
                                dcanvas.coords("label58",dwidth/2.4,dheight/1.5)
                                dcanvas.coords("label59",dwidth/2.4,dheight/1.28)
                                dcanvas.coords("label60",dwidth/1.598,dheight/1.28)
                                dcanvas.coords("label61",dwidth/1.212,dheight/1.28)
                                dcanvas.coords("label62",dwidth/2.4,dheight/1.105)
                                dcanvas.coords("label63",dwidth/2.4,dheight/0.979)

                                dcanvas.coords("entry13",dwidth/2.72,dheight/1.68)
                                dcanvas.coords("entry14",dwidth/11,dheight/1.39)
                                dcanvas.coords("entry15",dwidth/11,dheight/0.885)
                                dcanvas.coords("entry16",dwidth/11,dheight/0.79)
                                dcanvas.coords("entry17",dwidth/2.72,dheight/0.79)
                                dcanvas.coords("entry18",dwidth/5.13,dheight/0.63)
                                dcanvas.coords("entry19",dwidth/3.39,dheight/0.63)
                                dcanvas.coords("entry20",dwidth/2.24,dheight/0.63)
                                dcanvas.coords("entry21",dwidth/1.85,dheight/0.63)
                                dcanvas.coords("entry22",dwidth/1.5,dheight/0.63)
                                dcanvas.coords("entry39",dwidth/5.13,dheight/0.5745)
                                dcanvas.coords("entry40",dwidth/3.39,dheight/0.5745)
                                dcanvas.coords("entry41",dwidth/2.24,dheight/0.5745)
                                dcanvas.coords("entry42",dwidth/1.85,dheight/0.5745)
                                dcanvas.coords("entry43",dwidth/1.5,dheight/0.5745)
                                dcanvas.coords("entry44",dwidth/5.13,dheight/0.527)
                                dcanvas.coords("entry45",dwidth/3.39,dheight/0.527)
                                dcanvas.coords("entry46",dwidth/2.24,dheight/0.527)
                                dcanvas.coords("entry47",dwidth/1.85,dheight/0.527)
                                dcanvas.coords("entry48",dwidth/1.5,dheight/0.527)
                                dcanvas.coords("entry49",dwidth/5.13,dheight/0.487)
                                dcanvas.coords("entry50",dwidth/3.39,dheight/0.487)
                                dcanvas.coords("entry51",dwidth/2.24,dheight/0.487)
                                dcanvas.coords("entry52",dwidth/1.85,dheight/0.487)
                                dcanvas.coords("entry53",dwidth/1.5,dheight/0.487)

                                dcanvas.coords("entry23",dwidth/1.35,dheight/0.443)
                                dcanvas.coords("entry24",dwidth/1.35,dheight/0.4175)
                                dcanvas.coords("entry25",dwidth/1.35,dheight/0.394)
                                dcanvas.coords("entry26",dwidth/11,dheight/0.751)

                                dcanvas.coords("entry27",dwidth/4.7,dheight/1.057)
                                dcanvas.coords("entry28",dwidth/2.43,dheight/1.057)
                                dcanvas.coords("entry29",dwidth/1.91,dheight/1.057)
                                dcanvas.coords("entry30",dwidth/1.46,dheight/1.057)

                                dcanvas.coords("entry31",dwidth/1.275,dheight/0.85)
                                dcanvas.coords("entry32",dwidth/1.275,dheight/0.784)
                                dcanvas.coords("entry33",dwidth/1.275,dheight/0.727)
                                dcanvas.coords("entry34",dwidth/1.525,dheight/1.45)

                                dcanvas.coords("entry35",dwidth/1.81,dheight/1.24)
                                dcanvas.coords("entry54",dwidth/1.55,dheight/1.24)
                                dcanvas.coords("entry36",dwidth/1.33,dheight/1.24)
                                dcanvas.coords("entry55",dwidth/1.185,dheight/1.24)
                                dcanvas.coords("entry37",dwidth/2.91,dheight/1.08)
                                dcanvas.coords("entry56",dwidth/1.55,dheight/1.08)
                                dcanvas.coords("entry38",dwidth/2.91,dheight/0.96)

                                dcanvas.coords("combo3",dwidth/11,dheight/1.68)
                                try:
                                    dcanvas.coords("combo4",dwidth/1.55,dheight/0.79)
                                except:
                                    pass
                                dcanvas.coords("combo5",dwidth/7.909,dheight/0.62)
                                dcanvas.coords("combo6",dwidth/1.206,dheight/0.62)
                                dcanvas.coords("combo14",dwidth/7.909,dheight/0.5655)
                                dcanvas.coords("combo15",dwidth/1.206,dheight/0.5655)
                                dcanvas.coords("combo16",dwidth/7.909,dheight/0.519)
                                dcanvas.coords("combo17",dwidth/1.206,dheight/0.519)
                                dcanvas.coords("combo18",dwidth/7.909,dheight/0.481)
                                dcanvas.coords("combo19",dwidth/1.206,dheight/0.481)

                                dcanvas.coords("combo7",dwidth/7.4,dheight/1.035)
                                dcanvas.coords("combo8",dwidth/1.111,dheight/1.035)

                                dcanvas.coords("combo9",dwidth/1.294,dheight/2.05)
                                dcanvas.coords("combo10",dwidth/2.91,dheight/1.73)
                                dcanvas.coords("combo11",dwidth/2.91,dheight/1.45)
                                dcanvas.coords("combo12",dwidth/2.91,dheight/1.24)

                                dcanvas.coords("button5",dwidth/3.89,dheight/1.61)
                                try:
                                    dcanvas.coords("button6",dwidth/1.23,dheight/0.775)
                                except:
                                    pass
                                dcanvas.coords("button7",dwidth/1.114,dheight/0.365)
                                dcanvas.coords("button8",dwidth/1.114,dheight/0.45)

                                dcanvas.coords("button9",dwidth/1.09,dheight/2.04)
                                dcanvas.coords("button10",dwidth/1.09,dheight/1.66)
                                dcanvas.coords("button11",dwidth/1.57,dheight/0.79)

                                dcanvas.coords("button12",dwidth/1.09,dheight/0.619)
                                dcanvas.coords("button13",dwidth/1.09,dheight/0.565)
                                dcanvas.coords("button14",dwidth/1.09,dheight/0.518)
                                dcanvas.coords("button15",dwidth/1.09,dheight/0.48)
                                
                                dcanvas.coords("line17",dwidth/31.6,dheight/0.7,dwidth/1.039,dheight/0.7)
                                dcanvas.coords("line18",dwidth/31.6,dheight/0.65,dwidth/1.039,dheight/0.65)
                                dcanvas.coords("line19",dwidth/31.6,dheight/0.59,dwidth/1.039,dheight/0.59)
                                dcanvas.coords("line20",dwidth/31.6,dheight/0.541,dwidth/1.039,dheight/0.541)
                                dcanvas.coords("line21",dwidth/31.6,dheight/0.499,dwidth/1.039,dheight/0.499)
                                dcanvas.coords("line22",dwidth/31.6,dheight/0.464,dwidth/1.039,dheight/0.464)
                                dcanvas.coords("line23",dwidth/31.6,dheight/0.7,dwidth/31.6,dheight/0.464)
                                dcanvas.coords("line24",dwidth/1.039,dheight/0.7,dwidth/1.039,dheight/0.464)
                                dcanvas.coords("line25",dwidth/15,dheight/0.7,dwidth/15,dheight/0.464)
                                dcanvas.coords("line26",dwidth/5.35,dheight/0.7,dwidth/5.35,dheight/0.464)
                                dcanvas.coords("line27",dwidth/3.5,dheight/0.7,dwidth/3.5,dheight/0.464)
                                dcanvas.coords("line28",dwidth/2.28,dheight/0.7,dwidth/2.28,dheight/0.464)
                                dcanvas.coords("line29",dwidth/1.88,dheight/0.7,dwidth/1.88,dheight/0.464)
                                dcanvas.coords("line30",dwidth/1.52,dheight/0.7,dwidth/1.52,dheight/0.464)
                                dcanvas.coords("line31",dwidth/1.277,dheight/0.7,dwidth/1.277,dheight/0.464)
                                dcanvas.coords("line58",dwidth/1.144,dheight/0.7,dwidth/1.144,dheight/0.464)

                                dcanvas.coords("line32",dwidth/1.7,dheight/0.451,dwidth/1.039,dheight/0.451)
                                dcanvas.coords("line33",dwidth/1.7,dheight/0.425,dwidth/1.039,dheight/0.425)
                                dcanvas.coords("line34",dwidth/1.7,dheight/0.401,dwidth/1.039,dheight/0.401)
                                dcanvas.coords("line35",dwidth/1.7,dheight/0.38,dwidth/1.039,dheight/0.38)
                                dcanvas.coords("line36",dwidth/1.7,dheight/0.451,dwidth/1.7,dheight/0.38)
                                dcanvas.coords("line37",dwidth/1.365,dheight/0.451,dwidth/1.365,dheight/0.38)
                                dcanvas.coords("line38",dwidth/1.039,dheight/0.451,dwidth/1.039,dheight/0.38)

                                dcanvas.coords("line39",dwidth/31.6,dheight/1.2,dwidth/1.039,dheight/1.2)
                                dcanvas.coords("line40",dwidth/31.6,dheight/1.085,dwidth/1.039,dheight/1.085)
                                dcanvas.coords("line41",dwidth/31.6,dheight/0.99,dwidth/1.039,dheight/0.99)
                                dcanvas.coords("line42",dwidth/31.6,dheight/0.91,dwidth/1.039,dheight/0.91)
                                dcanvas.coords("line43",dwidth/31.6,dheight/1.2,dwidth/31.6,dheight/0.91)
                                dcanvas.coords("line44",dwidth/15,dheight/1.2,dwidth/15,dheight/0.91)
                                dcanvas.coords("line45",dwidth/4.9,dheight/1.2,dwidth/4.9,dheight/0.91)
                                dcanvas.coords("line46",dwidth/2.5,dheight/1.2,dwidth/2.5,dheight/0.91)
                                dcanvas.coords("line47",dwidth/1.95,dheight/1.2,dwidth/1.95,dheight/0.91)
                                dcanvas.coords("line48",dwidth/1.48,dheight/1.2,dwidth/1.48,dheight/0.91)
                                dcanvas.coords("line49",dwidth/1.195,dheight/1.2,dwidth/1.195,dheight/0.91)
                                dcanvas.coords("line50",dwidth/1.039,dheight/1.2,dwidth/1.039,dheight/0.91)

                                dcanvas.coords("line51",dwidth/1.55,dheight/0.87,dwidth/1.039,dheight/0.87)
                                dcanvas.coords("line52",dwidth/1.55,dheight/0.8,dwidth/1.039,dheight/0.8)
                                dcanvas.coords("line53",dwidth/1.55,dheight/0.74,dwidth/1.039,dheight/0.74)
                                dcanvas.coords("line54",dwidth/1.55,dheight/0.69,dwidth/1.039,dheight/0.69)
                                dcanvas.coords("line55",dwidth/1.55,dheight/0.87,dwidth/1.55,dheight/0.69)
                                dcanvas.coords("line56",dwidth/1.29,dheight/0.87,dwidth/1.29,dheight/0.69)
                                dcanvas.coords("line57",dwidth/1.039,dheight/0.87,dwidth/1.039,dheight/0.69)

                                dcanvas.coords("line59",dwidth/31.6,dheight/0.7,dwidth/1.039,dheight/0.7)
                                dcanvas.coords("line60",dwidth/31.6,dheight/0.65,dwidth/1.039,dheight/0.65)
                                dcanvas.coords("line61",dwidth/31.6,dheight/0.59,dwidth/1.039,dheight/0.59)
                                dcanvas.coords("line62",dwidth/31.6,dheight/0.541,dwidth/1.039,dheight/0.541)
                                dcanvas.coords("line63",dwidth/31.6,dheight/0.499,dwidth/1.039,dheight/0.499)
                                dcanvas.coords("line64",dwidth/31.6,dheight/0.464,dwidth/1.039,dheight/0.464)
                                dcanvas.coords("line65",dwidth/31.6,dheight/0.7,dwidth/31.6,dheight/0.464)
                                dcanvas.coords("line66",dwidth/1.039,dheight/0.7,dwidth/1.039,dheight/0.464)
                                dcanvas.coords("line67",dwidth/15,dheight/0.7,dwidth/15,dheight/0.464)
                                dcanvas.coords("line68",dwidth/4.5,dheight/0.7,dwidth/4.5,dheight/0.464)
                                dcanvas.coords("line69",dwidth/2.5,dheight/0.7,dwidth/2.5,dheight/0.464)
                                dcanvas.coords("line70",dwidth/2,dheight/0.7,dwidth/2,dheight/0.464)
                                dcanvas.coords("line71",dwidth/1.55,dheight/0.7,dwidth/1.55,dheight/0.464)
                                dcanvas.coords("line72",dwidth/1.277,dheight/0.7,dwidth/1.277,dheight/0.464)
                                dcanvas.coords("line73",dwidth/1.144,dheight/0.7,dwidth/1.144,dheight/0.464)

                                dcanvas.coords("line74",dwidth/1.7,dheight/0.451,dwidth/1.039,dheight/0.451)
                                dcanvas.coords("line75",dwidth/1.7,dheight/0.425,dwidth/1.039,dheight/0.425)
                                dcanvas.coords("line76",dwidth/1.7,dheight/0.401,dwidth/1.039,dheight/0.401)
                                dcanvas.coords("line77",dwidth/1.7,dheight/0.38,dwidth/1.039,dheight/0.38)
                                dcanvas.coords("line78",dwidth/1.7,dheight/0.451,dwidth/1.7,dheight/0.38)
                                dcanvas.coords("line79",dwidth/1.365,dheight/0.451,dwidth/1.365,dheight/0.38)
                                dcanvas.coords("line80",dwidth/1.039,dheight/0.451,dwidth/1.039,dheight/0.38)

                                dcanvas.coords("label71",dwidth/20,dheight/0.675)
                                dcanvas.coords("label72",dwidth/20,dheight/0.62)
                                dcanvas.coords("label73",dwidth/20,dheight/0.565)
                                dcanvas.coords("label74",dwidth/20,dheight/0.519)
                                dcanvas.coords("label75",dwidth/20,dheight/0.481)
                                dcanvas.coords("label76",dwidth/7,dheight/0.675)
                                dcanvas.coords("label77",dwidth/3.2,dheight/0.675)
                                dcanvas.coords("label78",dwidth/2.22,dheight/0.675)
                                dcanvas.coords("label79",dwidth/1.75,dheight/0.675)
                                dcanvas.coords("label80",dwidth/1.4,dheight/0.675)
                                dcanvas.coords("label81",dwidth/1.205,dheight/0.675)
                                dcanvas.coords("label82",dwidth/2.22,dheight/0.6)
                                dcanvas.coords("label83",dwidth/2.22,dheight/0.549)
                                dcanvas.coords("label84",dwidth/2.22,dheight/0.506)
                                dcanvas.coords("label85",dwidth/2.22,dheight/0.47)

                                dcanvas.coords("combo20",dwidth/6.98,dheight/0.62)
                                dcanvas.coords("combo21",dwidth/1.206,dheight/0.62)
                                dcanvas.coords("combo22",dwidth/6.98,dheight/0.5655)
                                dcanvas.coords("combo23",dwidth/1.206,dheight/0.5655)
                                dcanvas.coords("combo24",dwidth/6.98,dheight/0.519)
                                dcanvas.coords("combo25",dwidth/1.206,dheight/0.519)
                                dcanvas.coords("combo26",dwidth/6.98,dheight/0.481)
                                dcanvas.coords("combo27",dwidth/1.206,dheight/0.481)

                                dcanvas.coords("entry57",dwidth/4.32,dheight/0.63)
                                dcanvas.coords("entry58",dwidth/2.45,dheight/0.63)
                                dcanvas.coords("entry59",dwidth/1.965,dheight/0.63)
                                dcanvas.coords("entry60",dwidth/1.525,dheight/0.63)
                                dcanvas.coords("entry61",dwidth/4.32,dheight/0.5745)
                                dcanvas.coords("entry62",dwidth/2.45,dheight/0.5745)
                                dcanvas.coords("entry63",dwidth/1.965,dheight/0.5745)
                                dcanvas.coords("entry64",dwidth/1.525,dheight/0.5745)
                                dcanvas.coords("entry65",dwidth/4.32,dheight/0.527)
                                dcanvas.coords("entry66",dwidth/2.45,dheight/0.527)
                                dcanvas.coords("entry67",dwidth/1.965,dheight/0.527)
                                dcanvas.coords("entry68",dwidth/1.525,dheight/0.527)
                                dcanvas.coords("entry69",dwidth/4.32,dheight/0.487)
                                dcanvas.coords("entry70",dwidth/2.45,dheight/0.487)
                                dcanvas.coords("entry71",dwidth/1.965,dheight/0.487)
                                dcanvas.coords("entry72",dwidth/1.525,dheight/0.487)

                                dcanvas.coords("line81",dwidth/1.465,dheight/0.7,dwidth/1.465,dheight/0.464)
                                dcanvas.coords("line82",dwidth/1.2,dheight/0.7,dwidth/1.2,dheight/0.464)
                                
                                dcanvas.coords("label86",dwidth/1.65,dheight/0.675)
                                dcanvas.coords("label87",dwidth/1.325,dheight/0.675)
                                dcanvas.coords("label88",dwidth/1.115,dheight/0.675)

                                dcanvas.coords("entry73",dwidth/5.13,dheight/0.63)
                                dcanvas.coords("entry74",dwidth/3.39,dheight/0.63)
                                dcanvas.coords("entry75",dwidth/2.24,dheight/0.63)
                                dcanvas.coords("entry76",dwidth/1.848,dheight/0.63)
                                dcanvas.coords("entry77",dwidth/1.45,dheight/0.63)
                                dcanvas.coords("entry78",dwidth/5.13,dheight/0.5745)
                                dcanvas.coords("entry79",dwidth/3.39,dheight/0.5745)
                                dcanvas.coords("entry80",dwidth/2.24,dheight/0.5745)
                                dcanvas.coords("entry81",dwidth/1.848,dheight/0.5745)
                                dcanvas.coords("entry82",dwidth/1.45,dheight/0.5745)
                                dcanvas.coords("entry83",dwidth/5.13,dheight/0.527)
                                dcanvas.coords("entry84",dwidth/3.39,dheight/0.527)
                                dcanvas.coords("entry85",dwidth/2.24,dheight/0.527)
                                dcanvas.coords("entry86",dwidth/1.848,dheight/0.527)
                                dcanvas.coords("entry87",dwidth/1.45,dheight/0.527)
                                dcanvas.coords("entry88",dwidth/5.13,dheight/0.487)
                                dcanvas.coords("entry89",dwidth/3.39,dheight/0.487)
                                dcanvas.coords("entry90",dwidth/2.24,dheight/0.487)
                                dcanvas.coords("entry91",dwidth/1.848,dheight/0.487)
                                dcanvas.coords("entry92",dwidth/1.45,dheight/0.487)

                                dcanvas.coords("combo28",dwidth/1.112,dheight/0.62)
                                dcanvas.coords("combo29",dwidth/1.112,dheight/0.5655)
                                dcanvas.coords("combo30",dwidth/1.112,dheight/0.519)
                                dcanvas.coords("combo31",dwidth/1.112,dheight/0.481)

                                dcanvas.coords("line83",dwidth/31.6,dheight/1.12,dwidth/1.039,dheight/1.12)
                                dcanvas.coords("line84",dwidth/31.6,dheight/1,dwidth/1.039,dheight/1)
                                dcanvas.coords("line85",dwidth/31.6,dheight/0.87,dwidth/1.039,dheight/0.87)
                                dcanvas.coords("line86",dwidth/31.6,dheight/0.77,dwidth/1.039,dheight/0.77)
                                dcanvas.coords("line87",dwidth/31.6,dheight/0.69,dwidth/1.039,dheight/0.69)
                                dcanvas.coords("line88",dwidth/31.6,dheight/0.625,dwidth/1.039,dheight/0.625)
                                dcanvas.coords("line89",dwidth/31.6,dheight/1.12,dwidth/31.6,dheight/0.625)
                                dcanvas.coords("line90",dwidth/1.039,dheight/1.12,dwidth/1.039,dheight/0.625)
                                dcanvas.coords("line91",dwidth/15,dheight/1.12,dwidth/15,dheight/0.625)
                                dcanvas.coords("line92",dwidth/4.5,dheight/1.12,dwidth/4.5,dheight/0.625)
                                dcanvas.coords("line93",dwidth/2.5,dheight/1.12,dwidth/2.5,dheight/0.625)
                                dcanvas.coords("line94",dwidth/2,dheight/1.12,dwidth/2,dheight/0.625)
                                dcanvas.coords("line95",dwidth/1.5,dheight/1.12,dwidth/1.5,dheight/0.625)
                                dcanvas.coords("line96",dwidth/1.2,dheight/1.12,dwidth/1.2,dheight/0.625)

                                dcanvas.coords("line97",dwidth/1.7,dheight/0.6,dwidth/1.039,dheight/0.6)
                                dcanvas.coords("line98",dwidth/1.7,dheight/0.55,dwidth/1.039,dheight/0.55)
                                dcanvas.coords("line99",dwidth/1.7,dheight/0.507,dwidth/1.039,dheight/0.507)
                                dcanvas.coords("line100",dwidth/1.7,dheight/0.47,dwidth/1.039,dheight/0.47)
                                dcanvas.coords("line101",dwidth/1.7,dheight/0.6,dwidth/1.7,dheight/0.47)
                                dcanvas.coords("line102",dwidth/1.365,dheight/0.6,dwidth/1.365,dheight/0.47)
                                dcanvas.coords("line103",dwidth/1.039,dheight/0.6,dwidth/1.039,dheight/0.47)

                                dcanvas.coords("label89",dwidth/20,dheight/1.05)
                                dcanvas.coords("label90",dwidth/20,dheight/0.925)
                                dcanvas.coords("label91",dwidth/20,dheight/0.815)
                                dcanvas.coords("label92",dwidth/20,dheight/0.725)
                                dcanvas.coords("label93",dwidth/20,dheight/0.655)
                                dcanvas.coords("label94",dwidth/7,dheight/1.05)
                                dcanvas.coords("label95",dwidth/3.2,dheight/1.05)
                                dcanvas.coords("label96",dwidth/2.22,dheight/1.05)
                                dcanvas.coords("label97",dwidth/1.72,dheight/1.05)
                                dcanvas.coords("label98",dwidth/1.34,dheight/1.05)
                                dcanvas.coords("label99",dwidth/1.121,dheight/1.05)

                                dcanvas.coords("label100",dwidth/1.52,dheight/0.572)
                                dcanvas.coords("label101",dwidth/1.52,dheight/0.528)
                                dcanvas.coords("label102",dwidth/1.52,dheight/0.487)

                                dcanvas.coords("label103",dwidth/2.22,dheight/0.89)
                                dcanvas.coords("label104",dwidth/2.22,dheight/0.785)
                                dcanvas.coords("label105",dwidth/2.22,dheight/0.701)
                                dcanvas.coords("label106",dwidth/2.22,dheight/0.635)

                                dcanvas.coords("entry93",dwidth/4.32,dheight/0.952)
                                dcanvas.coords("entry94",dwidth/2.45,dheight/0.952)
                                dcanvas.coords("entry95",dwidth/1.967,dheight/0.952)
                                dcanvas.coords("entry96",dwidth/1.485,dheight/0.952)
                                dcanvas.coords("entry97",dwidth/4.32,dheight/0.835)
                                dcanvas.coords("entry98",dwidth/2.45,dheight/0.835)
                                dcanvas.coords("entry99",dwidth/1.967,dheight/0.835)
                                dcanvas.coords("entry100",dwidth/1.485,dheight/0.835)
                                dcanvas.coords("entry101",dwidth/4.32,dheight/0.742)
                                dcanvas.coords("entry102",dwidth/2.45,dheight/0.742)
                                dcanvas.coords("entry103",dwidth/1.967,dheight/0.742)
                                dcanvas.coords("entry104",dwidth/1.485,dheight/0.742)
                                dcanvas.coords("entry105",dwidth/4.32,dheight/0.667)
                                dcanvas.coords("entry106",dwidth/2.45,dheight/0.667)
                                dcanvas.coords("entry107",dwidth/1.967,dheight/0.667)
                                dcanvas.coords("entry108",dwidth/1.485,dheight/0.667)

                                dcanvas.coords("entry109",dwidth/1.35,dheight/0.582)
                                dcanvas.coords("entry110",dwidth/1.35,dheight/0.535)
                                dcanvas.coords("entry111",dwidth/1.35,dheight/0.494)

                                dcanvas.coords("combo32",dwidth/6.98,dheight/0.93)
                                dcanvas.coords("combo33",dwidth/1.112,dheight/0.93)
                                dcanvas.coords("combo34",dwidth/6.98,dheight/0.815)
                                dcanvas.coords("combo35",dwidth/1.112,dheight/0.815)
                                dcanvas.coords("combo36",dwidth/6.98,dheight/0.728)
                                dcanvas.coords("combo37",dwidth/1.112,dheight/0.728)
                                dcanvas.coords("combo38",dwidth/6.98,dheight/0.655)
                                dcanvas.coords("combo39",dwidth/1.112,dheight/0.655)
                            except:
                                pass

                            try:
                                dcanvas.coords("date",dwidth/2.71,dheight/1.392)
                                dcanvas.coords("date1",dwidth/1.73,dheight/1.392)
                                dcanvas.coords("date2",dwidth/11,dheight/1.392)
                                dcanvas.coords("date3",dwidth/2.91,dheight/2.154)
                                dcanvas.coords("date4",dwidth/11,dheight/1.39)
                            except:
                                pass

                            dcanvas.coords("image1",dwidth/30,dheight/2.37)

                            dcanvas.coords("tree1",dwidth/15,dheight/0.79)
                            dcanvas.coords("combo13",dwidth/1.13,dheight/0.82)
                            dcanvas.coords("scroll",dwidth/1.087,dheight/0.695)

                            #invoice
                            try:
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("aipoly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("ailabel1",dwidth/2.45,dheight/8.24)
                                    dcanvas.coords("aihline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)

                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.20


                                    dcanvas.coords("aipoly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("ailabel2",dwidth/2.45,dheight/2.34)
                                    dcanvas.coords("ailabel3",dwidth/22.80,dheight/1.90)
                                    dcanvas.coords("ailabel4",dwidth/20.00,dheight/1.65)
                                    dcanvas.coords("ailabel5",dwidth/20.00,dheight/1.37)
                                    dcanvas.coords("ailabel6",dwidth/3.34,dheight/1.37)
                                    dcanvas.coords("ailabel7",dwidth/21.66 ,dheight/1.12)
                                    dcanvas.coords("ailabel8",dwidth/3.34,dheight/1.12)
                                    dcanvas.coords("ailabel9",dwidth/19.10,dheight/0.947)
                                    dcanvas.coords("ailabel10",dwidth/19.40,dheight/0.717)
                                    dcanvas.coords("ailabel11",dwidth/16.50,dheight/0.638)
                                    dcanvas.coords("ailabel12",dwidth/8.40,dheight/0.638)
                                    dcanvas.coords("ailabel13",dwidth/3.34,dheight/0.638)
                                    dcanvas.coords("ailabel14",dwidth/2.28,dheight/0.638)
                                    dcanvas.coords("ailabel15",dwidth/1.73,dheight/0.638)
                                    dcanvas.coords("ailabel16",dwidth/1.52,dheight/0.638)
                                    dcanvas.coords("ailabel17",dwidth/1.325,dheight/0.638)
                                    dcanvas.coords("ailabel18",dwidth/1.165,dheight/0.638)
                                    dcanvas.coords("ailabel19",dwidth/16.50,dheight/0.604)
                                    dcanvas.coords("ailabel20",dwidth/16.50,dheight/0.562)
                                    dcanvas.coords("ailabel21",dwidth/16.50,dheight/0.526)
                                    dcanvas.coords("ailabel22",dwidth/16.50,dheight/0.496)
                                    dcanvas.coords("ailabel23",dwidth/1.53,dheight/0.45)
                                    dcanvas.coords("ailabel24",dwidth/1.54,dheight/0.435)
                                    dcanvas.coords("ailabel25",dwidth/1.54,dheight/0.42)
                                    dcanvas.coords("ailabel26",dwidth/1.54,dheight/0.406)
                                    dcanvas.coords("ailabel27",dwidth/1.54,dheight/0.392)
                                    dcanvas.coords("ailabel28",dwidth/1.72,dheight/1.12)

                                    dcanvas.coords("aientry1",dwidth/3.0,dheight/1.295)
                                    dcanvas.coords("aientry2",dwidth/18.00,dheight/0.91)
                                    dcanvas.coords("aientry3",dwidth/4.00,dheight/0.604)
                                    dcanvas.coords("aientry4",dwidth/2.51,dheight/0.604)
                                    dcanvas.coords("aientry5",dwidth/1.8,dheight/0.604)
                                    dcanvas.coords("aientry6",dwidth/1.565,dheight/0.604)
                                    dcanvas.coords("aientry7",dwidth/1.357,dheight/0.604)
                                    dcanvas.coords("aientry8",dwidth/4.00,dheight/0.562)
                                    dcanvas.coords("aientry9",dwidth/4.00,dheight/0.526)
                                    dcanvas.coords("aientry10",dwidth/4.00,dheight/0.496)
                                    dcanvas.coords("aientry11",dwidth/2.51,dheight/0.562)
                                    dcanvas.coords("aientry12",dwidth/2.51,dheight/0.526)
                                    dcanvas.coords("aientry13",dwidth/2.51,dheight/0.496)
                                    dcanvas.coords("aientry14",dwidth/1.8,dheight/0.562)
                                    dcanvas.coords("aientry15",dwidth/1.8,dheight/0.526)
                                    dcanvas.coords("aientry16",dwidth/1.8,dheight/0.496)
                                    dcanvas.coords("aientry17",dwidth/1.565,dheight/0.562)
                                    dcanvas.coords("aientry18",dwidth/1.565,dheight/0.526)
                                    dcanvas.coords("aientry19",dwidth/1.565,dheight/0.496)
                                    dcanvas.coords("aientry20",dwidth/1.357,dheight/0.562)
                                    dcanvas.coords("aientry21",dwidth/1.357,dheight/0.526)
                                    dcanvas.coords("aientry22",dwidth/1.357,dheight/0.496)
                                    dcanvas.coords("aientry23",dwidth/1.33,dheight/0.452)
                                    dcanvas.coords("aientry24",dwidth/1.33,dheight/0.4365)
                                    dcanvas.coords("aientry25",dwidth/1.33,dheight/0.4215)
                                    dcanvas.coords("aientry26",dwidth/1.33,dheight/0.407)
                                    dcanvas.coords("aientry27",dwidth/1.33,dheight/0.393)

                                    dcanvas.coords("aicombo1",dwidth/18.00,dheight/1.295)
                                    dcanvas.coords("aicombo2",dwidth/3.00,dheight/1.074)
                                    dcanvas.coords("aicombo3",dwidth/18.00,dheight/0.695)
                                    dcanvas.coords("aicombo4",dwidth/10.10,dheight/0.604)
                                    dcanvas.coords("aicombo5",dwidth/1.21,dheight/0.604)
                                    dcanvas.coords("aicombo6",dwidth/10.10,dheight/0.562)
                                    dcanvas.coords("aicombo7",dwidth/10.10,dheight/0.526)
                                    dcanvas.coords("aicombo8",dwidth/10.10,dheight/0.496)
                                    dcanvas.coords("aicombo9",dwidth/1.21,dheight/0.562)
                                    dcanvas.coords("aicombo10",dwidth/1.21,dheight/0.526)
                                    dcanvas.coords("aicombo11",dwidth/1.21,dheight/0.496)

                                    dcanvas.coords("aibutton1",dwidth/4.74,dheight/1.295)
                                    dcanvas.coords("aibutton2",dwidth/1.28,dheight/0.377)
                                    dcanvas.coords("aibutton3",dwidth/23,dheight/3.415)

                                    #-------------------------------H Lines-----------------------------------#
                                    dcanvas.coords("ailine1",dwidth/21,dheight/0.645,dwidth/1.055,dheight/0.645)
                                    dcanvas.coords("ailine2",dwidth/21,dheight/0.617,dwidth/1.055,dheight/0.617)
                                    dcanvas.coords("ailine3",dwidth/21,dheight/0.576,dwidth/1.055,dheight/0.576)
                                    dcanvas.coords("ailine4",dwidth/21,dheight/0.536,dwidth/1.055,dheight/0.536)
                                    dcanvas.coords("ailine5",dwidth/21,dheight/0.506,dwidth/1.055,dheight/0.506)
                                    dcanvas.coords("ailine6",dwidth/21,dheight/0.476,dwidth/1.055,dheight/0.476)
                                    #-------------------------------V Lines-----------------------------------#
                                    dcanvas.coords("ailine7",dwidth/21,dheight/0.645,dwidth/21,dheight/0.476)
                                    dcanvas.coords("ailine8",dwidth/1.055,dheight/0.645,dwidth/1.055,dheight/0.476)
                                    dcanvas.coords("ailine9",dwidth/11,dheight/0.645,dwidth/11,dheight/0.476)
                                    dcanvas.coords("ailine10",dwidth/4.15,dheight/0.645,dwidth/4.15,dheight/0.476)
                                    dcanvas.coords("ailine11",dwidth/2.55,dheight/0.645,dwidth/2.55,dheight/0.476)
                                    dcanvas.coords("ailine12",dwidth/1.83,dheight/0.645,dwidth/1.83,dheight/0.476)
                                    dcanvas.coords("ailine13",dwidth/1.58,dheight/0.645,dwidth/1.58,dheight/0.476)
                                    dcanvas.coords("ailine14",dwidth/1.37,dheight/0.645,dwidth/1.37,dheight/0.476)
                                    dcanvas.coords("ailine15",dwidth/1.22,dheight/0.645,dwidth/1.22,dheight/0.476)

                                    #-------------------------------V Lines-----------------------------------#
                                    dcanvas.coords("ailine16",dwidth/1.58,dheight/0.455,dwidth/1.58,dheight/0.383)
                                    dcanvas.coords("ailine17",dwidth/1.348,dheight/0.455,dwidth/1.348,dheight/0.383)
                                    dcanvas.coords("ailine18",dwidth/1.084,dheight/0.455,dwidth/1.084,dheight/0.383)
                                    #-------------------------------H Lines-----------------------------------#
                                    dcanvas.coords("ailine19",dwidth/1.58,dheight/0.455,dwidth/1.084,dheight/0.455)
                                    dcanvas.coords("ailine20",dwidth/1.58,dheight/0.383,dwidth/1.084,dheight/0.383)
                                    dcanvas.coords("ailine21",dwidth/1.58,dheight/0.439,dwidth/1.084,dheight/0.439)
                                    dcanvas.coords("ailine22",dwidth/1.58,dheight/0.424,dwidth/1.084,dheight/0.424)
                                    dcanvas.coords("ailine23",dwidth/1.58,dheight/0.41,dwidth/1.084,dheight/0.41)
                                    dcanvas.coords("ailine24",dwidth/1.58,dheight/0.396,dwidth/1.084,dheight/0.396)

                                    #-------------------------------H Lines-----------------------------------#
                                    dcanvas.coords("ailine25",dwidth/21,dheight/0.446,dwidth/1.055,dheight/0.446)
                                    dcanvas.coords("ailine26",dwidth/21,dheight/0.416,dwidth/1.055,dheight/0.416)
                                    dcanvas.coords("ailine27",dwidth/21,dheight/0.390,dwidth/1.055,dheight/0.390)
                                    dcanvas.coords("ailine28",dwidth/21,dheight/0.366,dwidth/1.055,dheight/0.366)
                                    #-------------------------------V Lines-----------------------------------#
                                    dcanvas.coords("ailine29",dwidth/21,dheight/0.476,dwidth/21,dheight/0.366)
                                    dcanvas.coords("ailine30",dwidth/1.055,dheight/0.476,dwidth/1.055,dheight/0.366)
                                    dcanvas.coords("ailine31",dwidth/11,dheight/0.476,dwidth/11,dheight/0.366)
                                    dcanvas.coords("ailine32",dwidth/4.15,dheight/0.476,dwidth/4.15,dheight/0.366)
                                    dcanvas.coords("ailine33",dwidth/2.55,dheight/0.476,dwidth/2.55,dheight/0.366)
                                    dcanvas.coords("ailine34",dwidth/1.83,dheight/0.476,dwidth/1.83,dheight/0.366)
                                    dcanvas.coords("ailine35",dwidth/1.58,dheight/0.476,dwidth/1.58,dheight/0.366)
                                    dcanvas.coords("ailine36",dwidth/1.37,dheight/0.476,dwidth/1.37,dheight/0.366)
                                    dcanvas.coords("ailine37",dwidth/1.22,dheight/0.476,dwidth/1.22,dheight/0.366)

                                    #-------------------------------V Lines-----------------------------------#
                                    dcanvas.coords("ailine38",dwidth/1.58,dheight/0.360,dwidth/1.58,dheight/0.290)
                                    dcanvas.coords("ailine39",dwidth/1.348,dheight/0.360,dwidth/1.348,dheight/0.290)
                                    dcanvas.coords("ailine40",dwidth/1.084,dheight/0.360,dwidth/1.084,dheight/0.290)
                                    #-------------------------------H Lines-----------------------------------#
                                    dcanvas.coords("ailine41",dwidth/1.58,dheight/0.360,dwidth/1.084,dheight/0.360)
                                    dcanvas.coords("ailine43",dwidth/1.58,dheight/0.345,dwidth/1.084,dheight/0.345)
                                    dcanvas.coords("ailine44",dwidth/1.58,dheight/0.330,dwidth/1.084,dheight/0.330)
                                    dcanvas.coords("ailine45",dwidth/1.58,dheight/0.315,dwidth/1.084,dheight/0.315)
                                    dcanvas.coords("ailine46",dwidth/1.58,dheight/0.303,dwidth/1.084,dheight/0.303)
                                    dcanvas.coords("ailine42",dwidth/1.58,dheight/0.290,dwidth/1.084,dheight/0.290)

                                    dcanvas.coords("bient1",dwidth/10.10,dheight/0.466)
                                    dcanvas.coords("bient2",dwidth/10.10,dheight/0.436)
                                    dcanvas.coords("bient3",dwidth/10.10,dheight/0.406)
                                    dcanvas.coords("bient4",dwidth/10.10,dheight/0.382)
                                    dcanvas.coords("bient5",dwidth/4.00,dheight/0.466)
                                    dcanvas.coords("bient6",dwidth/4.00,dheight/0.436)
                                    dcanvas.coords("bient7",dwidth/4.00,dheight/0.406)
                                    dcanvas.coords("bient8",dwidth/4.00,dheight/0.382)
                                    dcanvas.coords("bient9",dwidth/2.51,dheight/0.466)
                                    dcanvas.coords("bient10",dwidth/2.51,dheight/0.436)
                                    dcanvas.coords("bient11",dwidth/2.51,dheight/0.406)
                                    dcanvas.coords("bient12",dwidth/2.51,dheight/0.382)
                                    dcanvas.coords("bient13",dwidth/1.565,dheight/0.466)
                                    dcanvas.coords("bient14",dwidth/1.565,dheight/0.436)
                                    dcanvas.coords("bient15",dwidth/1.565,dheight/0.406)
                                    dcanvas.coords("bient16",dwidth/1.565,dheight/0.382)
                                    dcanvas.coords("bient17",dwidth/1.8,dheight/0.466)
                                    dcanvas.coords("bient18",dwidth/1.8,dheight/0.436)
                                    dcanvas.coords("bient19",dwidth/1.8,dheight/0.406)
                                    dcanvas.coords("bient20",dwidth/1.8,dheight/0.382)
                                    dcanvas.coords("bient21",dwidth/1.357,dheight/0.466)
                                    dcanvas.coords("bient22",dwidth/1.357,dheight/0.436)
                                    dcanvas.coords("bient23",dwidth/1.357,dheight/0.406)
                                    dcanvas.coords("bient24",dwidth/1.357,dheight/0.382)
                                    dcanvas.coords("bient25",dwidth/1.21,dheight/0.466)
                                    dcanvas.coords("bient26",dwidth/1.21,dheight/0.436)
                                    dcanvas.coords("bient27",dwidth/1.21,dheight/0.406)
                                    dcanvas.coords("bient28",dwidth/1.21,dheight/0.382)

                                    dcanvas.coords("bilabl1",dwidth/1.53,dheight/0.355)
                                    dcanvas.coords("bilabl2",dwidth/1.53,dheight/0.340)
                                    dcanvas.coords("bilabl3",dwidth/1.53,dheight/0.325)
                                    dcanvas.coords("bilabl4",dwidth/1.53,dheight/0.310)
                                    dcanvas.coords("bilabl5",dwidth/1.53,dheight/0.298)

                                    dcanvas.coords("bient29",dwidth/1.33,dheight/0.355)
                                    dcanvas.coords("bient30",dwidth/1.33,dheight/0.340)
                                    dcanvas.coords("bient31",dwidth/1.33,dheight/0.325)
                                    dcanvas.coords("bient32",dwidth/1.33,dheight/0.312)
                                    dcanvas.coords("bient33",dwidth/1.33,dheight/0.298)
                                    dcanvas.coords("bbutn1",dwidth/1.28,dheight/0.282)
                            except:
                                    pass

                            try:
                                    dcanvas.coords("aidate1",dwidth/17.8,dheight/1.074)
                                    dcanvas.coords("aidate2",dwidth/1.65,dheight/1.074)
                            except:
                                    pass
                            

                        sr_Canvas_1 = Canvas(sr_Frame_1,bg='#2f516f',scrollregion=(0,0,700,2500))

                        sr_Frame_1.grid_columnconfigure(0,weight=1)
                        sr_Frame_1.grid_rowconfigure(0,weight=1)

                        sr_Scroll_1 = Scrollbar(sr_Frame_1,orient=VERTICAL)
                        sr_Scroll_1.grid(row=0,column=1,sticky='ns')
                        sr_Scroll_1.config(command=sr_Canvas_1.yview)
                        sr_Canvas_1.bind("<Configure>", responsive_widgets1)
                        sr_Canvas_1.config(yscrollcommand=sr_Scroll_1.set)
                        sr_Canvas_1.grid(row=0,column=0,sticky='nsew')
                        #-------------------------------------------------------------------------Payment Section
                        if sr_transCombo.get() == 'Invoice':
 
                            def inv_back_1_sl():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')
                                
                            def sales_add_new_inv_sl():

                                customername = aicomb_1.get()
                                email = aientry_1.get()
                                terms = comb_t_2.get()
                                invoicedate = aid_entry_1.get_date()
                                duedate = aid_entry_2.get_date()
                                bname = ai_b_entry_1.get('1.0', 'end-1c')
                                placosupply = ai_p_comb_2.get()
                                product = ai_comb_p_1.get()
                                hsn = ai_entry_p_1.get()
                                description = ai_entry_p_1_2.get('1.0', 'end-1c')
                                qty = ai_entry_p_1_3.get()
                                price = ai_entry_p_1_4.get()
                                total = ai_entry_p_1_5.get()
                                tax = ai_comb_p_1_2.get()

                                if bsub_entry_1.get() == "0":
                                    subtotal = sub_entry_1.get()
                                    
                                else:
                                    subtotal = bsub_entry_1.get()                               

                                print(subtotal)

                                if bgrand_entry_1.get() == "0":
                                    grandtotal = grand_entry_1.get()
                                else:
                                    grandtotal = bgrand_entry_1.get()

                                product2 = ai_comb_p_2.get()
                                hsn2 = ai_entry_p_2.get()
                                description2 = ai_entry_p_2_1.get('1.0', 'end-1c')
                                qty2 = ai_entry_2_2.get()
                                price2 = ai_entry_2_3.get()
                                total2 = ai_entry_2_4.get()
                                tax2 = ai_comb_P_2_2.get()
                                product3 = ai_comb_p_3.get()
                                hsn3 = ai_entry_3.get()
                                description3 = ai_entry_3_1.get('1.0', 'end-1c')
                                qty3 = ai_entry_3_2.get()
                                price3 = ai_entry_3_3.get()
                                total3 = ai_entry_3_4.get()
                                tax3 = ai_comb_P_3_2.get()
                                product4 = ai_comb_p_4.get()
                                hsn4 = ai_entry_4.get()
                                description4 = ai_entry_4_1.get('1.0', 'end-1c')
                                qty4 = ai_entry_4_2.get()
                                price4 = ai_entry_4_3.get()
                                total4 = ai_entry_4_4.get()
                                tax4 = ai_comb_P_4_2.get()
                                if bamount_entry_1.get() == "0":
                                    amtrecvd = amount_entry_1.get()
                                else:
                                    amtrecvd = bamount_entry_1.get()
                                if btax_entry_1.get() == "0":
                                    taxamount = tax_entry_1.get()
                                else:
                                    taxamount = btax_entry_1.get()
                                if bbal_entry_1.get() == "0":
                                    baldue = bal_entry_1.get()
                                else:
                                    baldue = bbal_entry_1.get()


                                usr_sql = "SELECT id FROM auth_user WHERE username=%s"
                                usr_val = (nm_ent.get(),)
                                fbcursor.execute(usr_sql,usr_val)
                                usr_data = fbcursor.fetchone()

                                cmp_sql = "SELECT cid FROM app1_company WHERE id_id=%s"
                                cmp_val = (usr_data[0],)
                                fbcursor.execute(cmp_sql,cmp_val)
                                cmp_data = fbcursor.fetchone()
                                cid = cmp_data[0]

                                inv_sql_1 = "INSERT INTO app1_invoice (customername,email,terms,invoicedate,duedate,bname,placosupply,product,hsn,description,qty,price,total,tax,subtotal,grandtotal,product2,hsn2,description2,qty2,price2,total2,tax2,product3,hsn3,description3,qty3,price3,total3,tax3,product4,hsn4,description4,qty4,price4,total4,tax4,amtrecvd,taxamount,baldue,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                inv_val_1=(customername,email,terms,invoicedate,duedate,bname,placosupply,product,hsn,description,qty,price,total,tax,subtotal,grandtotal,product2,hsn2,description2,qty2,price2,total2,tax2,product3,hsn3,description3,qty3,price3,total3,tax3,product4,hsn4,description4,qty4,price4,total4,tax4,amtrecvd,taxamount,baldue,cid)
                                fbcursor.execute(inv_sql_1,inv_val_1)
                                finsysdb.commit()

                                #----------Refresh Insert Tree--------#
                                show_sr_treeData()
                                

                                    
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')
                                show_sr_treeData()


                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("aipoly1"))

                            
                            label_1 = Label(sr_Canvas_1,width=10,height=1,text="INVOICE", font=('arial 20'),background="#1b3857",fg="white") 
                            window_label_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_1, tags=("ailabel1"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=("aihline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("aipoly2"))

                            label_1 = Label(sr_Canvas_1,width=10,height=1,text="Fin sYs", font=('arial 20'),background="#1b3857",fg="white") 
                            window_label_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_1, tags=("ailabel2"))

                            usr_sql = "SELECT * FROM auth_user WHERE username=%s"
                            usr_val = (nm_ent.get(),)
                            fbcursor.execute(usr_sql,usr_val)
                            usr_data = fbcursor.fetchone()

                            cmp_sql = "SELECT * FROM app1_company WHERE id_id=%s"
                            cmp_val = (usr_data[0],)
                            fbcursor.execute(cmp_sql,cmp_val)
                            cmp_data = fbcursor.fetchone()

                            label_2 = Label(sr_Canvas_1,width=15,height=1,text=cmp_data[1], font=('arial 16'),background="#1b3857",fg="skyblue") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2, tags=("ailabel3"))

                            label_2 = Label(sr_Canvas_1,width=15,height=1,text=cmp_data[6], font=('arial 16'),background="#1b3857",fg="skyblue") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2, tags=("ailabel4"))

                            label_2 = Label(sr_Canvas_1,width=15,height=1,text="Select Customer", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2, tags=("ailabel5"))

                            def inv_c_details_sl(event):
                                inv_to_str = aicomb_1.get()
                                x = inv_to_str.split(" ", 1)
                                sql = "select * from app1_customer where firstname=%s  and cid_id=%s"
                                val = (x[0],cmp_dtl[0],)
                                fbcursor.execute(sql,val)
                                inv_c_sel = fbcursor.fetchone()
                                aientry_1.delete(0,END)
                                aientry_1.insert(0,inv_c_sel[9])
                                ai_b_entry_1.delete('1.0',END)
                                ai_b_entry_1.insert('1.0',inv_c_sel[2]+" "+inv_c_sel[3]+ '\n' +inv_c_sel[4]+ '\n' +inv_c_sel[12]+ '\n' +inv_c_sel[13]+ '\n' +inv_c_sel[14]+ '\n' +inv_c_sel[15]+ '\n' +inv_c_sel[16])
                                

                            sql_pr="select * from auth_user where username=%s"
                            sql_pr_val=(nm_ent.get(),)
                            fbcursor.execute(sql_pr,sql_pr_val,)
                            pr_dtl=fbcursor.fetchone()

                            sql = "select * from app1_company where id_id=%s"
                            val = (pr_dtl[0],)
                            fbcursor.execute(sql, val,)
                            cmp_dtl=fbcursor.fetchone()
                            

                            sql_pr_cmp="select firstname,lastname from app1_customer where cid_id=%s"
                            sql_pr_cmp_val=(cmp_dtl[0],)
                            fbcursor.execute(sql_pr_cmp,sql_pr_cmp_val,)
                            pr_cmp_dtl=fbcursor.fetchall()
                            p_i1 = []

                            for i in pr_cmp_dtl:
                                p_i1.append(str(i[0])+" "+str(i[1]))
                                

                            
                            
                            aicomb_1 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            aicomb_1["values"] = p_i1
                            aicomb_1.bind("<<ComboboxSelected>>",inv_c_details_sl)
                            window_aicomb_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=200, height=30,window=aicomb_1, tags=("aicombo1"))

                            def add_inv_customers():
                                
                                
                                inv_frame_2 = Frame(tab3_1)
                                inv_frame_2.grid(row=0,column=0,sticky='nsew')

                                def inc_responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("acpoly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("aclabel1",dwidth/2.5,dheight/8.24)
                                    dcanvas.coords("achline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)

                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.45


                                    dcanvas.coords("acpoly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("aclabel2",dwidth/17.0,dheight/2.35)
                                    dcanvas.coords("achline1",dwidth/21,dheight/1.95,dwidth/1.055,dheight/1.95)
                                    dcanvas.coords("aclabel3",dwidth/20.2,dheight/1.69)
                                    dcanvas.coords("aclabel4",dwidth/3.35,dheight/1.69)
                                    dcanvas.coords("aclabel5",dwidth/1.8,dheight/1.69)
                                    dcanvas.coords("aclabel6",dwidth/20.2,dheight/1.32)
                                    dcanvas.coords("aclabel7",dwidth/3.375,dheight/1.32)
                                    dcanvas.coords("aclabel8",dwidth/20.2,dheight/1.088)
                                    dcanvas.coords("aclabel9",dwidth/3.48,dheight/1.088)
                                    dcanvas.coords("aclabel10",dwidth/1.82,dheight/1.088)
                                    dcanvas.coords("aclabel11",dwidth/18.7,dheight/0.92)
                                    dcanvas.coords("aclabel12",dwidth/3.40,dheight/0.92)
                                    dcanvas.coords("aclabel13",dwidth/1.83,dheight/0.92)
                                    dcanvas.coords("aclabel14",dwidth/55.5,dheight/0.79)
                                    dcanvas.coords("aclabel15",dwidth/2.09,dheight/0.79)
                                    dcanvas.coords("aclabel16",dwidth/19.5,dheight/0.74)
                                    dcanvas.coords("aclabel17",dwidth/1.97,dheight/0.74)
                                    dcanvas.coords("aclabel18",dwidth/19.49,dheight/0.645)
                                    dcanvas.coords("aclabel19",dwidth/3.40,dheight/0.645)
                                    dcanvas.coords("aclabel20",dwidth/2.0,dheight/0.645)
                                    dcanvas.coords("aclabel21",dwidth/1.33,dheight/0.645)
                                    dcanvas.coords("aclabel22",dwidth/21.0,dheight/0.58)
                                    dcanvas.coords("aclabel23",dwidth/3.42,dheight/0.58)
                                    dcanvas.coords("aclabel24",dwidth/2.0,dheight/0.58)
                                    dcanvas.coords("aclabel25",dwidth/1.34,dheight/0.58)

                                    dcanvas.coords("accombo1",dwidth/18.5,dheight/1.55)
                                    dcanvas.coords("accombo2",dwidth/18.5,dheight/1.027)

                                    dcanvas.coords("acentry1",dwidth/3.30,dheight/1.55)
                                    dcanvas.coords("acentry2",dwidth/1.785,dheight/1.55)
                                    dcanvas.coords("acentry3",dwidth/18.5,dheight/1.24)
                                    dcanvas.coords("acentry4",dwidth/3.30,dheight/1.24)
                                    dcanvas.coords("acentry5",dwidth/3.30,dheight/1.027)
                                    dcanvas.coords("acentry6",dwidth/1.785,dheight/1.027)
                                    dcanvas.coords("acentry7",dwidth/18.5,dheight/0.88)
                                    dcanvas.coords("acentry8",dwidth/3.30,dheight/0.88)
                                    dcanvas.coords("acentry9",dwidth/1.785,dheight/0.88)
                                    dcanvas.coords("acentry10",dwidth/18.5,dheight/0.715)
                                    dcanvas.coords("acentry11",dwidth/1.97,dheight/0.715)
                                    dcanvas.coords("acentry12",dwidth/18.5,dheight/0.625)
                                    dcanvas.coords("acentry13",dwidth/3.40,dheight/0.625)
                                    dcanvas.coords("acentry14",dwidth/1.98,dheight/0.625)
                                    dcanvas.coords("acentry15",dwidth/1.33,dheight/0.625)
                                    dcanvas.coords("acentry16",dwidth/19.51,dheight/0.565)
                                    dcanvas.coords("acentry17",dwidth/3.40,dheight/0.565)
                                    dcanvas.coords("acentry18",dwidth/1.98,dheight/0.565)
                                    dcanvas.coords("acentry19",dwidth/1.33,dheight/0.565)

                                    dcanvas.coords("accheck1",dwidth/1.55,dheight/0.79)
                                    dcanvas.coords("accheck2",dwidth/19.0,dheight/0.546)

                                    dcanvas.coords("acbutton1",dwidth/2.5,dheight/0.5)
                                    dcanvas.coords("acbutton2",dwidth/23,dheight/3.415)


                                inv_canvas_2=Canvas(inv_frame_2, bg='#2f516f', width=953, height=600, scrollregion=(0,0,700,1600))

                                inv_frame_2.grid_columnconfigure(0,weight=1)
                                inv_frame_2.grid_rowconfigure(0,weight=1)

                                
                                vertibar=Scrollbar(inv_frame_2, orient=VERTICAL)
                                vertibar.grid(row=0,column=1,sticky='ns')
                                vertibar.config(command=inv_canvas_2.yview)

                                inv_canvas_2.bind("<Configure>", inc_responsive_widgets2)
                                inv_canvas_2.config(yscrollcommand=vertibar.set)
                                inv_canvas_2.grid(row=0,column=0,sticky='nsew')
                                def inv_back_1_():
                                    inv_frame_2.grid_forget()
                                    

                                
                                

                                inv_canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("acpoly1"))

                                label_1 = Label(inv_canvas_2,width=15,height=1,text="ADD CUSTOMER", font=('arial 20'),background="#1b3857",fg="white") 
                                window_label_1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_1, tags=("aclabel1"))

                                inv_canvas_2.create_line(0, 0, 0, 0, fill='gray',width=1, tags=("achline"))

                                inv_canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("acpoly2"))

                                label_1 = Label(inv_canvas_2,width=20,height=1,text="Customer Information", font=('arial 20'),background="#1b3857",fg="white") 
                                window_label_1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_1, tags=("aclabel2"))

                                inv_canvas_2.create_line(0, 0, 0, 0, fill='gray',width=1, tags=("achline1"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="Title", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel3"))

                                ic_comb_cus_1 = ttk.Combobox(inv_canvas_2, font=('arial 10'),foreground="white")
                                ic_comb_cus_1['values'] = ("Mr","Mrs","Miss","Ms",)
                                ic_comb_cus_1.current(0)
                                window_ic_comb_cus_1 = inv_canvas_2.create_window(0, 0, anchor="nw", width=245, height=30,window=ic_comb_cus_1, tags=("accombo1"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="First name", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel4"))

                                ic_entry_cus_1=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_1 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_1, tags=("acentry1"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Last name", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel5"))

                                ic_entry_cus_2=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_2 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_2, tags=("acentry2"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Company", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel6"))

                                ic_entry_cus_3=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_3 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_3, tags=("acentry3"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Location", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel7"))

                                ic_cus_4=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_cus_4 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_cus_4, tags=("acentry4"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="GST type", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel8"))

                                ic_comb_cus_2 = ttk.Combobox(inv_canvas_2, font=('arial 10'),foreground="white")
                                ic_comb_cus_2['values'] = ("Choose...","GST registered Regular","GST registered-Composition","GST unregistered","Consumer","Overseas","SEZ","Deemed exports-EOU's STP's EHTP's etc",)
                                ic_comb_cus_2.current(0)
                                window_ic_comb_cus_2 = inv_canvas_2.create_window(0, 0, anchor="nw", width=245, height=30,window=ic_comb_cus_2, tags=("accombo2"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="GSTIN", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel9"))

                                def igst_validate(value):
                
                                    """
                                    Validat the email entry
                                    :param value:
                                    :return:
                                    """
                                    pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                                    if re.fullmatch(pattern, value) is None:
                                        
                                        return False

                                    ic_entry_cus_5.config(fg="white")
                                    return True

                                def igst_invalidate():
                                    ic_entry_cus_5.config(fg="red")


                                def ic_gst_in(event):
                                    if ic_entry_cus_5.get()=="29APPCK7465F1Z1":
                                        ic_entry_cus_5.delete(0,END)
                                    else:
                                        pass
                                
                                ic_entry_cus_5=Entry(inv_canvas_2,width=34,justify=LEFT,background='#2f516f',font=('arial 10'))
                                ival_gst = (inv_canvas_2.register(igst_validate), '%P')
                                iival_gst = (inv_canvas_2.register(igst_invalidate),)
                                ic_entry_cus_5.config(validate='focusout', validatecommand=ival_gst, invalidcommand=iival_gst)
                                window_ic_entry_cus_5 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_5, tags=("acentry5"))
                                ic_entry_cus_5.insert(0,"29APPCK7465F1Z1")
                                ic_entry_cus_5.bind("<Button-1>",ic_gst_in)

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="PAN NO", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel10"))

                                def ic_pan_no(event):
                                    if ic_entry_cus_6.get()=="APPCK7465F":
                                        ic_entry_cus_6.delete(0,END)
                                    else:
                                        pass

                                def ipan_validate(value):
                
                                    """
                                    Validat the email entry
                                    :param value:
                                    :return:
                                    """
                                    pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                                    if re.fullmatch(pattern, value) is None:
                                        
                                        return False

                                    ic_entry_cus_6.config(fg="white")
                                    return True

                                def ipan_invalidate():
                                    ic_entry_cus_6.config(fg="red")

                                ic_entry_cus_6=Entry(inv_canvas_2,width=34,justify=LEFT,background='#2f516f',font=('arial 10'))
                                ival_pan = (inv_canvas_2.register(ipan_validate), '%P')
                                iival_pan = (inv_canvas_2.register(ipan_invalidate),)
                                ic_entry_cus_6.config(validate='focusout', validatecommand=ival_pan, invalidcommand=iival_pan)
                                window_ic_entry_cus_6 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_6, tags=("acentry6"))
                                ic_entry_cus_6.insert(0,"APPCK7465F")
                                ic_entry_cus_6.bind("<Button-1>",ic_pan_no)

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="Email", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel11"))

                                def iemail_validate(value):
                
                                    """
                                    Validat the email entry
                                    :param value:
                                    :return:
                                    """
                                    pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                                    if re.fullmatch(pattern, value) is None:
                                        
                                        return False

                                    ic_entry_cus_7.config(fg="white")
                                    return True

                                def iemail_invalidate():
                                    ic_entry_cus_7.config(fg="red")

                                ic_entry_cus_7=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f')
                                ival_email = (inv_canvas_2.register(iemail_validate), '%P')
                                iival_email = (inv_canvas_2.register(iemail_invalidate),)
                                ic_entry_cus_7.config(validate='focusout', validatecommand=ival_email, invalidcommand=iival_email)
                                window_ic_entry_cus_7 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_7, tags=("acentry7"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Website", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel12"))

                                ic_entry_cus_8=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_8 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_8, tags=("acentry8"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Mobile", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel13"))

                                ic_entry_cus_9=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_9 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_9, tags=("acentry9"))

                                def copy_icus_details():
                                    ic_entry_cus_11.delete(0, END)
                                    ic_entry_cus_11.insert(0,ic_entry_cus_10.get())
                                    ic_entry_cus_14.delete(0, END)
                                    ic_entry_cus_14.insert(0,ic_entry_cus_12.get())
                                    ic_entry_cus_15.delete(0, END)
                                    ic_entry_cus_15.insert(0,ic_entry_cus_13.get())
                                    ic_entry_cus_p14.delete(0, END)
                                    ic_entry_cus_p14.insert(0,ic_entry_cus_p12.get())
                                    ic_entry_cus_c15.delete(0, END)
                                    ic_entry_cus_c15.insert(0,ic_entry_cus_c13.get())

                                label_1 = Label(inv_canvas_2,width=20,height=1,text="Billing Address", font=('arial 16'),background="#1b3857",fg="white") 
                                window_label_1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_1, tags=("aclabel14"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="Street", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel16"))

                                ic_entry_cus_10=Entry(inv_canvas_2,width=95,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_10 = inv_canvas_2.create_window(0, 0, anchor="nw", height=60,window=ic_entry_cus_10, tags=("acentry10"))

                                label_1 = Label(inv_canvas_2,width=20,height=1,text="Shipping Address", font=('arial 16'),background="#1b3857",fg="white") 
                                window_label_1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_1, tags=("aclabel15"))

                                ic_chk_str = StringVar()
                                ic_chkbtn1 = Checkbutton(inv_canvas_2, text = "Same As Billing Address", variable = ic_chk_str, onvalue = 1, offvalue = 0, font=("arial", 10),background="#1b3857",foreground="white",selectcolor="#2f516f",command=copy_icus_details)
                                ic_chkbtn1.select()
                                window_ic_chkbtn_1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=ic_chkbtn1, tags=("accheck1"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="Street", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel17"))

                                ic_entry_cus_11=Entry(inv_canvas_2,width=95,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_11 = inv_canvas_2.create_window(0, 0, anchor="nw", height=60,window=ic_entry_cus_11, tags=("acentry11"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="City", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel18"))

                                ic_entry_cus_12=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_12 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_12, tags=("acentry12"))
                                
                                label_2 = Label(inv_canvas_2,width=5,height=1,text="State", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel19"))

                                ic_entry_cus_13=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_13 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_13, tags=("acentry13"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="City", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2,tags=("aclabel20"))

                                ic_entry_cus_14=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_14 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_14, tags=("acentry14"))

                                label_2 = Label(inv_canvas_2,width=5,height=1,text="State", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2,tags=("aclabel21"))

                                ic_entry_cus_15=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_15 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_15, tags=("acentry15"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Pin Code", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel22"))

                                ic_entry_cus_p12=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_p12 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_p12, tags=("acentry16"))
                                
                                label_2 = Label(inv_canvas_2,width=8,height=1,text="Country", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel23"))

                                ic_entry_cus_c13=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_c13 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_c13, tags=("acentry17"))

                                label_2 = Label(inv_canvas_2,width=10,height=1,text="Pin Code", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel24"))

                                ic_entry_cus_p14=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_p14 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_p14, tags=("acentry18"))

                                label_2 = Label(inv_canvas_2,width=8,height=1,text="Country", font=('arial 12'),background="#1b3857",fg="white") 
                                window_label_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=label_2, tags=("aclabel25"))

                                ic_entry_cus_c15=Entry(inv_canvas_2,width=40,justify=LEFT,background='#2f516f',foreground="white")
                                window_ic_entry_cus_c15 = inv_canvas_2.create_window(0, 0, anchor="nw", height=30,window=ic_entry_cus_c15, tags=("acentry19"))

                                ic_chk_str_1 = BooleanVar()
                                ic_chkbtn2 = Checkbutton(inv_canvas_2, text = "Agree to terms and conditions", variable = ic_chk_str_1, font=("arial", 10),background="#1b3857",foreground="white",selectcolor="#2f516f")
                                window_ic_chkbtn_2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=ic_chkbtn2,tags=("accheck2"))

                                def sales_add_inv_cus():
                                    title = ic_comb_cus_1.get()
                                    firstname = ic_entry_cus_1.get()
                                    lastname = ic_entry_cus_2.get()
                                    company = ic_entry_cus_3.get()
                                    location = ic_cus_4.get()
                                    gsttype = ic_comb_cus_2.get()
                                    gstin = ic_entry_cus_5.get()
                                    panno = ic_entry_cus_6.get()
                                    email = ic_entry_cus_7.get()
                                    website = ic_entry_cus_8.get()
                                    mobile = ic_entry_cus_9.get()
                                    street = ic_entry_cus_10.get()
                                    city = ic_entry_cus_12.get()
                                    state = ic_entry_cus_13.get()
                                    pincode = ic_entry_cus_p12.get()
                                    country = ic_entry_cus_c13.get()
                                    shipstreet = ic_entry_cus_11.get()
                                    shipcity = ic_entry_cus_14.get()
                                    shipstate = ic_entry_cus_15.get()
                                    shippincode = ic_entry_cus_p14.get()
                                    shipcountry = ic_entry_cus_c15.get()

                                    usri_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    usri_val = (nm_ent.get(),)
                                    fbcursor.execute(usri_sql,usri_val)
                                    usri_data = fbcursor.fetchone()

                                    cmpi_sql = "SELECT cid FROM app1_company WHERE id_id=%s"
                                    cmpi_val = (usri_data[0],)
                                    fbcursor.execute(cmpi_sql,cmpi_val)
                                    cmpi_data = fbcursor.fetchone()
                                    cid = cmpi_data[0]

                                    if ic_chk_str_1.get() == True:

                                        cus_sql = "INSERT INTO app1_customer (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                        cus_val=(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid)
                                        fbcursor.execute(cus_sql,cus_val)
                                        finsysdb.commit()


                                        inv_frame_2.destroy()
                                        
                                    
                                    else:
                                        pass

                                ic_cus_btn2=Button(inv_canvas_2,text='Submit Form', width=25,height=2,foreground="white",background="#1b3857",font='arial 12',command=sales_add_inv_cus)
                                window_ic_cus_btn2 = inv_canvas_2.create_window(0, 0, anchor="nw", window=ic_cus_btn2,tags=("acbutton1"))

                                

                                bck_btn1=Button(inv_canvas_2,text='← Back', bd=0, foreground="white",background="#2f516f",font='arial 10 bold',activebackground="#1b3857",command=inv_back_1_)
                                window_bck_btn1 = inv_canvas_2.create_window(0, 0, anchor="nw", window=bck_btn1,tags=('acbutton2'))
                                


                            aibtn2=Button(sr_Canvas_1,text='+', width=5,height=1,foreground="white",background="#1b3857",font='arial 12',command=add_inv_customers)
                            window_aibtn2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=aibtn2, tags=('aibutton1'))

                            label_2 = Label(sr_Canvas_1,width=15,height=1,text="Email", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel6'))

                            aientry_1=Entry(sr_Canvas_1,width=40,justify=LEFT,background='#2f516f',foreground="white")
                            window_aientry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30,window=aientry_1,tags=('aientry1'))


                            label_2 = Label(sr_Canvas_1,width=15,height=1,text="Terms", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel8'))


                            label_2 = Label(sr_Canvas_1,width=6,height=1,text="Bill To:", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel9'))


                            ai_b_entry_1=scrolledtext.ScrolledText(sr_Canvas_1,width=30,background='#2f516f',foreground="white")
                            window_ai_b_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=150, window=ai_b_entry_1,tags=('aientry2'))

                            label_2 = Label(sr_Canvas_1,width=12,height=1,text="Place of supply", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel10'))

                            ai_p_comb_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            ai_p_comb_2['values'] = ("Kerala","Andaman and Nicobar Islands","Andhra Pradesh","Arunachal Pradesh","Assam","Bihar","Chandigarh","Chhattisgarh","Dadra and Nagar Haveli","Daman and Diu","Delhi","Goa","Gujarat","Haryana","Himachal Pradesh","Jammu and Kashmir","Jharkhand","Karnataka","Ladakh","Lakshadweep","Madhya Pradesh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Tamil Nadu","Telangana","Tripura","Uttar Pradesh","Uttarakhand","West Bengal","Other Territory",)
                            ai_p_comb_2.current(0)
                            window_ai_p_comb_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=251, height=30,window=ai_p_comb_2,tags=('aicombo3'))


                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine1'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine2'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine3'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine4'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine5'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine6'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine7'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine8'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine9'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine10'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine11'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine12'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine13'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine14'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine15'))


                            label_2 = Label(sr_Canvas_1,width=2,height=1,text="#", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel11'))

                            label_3 = Label(sr_Canvas_1,width=15,height=1,text="PRODUCT/SERVICE", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_3,tags=('ailabel12'))

                            label_4 = Label(sr_Canvas_1,width=4,height=1,text="HSN", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel13'))

                            label_4 = Label(sr_Canvas_1,width=11,height=1,text="DESCRIPTION", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel14'))

                            label_4 = Label(sr_Canvas_1,width=4,height=1,text="QTY", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel15'))

                            label_4 = Label(sr_Canvas_1,width=8,height=1,text="PRICE", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel16'))

                            label_4 = Label(sr_Canvas_1,width=6,height=1,text="TOTAL", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel17'))

                            label_4 = Label(sr_Canvas_1,width=7,height=1,text="TAX (%)", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_4,tags=('ailabel18'))

                            def i_details_sl_1(event):
                                inv_to_str_1 = ai_comb_p_1.get()

                                sql = "select * from app1_inventory where name=%s and cid_id=%s"
                                val = (inv_to_str_1,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_sel_1 = fbcursor.fetchone()

                                sql = "select * from app1_noninventory where name=%s and cid_id=%s"
                                val = (inv_to_str_1,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_sel_2 = fbcursor.fetchone()

                                sql = "select * from app1_bundle where name=%s and cid_id=%s"
                                val = (inv_to_str_1,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_sel_3 = fbcursor.fetchone() 

                                if inv_sel_1 is not None:
                                    
                                    ai_entry_p_1.delete(0,END)
                                    ai_entry_p_1.insert(0,inv_sel_1[4])
                                    ai_entry_p_1_2.delete('1.0',END)
                                    ai_entry_p_1_2.insert('1.0',inv_sel_1[11])
                                    ai_entry_p_1_4.delete(0,END)
                                    ai_entry_p_1_4.insert(0,round(float(inv_sel_1[12]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry6',state='normal')
                                    sr_Canvas_1.itemconfig('aientry7',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo5',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_sel_2 is not None:
                                    
                                    ai_entry_p_1.delete(0,END)
                                    ai_entry_p_1.insert(0,inv_sel_2[4])
                                    ai_entry_p_1_2.delete('1.0',END)
                                    ai_entry_p_1_2.insert('1.0',inv_sel_2[7])
                                    ai_entry_p_1_4.delete(0,END)
                                    ai_entry_p_1_4.insert(0,round(float(inv_sel_2[8]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry6',state='normal')
                                    sr_Canvas_1.itemconfig('aientry7',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo5',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_sel_3 is not None:
                                    
                                    ai_entry_p_1.delete(0,END)
                                    ai_entry_p_1.insert(0,inv_sel_3[3])
                                    ai_entry_p_1_2.delete('1.0',END)
                                    ai_entry_p_1_2.insert('1.0',inv_sel_3[4])
                                    sr_Canvas_1.itemconfig('aientry6',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry7',state='hidden')
                                    sr_Canvas_1.itemconfig('aicombo5',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine25',state='normal')
                                    sr_Canvas_1.itemconfig('ailine26',state='normal')
                                    sr_Canvas_1.itemconfig('ailine27',state='normal')
                                    sr_Canvas_1.itemconfig('ailine28',state='normal')
                                    sr_Canvas_1.itemconfig('ailine29',state='normal')
                                    sr_Canvas_1.itemconfig('ailine30',state='normal')
                                    sr_Canvas_1.itemconfig('ailine31',state='normal')
                                    sr_Canvas_1.itemconfig('ailine32',state='normal')
                                    sr_Canvas_1.itemconfig('ailine33',state='normal')
                                    sr_Canvas_1.itemconfig('ailine34',state='normal')
                                    sr_Canvas_1.itemconfig('ailine35',state='normal')
                                    sr_Canvas_1.itemconfig('ailine36',state='normal')
                                    sr_Canvas_1.itemconfig('ailine37',state='normal')
                                    sr_Canvas_1.itemconfig('ailine38',state='normal')
                                    sr_Canvas_1.itemconfig('ailine39',state='normal')
                                    sr_Canvas_1.itemconfig('ailine40',state='normal')
                                    sr_Canvas_1.itemconfig('ailine41',state='normal')
                                    sr_Canvas_1.itemconfig('ailine42',state='normal')
                                    sr_Canvas_1.itemconfig('ailine43',state='normal')
                                    sr_Canvas_1.itemconfig('ailine44',state='normal')
                                    sr_Canvas_1.itemconfig('ailine45',state='normal')
                                    sr_Canvas_1.itemconfig('ailine46',state='normal')
                                    sr_Canvas_1.itemconfig('bient1',state='normal')
                                    sr_Canvas_1.itemconfig('bient5',state='normal')
                                    sr_Canvas_1.itemconfig('bient9',state='normal')
                                    sr_Canvas_1.itemconfig('bient13',state='normal')
                                    sr_Canvas_1.itemconfig('bient17',state='normal')
                                    sr_Canvas_1.itemconfig('bient21',state='normal')
                                    sr_Canvas_1.itemconfig('bient25',state='normal')
                                    sr_Canvas_1.itemconfig('bient2',state='normal')
                                    sr_Canvas_1.itemconfig('bient6',state='normal')
                                    sr_Canvas_1.itemconfig('bient10',state='normal')
                                    sr_Canvas_1.itemconfig('bient14',state='normal')
                                    sr_Canvas_1.itemconfig('bient18',state='normal')
                                    sr_Canvas_1.itemconfig('bient22',state='normal')
                                    sr_Canvas_1.itemconfig('bient26',state='normal')
                                    sr_Canvas_1.itemconfig('bient3',state='normal')
                                    sr_Canvas_1.itemconfig('bient7',state='normal')
                                    sr_Canvas_1.itemconfig('bient11',state='normal')
                                    sr_Canvas_1.itemconfig('bient15',state='normal')
                                    sr_Canvas_1.itemconfig('bient19',state='normal')
                                    sr_Canvas_1.itemconfig('bient23',state='normal')
                                    sr_Canvas_1.itemconfig('bient27',state='normal')
                                    sr_Canvas_1.itemconfig('bient4',state='normal')
                                    sr_Canvas_1.itemconfig('bient8',state='normal')
                                    sr_Canvas_1.itemconfig('bient12',state='normal')
                                    sr_Canvas_1.itemconfig('bient16',state='normal')
                                    sr_Canvas_1.itemconfig('bient20',state='normal')
                                    sr_Canvas_1.itemconfig('bient24',state='normal')
                                    sr_Canvas_1.itemconfig('bient28',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl1',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl2',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl3',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl4',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl5',state='normal')
                                    sr_Canvas_1.itemconfig('bient29',state='normal')
                                    sr_Canvas_1.itemconfig('bient30',state='normal')
                                    sr_Canvas_1.itemconfig('bient31',state='normal')
                                    sr_Canvas_1.itemconfig('bient32',state='normal')
                                    sr_Canvas_1.itemconfig('bient33',state='normal')
                                    sr_Canvas_1.itemconfig('bbutn1',state='normal')

                                    sr_Canvas_1.itemconfig('ailine16',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine17',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine18',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine19',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine20',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine21',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine22',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel27',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry23',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry24',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry25',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry26',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry27',state='hidden')
                                    sr_Canvas_1.itemconfig('aibutton2',state='hidden')
                                    
                                    bu_inv_1.delete(0,END)
                                    bu_inv_1.insert(0,inv_sel_3[5])
                                    bu_inv_1_1.delete(0,END)
                                    bu_inv_1_1.insert(0,inv_sel_3[9])
                                    bu_inv_1_2.delete('1.0',END)
                                    bu_inv_1_2.insert('1.0',inv_sel_3[13])
                                    bu_inv_1_3.delete(0,END)
                                    bu_inv_1_3.insert(0,round(inv_sel_3[21],2))
                                    bu_inv_1_4.delete(0,END)
                                    bu_inv_1_4.insert(0,inv_sel_3[17])
                                    bu_inv_1_5.delete(0,END)
                                    bu_inv_1_5.insert(0,round(inv_sel_3[25],2))
                                    bu_inv_1_6.delete(0,END)
                                    bu_inv_1_6.insert(0,inv_sel_3[29])
                                    bu_inv_2.delete(0,END)
                                    bu_inv_2.insert(0,inv_sel_3[6])
                                    bu_inv_2_1.delete(0,END)
                                    bu_inv_2_1.insert(0,inv_sel_3[10])
                                    bu_inv_2_2.delete('1.0',END)
                                    bu_inv_2_2.insert('1.0',inv_sel_3[14])
                                    bu_inv_2_3.delete(0,END)
                                    bu_inv_2_3.insert(0,round(inv_sel_3[22],2))
                                    bu_inv_2_4.delete(0,END)
                                    bu_inv_2_4.insert(0,inv_sel_3[18])
                                    bu_inv_2_5.delete(0,END)
                                    bu_inv_2_5.insert(0,round(inv_sel_3[26],2))
                                    bu_inv_2_6.delete(0,END)
                                    bu_inv_2_6.insert(0,inv_sel_3[30])
                                    bu_inv_3.delete(0,END)
                                    bu_inv_3.insert(0,inv_sel_3[7])
                                    bu_inv_3_1.delete(0,END)
                                    bu_inv_3_1.insert(0,inv_sel_3[11])
                                    bu_inv_3_2.delete('1.0',END)
                                    bu_inv_3_2.insert('1.0',inv_sel_3[15])
                                    bu_inv_3_3.delete(0,END)
                                    bu_inv_3_3.insert(0,round(inv_sel_3[23],2))
                                    bu_inv_3_4.delete(0,END)
                                    bu_inv_3_4.insert(0,inv_sel_3[19])
                                    bu_inv_3_5.delete(0,END)
                                    bu_inv_3_5.insert(0,round(inv_sel_3[27],2))
                                    bu_inv_3_6.delete(0,END)
                                    bu_inv_3_6.insert(0,inv_sel_3[31])
                                    bu_inv_4.delete(0,END)
                                    bu_inv_4.insert(0,inv_sel_3[8])
                                    bu_inv_4_1.delete(0,END)
                                    bu_inv_4_1.insert(0,inv_sel_3[12])
                                    bu_inv_4_2.delete('1.0',END)
                                    bu_inv_4_2.insert('1.0',inv_sel_3[16])
                                    bu_inv_4_3.delete(0,END)
                                    bu_inv_4_3.insert(0,round(inv_sel_3[24],2))
                                    bu_inv_4_4.delete(0,END)
                                    bu_inv_4_4.insert(0,inv_sel_3[20])
                                    bu_inv_4_5.delete(0,END)
                                    bu_inv_4_5.insert(0,round(inv_sel_3[28],2))
                                    bu_inv_4_6.delete(0,END)
                                    bu_inv_4_6.insert(0,inv_sel_3[32])

                                    
                                

                                    try:
                                        n1 = float(en_str_1.get())
                                    except:
                                        n1=0.0
                                    try:
                                        n2 = float(en_str_2.get())
                                    except:
                                        n2 = 0.0
                                    try:
                                        n3 = float(en_str_3.get())
                                    except:
                                        n3 = 0.0
                                    try:
                                        n4 = float(en_str_4.get())
                                    except:
                                        n4 = 0.0
                                    try:
                                        n5 = float(en_str_5.get())
                                    except:
                                        n5 = 0.0 
                                    try:
                                        n6 = float(en_str_6.get())
                                    except:
                                        n6 = 0.0 
                                    try:
                                        n7 = float(en_str_7.get())
                                    except:
                                        n7 = 0.0 
                                    try:
                                        n8 = float(en_str_8.get())
                                    except:
                                        n8 = 0.0 

                                    sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                    bsub_entry_1.delete(0, END)
                                    bsub_entry_1.insert(0,round(sum_i,2))

                                    if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(15/100)
                                    elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14.5/100)
                                    elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12.36/100)
                                    elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(4/100)
                                    elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(2/100)
                                    elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    else:
                                        if en_str_1.get()==' ':
                                            y1 = float(en_str_1.get())
                                        else:
                                            y1=0.0
                                        t1 = y1*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(15/100)
                                    elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14.5/100)
                                    elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12.36/100)
                                    elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(4/100)
                                    elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(2/100)
                                    elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    else:
                                        if en_str_2.get()==' ':
                                            y2 = float(en_str_2.get())
                                        else:
                                            y2=0.0
                                        t2 = y2*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(15/100)
                                    elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14.5/100)
                                    elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12.36/100)
                                    elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(4/100)
                                    elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(2/100)
                                    elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    else:
                                        
                                        if en_str_3.get()==' ':
                                            y3 = float(en_str_3.get())
                                        else:
                                            y3=0.0
                                        t3 = y3*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    grand_entry_1.delete(0, END)
                                    grand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(15/100)
                                    elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14.5/100)
                                    elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12.36/100)
                                    elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(4/100)
                                    elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(2/100)
                                    elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    else:
                                        if en_str_4.get()==' ':
                                            y4 = float(en_str_4.get())
                                        else:
                                            y4=0.0
                                        t4 = y4*(0/100)

                                    
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    
                                    if bu_inv_1_6.get() == '28.0% GST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(15/100)
                                    elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14.5/100)
                                    elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12.36/100)
                                    elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(4/100)
                                    elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(2/100)
                                    elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0% GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == '0% IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    else:
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        tm6 = 0.0
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_2_6.get() == '28.0% GST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(15/100)
                                    elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14.5/100)
                                    elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12.36/100)
                                    elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(4/100)
                                    elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(2/100)
                                    elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0% GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == '0% IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    else:
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_3_6.get() == '28.0% GST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(15/100)
                                    elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14.5/100)
                                    elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12.36/100)
                                    elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(4/100)
                                    elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(2/100)
                                    elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0% GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == '0% IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    else:
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_4_6.get() == '28.0% GST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(15/100)
                                    elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14.5/100)
                                    elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12.36/100)
                                    elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(4/100)
                                    elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(2/100)
                                    elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0% GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == '0% IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    else:
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))


                                    


                                else:
                                    pass

                            def i_details_sl_2(event):
                                inv_to_str_2 = ai_comb_p_2.get()

                                sql = "select * from app1_inventory where name=%s and cid_id=%s"
                                val = (inv_to_str_2,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_se_1 = fbcursor.fetchone()

                                sql = "select * from app1_noninventory where name=%s and cid_id=%s"
                                val = (inv_to_str_2,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_se_2 = fbcursor.fetchone()

                                sql = "select * from app1_bundle where name=%s and cid_id=%s"
                                val = (inv_to_str_2,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_se_3 = fbcursor.fetchone() 

                                if inv_se_1 is not None:
                                    
                                    ai_entry_p_2.delete(0,END)
                                    ai_entry_p_2.insert(0,inv_se_1[4])
                                    ai_entry_p_2_1.delete('1.0',END)
                                    ai_entry_p_2_1.insert('1.0',inv_se_1[11])
                                    ai_entry_2_3.delete(0,END)
                                    ai_entry_2_3.insert(0,round(float(inv_se_1[12]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry17',state='normal')
                                    sr_Canvas_1.itemconfig('aientry20',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo9',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_se_2 is not None:
                                    
                                    ai_entry_p_2.delete(0,END)
                                    ai_entry_p_2.insert(0,inv_se_2[4])
                                    ai_entry_p_2_1.delete('1.0',END)
                                    ai_entry_p_2_1.insert('1.0',inv_se_2[7])
                                    ai_entry_2_3.delete(0,END)
                                    ai_entry_2_3.insert(0,round(float(inv_se_2[8]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry17',state='normal')
                                    sr_Canvas_1.itemconfig('aientry20',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo9',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_se_3 is not None:
                                    
                                    ai_entry_p_2.delete(0,END)
                                    ai_entry_p_2.insert(0,inv_se_3[3])
                                    ai_entry_p_2_1.delete('1.0',END)
                                    ai_entry_p_2_1.insert('1.0',inv_se_3[4])
                                    sr_Canvas_1.itemconfig('aientry17',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry20',state='hidden')
                                    sr_Canvas_1.itemconfig('aicombo9',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine25',state='normal')
                                    sr_Canvas_1.itemconfig('ailine26',state='normal')
                                    sr_Canvas_1.itemconfig('ailine27',state='normal')
                                    sr_Canvas_1.itemconfig('ailine28',state='normal')
                                    sr_Canvas_1.itemconfig('ailine29',state='normal')
                                    sr_Canvas_1.itemconfig('ailine30',state='normal')
                                    sr_Canvas_1.itemconfig('ailine31',state='normal')
                                    sr_Canvas_1.itemconfig('ailine32',state='normal')
                                    sr_Canvas_1.itemconfig('ailine33',state='normal')
                                    sr_Canvas_1.itemconfig('ailine34',state='normal')
                                    sr_Canvas_1.itemconfig('ailine35',state='normal')
                                    sr_Canvas_1.itemconfig('ailine36',state='normal')
                                    sr_Canvas_1.itemconfig('ailine37',state='normal')
                                    sr_Canvas_1.itemconfig('ailine38',state='normal')
                                    sr_Canvas_1.itemconfig('ailine39',state='normal')
                                    sr_Canvas_1.itemconfig('ailine40',state='normal')
                                    sr_Canvas_1.itemconfig('ailine41',state='normal')
                                    sr_Canvas_1.itemconfig('ailine42',state='normal')
                                    sr_Canvas_1.itemconfig('ailine43',state='normal')
                                    sr_Canvas_1.itemconfig('ailine44',state='normal')
                                    sr_Canvas_1.itemconfig('ailine45',state='normal')
                                    sr_Canvas_1.itemconfig('ailine46',state='normal')
                                    sr_Canvas_1.itemconfig('bient1',state='normal')
                                    sr_Canvas_1.itemconfig('bient5',state='normal')
                                    sr_Canvas_1.itemconfig('bient9',state='normal')
                                    sr_Canvas_1.itemconfig('bient13',state='normal')
                                    sr_Canvas_1.itemconfig('bient17',state='normal')
                                    sr_Canvas_1.itemconfig('bient21',state='normal')
                                    sr_Canvas_1.itemconfig('bient25',state='normal')
                                    sr_Canvas_1.itemconfig('bient2',state='normal')
                                    sr_Canvas_1.itemconfig('bient6',state='normal')
                                    sr_Canvas_1.itemconfig('bient10',state='normal')
                                    sr_Canvas_1.itemconfig('bient14',state='normal')
                                    sr_Canvas_1.itemconfig('bient18',state='normal')
                                    sr_Canvas_1.itemconfig('bient22',state='normal')
                                    sr_Canvas_1.itemconfig('bient26',state='normal')
                                    sr_Canvas_1.itemconfig('bient3',state='normal')
                                    sr_Canvas_1.itemconfig('bient7',state='normal')
                                    sr_Canvas_1.itemconfig('bient11',state='normal')
                                    sr_Canvas_1.itemconfig('bient15',state='normal')
                                    sr_Canvas_1.itemconfig('bient19',state='normal')
                                    sr_Canvas_1.itemconfig('bient23',state='normal')
                                    sr_Canvas_1.itemconfig('bient27',state='normal')
                                    sr_Canvas_1.itemconfig('bient4',state='normal')
                                    sr_Canvas_1.itemconfig('bient8',state='normal')
                                    sr_Canvas_1.itemconfig('bient12',state='normal')
                                    sr_Canvas_1.itemconfig('bient16',state='normal')
                                    sr_Canvas_1.itemconfig('bient20',state='normal')
                                    sr_Canvas_1.itemconfig('bient24',state='normal')
                                    sr_Canvas_1.itemconfig('bient28',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl1',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl2',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl3',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl4',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl5',state='normal')
                                    sr_Canvas_1.itemconfig('bient29',state='normal')
                                    sr_Canvas_1.itemconfig('bient30',state='normal')
                                    sr_Canvas_1.itemconfig('bient31',state='normal')
                                    sr_Canvas_1.itemconfig('bient32',state='normal')
                                    sr_Canvas_1.itemconfig('bient33',state='normal')
                                    sr_Canvas_1.itemconfig('bbutn1',state='normal')

                                    sr_Canvas_1.itemconfig('ailine16',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine17',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine18',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine19',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine20',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine21',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine22',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel27',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry23',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry24',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry25',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry26',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry27',state='hidden')
                                    sr_Canvas_1.itemconfig('aibutton2',state='hidden')

                                    bu_inv_1.delete(0,END)
                                    bu_inv_1.insert(0,inv_se_3[5])
                                    bu_inv_1_1.delete(0,END)
                                    bu_inv_1_1.insert(0,inv_se_3[9])
                                    bu_inv_1_2.delete('1.0',END)
                                    bu_inv_1_2.insert('1.0',inv_se_3[13])
                                    bu_inv_1_3.delete(0,END)
                                    bu_inv_1_3.insert(0,round(inv_se_3[21],2))
                                    bu_inv_1_4.delete(0,END)
                                    bu_inv_1_4.insert(0,inv_se_3[17])
                                    bu_inv_1_5.delete(0,END)
                                    bu_inv_1_5.insert(0,round(inv_se_3[25],2))
                                    bu_inv_1_6.delete(0,END)
                                    bu_inv_1_6.insert(0,inv_se_3[29])
                                    bu_inv_2.delete(0,END)
                                    bu_inv_2.insert(0,inv_se_3[6])
                                    bu_inv_2_1.delete(0,END)
                                    bu_inv_2_1.insert(0,inv_se_3[10])
                                    bu_inv_2_2.delete('1.0',END)
                                    bu_inv_2_2.insert('1.0',inv_se_3[14])
                                    bu_inv_2_3.delete(0,END)
                                    bu_inv_2_3.insert(0,round(inv_se_3[22],2))
                                    bu_inv_2_4.delete(0,END)
                                    bu_inv_2_4.insert(0,inv_se_3[18])
                                    bu_inv_2_5.delete(0,END)
                                    bu_inv_2_5.insert(0,round(inv_se_3[26],2))
                                    bu_inv_2_6.delete(0,END)
                                    bu_inv_2_6.insert(0,inv_se_3[30])
                                    bu_inv_3.delete(0,END)
                                    bu_inv_3.insert(0,inv_se_3[7])
                                    bu_inv_3_1.delete(0,END)
                                    bu_inv_3_1.insert(0,inv_se_3[11])
                                    bu_inv_3_2.delete('1.0',END)
                                    bu_inv_3_2.insert('1.0',inv_se_3[15])
                                    bu_inv_3_3.delete(0,END)
                                    bu_inv_3_3.insert(0,round(inv_se_3[23],2))
                                    bu_inv_3_4.delete(0,END)
                                    bu_inv_3_4.insert(0,inv_se_3[19])
                                    bu_inv_3_5.delete(0,END)
                                    bu_inv_3_5.insert(0,round(inv_se_3[27],2))
                                    bu_inv_3_6.delete(0,END)
                                    bu_inv_3_6.insert(0,inv_se_3[31])
                                    bu_inv_4.delete(0,END)
                                    bu_inv_4.insert(0,inv_se_3[8])
                                    bu_inv_4_1.delete(0,END)
                                    bu_inv_4_1.insert(0,inv_se_3[12])
                                    bu_inv_4_2.delete('1.0',END)
                                    bu_inv_4_2.insert('1.0',inv_se_3[16])
                                    bu_inv_4_3.delete(0,END)
                                    bu_inv_4_3.insert(0,round(inv_se_3[24],2))
                                    bu_inv_4_4.delete(0,END)
                                    bu_inv_4_4.insert(0,inv_se_3[20])
                                    bu_inv_4_5.delete(0,END)
                                    bu_inv_4_5.insert(0,round(inv_se_3[28],2))
                                    bu_inv_4_6.delete(0,END)
                                    bu_inv_4_6.insert(0,inv_se_3[32])

                                    try:
                                        n1 = float(en_str_1.get())
                                    except:
                                        n1=0.0
                                    try:
                                        n2 = float(en_str_2.get())
                                    except:
                                        n2 = 0.0
                                    try:
                                        n3 = float(en_str_3.get())
                                    except:
                                        n3 = 0.0
                                    try:
                                        n4 = float(en_str_4.get())
                                    except:
                                        n4 = 0.0
                                    try:
                                        n5 = float(en_str_5.get())
                                    except:
                                        n5 = 0.0 
                                    try:
                                        n6 = float(en_str_6.get())
                                    except:
                                        n6 = 0.0 
                                    try:
                                        n7 = float(en_str_7.get())
                                    except:
                                        n7 = 0.0 
                                    try:
                                        n8 = float(en_str_8.get())
                                    except:
                                        n8 = 0.0 

                                    sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                    bsub_entry_1.delete(0, END)
                                    bsub_entry_1.insert(0,round(sum_i,2))

                                    if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(15/100)
                                    elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14.5/100)
                                    elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12.36/100)
                                    elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(4/100)
                                    elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(2/100)
                                    elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    else:
                                        if en_str_1.get()==' ':
                                            y1 = float(en_str_1.get())
                                        else:
                                            y1=0.0
                                        t1 = y1*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(15/100)
                                    elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14.5/100)
                                    elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12.36/100)
                                    elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(4/100)
                                    elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(2/100)
                                    elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    else:
                                        if en_str_2.get()==' ':
                                            y2 = float(en_str_2.get())
                                        else:
                                            y2=0.0
                                        t2 = y2*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(15/100)
                                    elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14.5/100)
                                    elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12.36/100)
                                    elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(4/100)
                                    elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(2/100)
                                    elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    else:
                                        
                                        if en_str_3.get()==' ':
                                            y3 = float(en_str_3.get())
                                        else:
                                            y3=0.0
                                        t3 = y3*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    grand_entry_1.delete(0, END)
                                    grand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(15/100)
                                    elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14.5/100)
                                    elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12.36/100)
                                    elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(4/100)
                                    elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(2/100)
                                    elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    else:
                                        if en_str_4.get()==' ':
                                            y4 = float(en_str_4.get())
                                        else:
                                            y4=0.0
                                        t4 = y4*(0/100)

                                    
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    
                                    if bu_inv_1_6.get() == '28.0% GST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(15/100)
                                    elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14.5/100)
                                    elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12.36/100)
                                    elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(4/100)
                                    elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(2/100)
                                    elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0% GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == '0% IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    else:
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        tm6 = 0.0
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_2_6.get() == '28.0% GST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(15/100)
                                    elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14.5/100)
                                    elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12.36/100)
                                    elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(4/100)
                                    elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(2/100)
                                    elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0% GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == '0% IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    else:
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_3_6.get() == '28.0% GST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(15/100)
                                    elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14.5/100)
                                    elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12.36/100)
                                    elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(4/100)
                                    elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(2/100)
                                    elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0% GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == '0% IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    else:
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_4_6.get() == '28.0% GST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(15/100)
                                    elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14.5/100)
                                    elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12.36/100)
                                    elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(4/100)
                                    elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(2/100)
                                    elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0% GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == '0% IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    else:
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))
                                    
                                else:
                                    pass

                            def i_details_sl_3(event):
                                inv_to_str_3 = ai_comb_p_3.get()

                                sql = "select * from app1_inventory where name=%s and cid_id=%s"
                                val = (inv_to_str_3,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_s_1 = fbcursor.fetchone()

                                sql = "select * from app1_noninventory where name=%s and cid_id=%s"
                                val = (inv_to_str_3,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_s_2 = fbcursor.fetchone()

                                sql = "select * from app1_bundle where name=%s and cid_id=%s"
                                val = (inv_to_str_3,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_s_3 = fbcursor.fetchone() 

                                if inv_s_1 is not None:
                                    
                                    ai_entry_3.delete(0,END)
                                    ai_entry_3.insert(0,inv_s_1[4])
                                    ai_entry_3_1.delete('1.0',END)
                                    ai_entry_3_1.insert('1.0',inv_s_1[11])
                                    ai_entry_3_3.delete(0,END)
                                    ai_entry_3_3.insert(0,round(float(inv_s_1[12]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry18',state='normal')
                                    sr_Canvas_1.itemconfig('aientry21',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo10',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_s_2 is not None:
                                    
                                    ai_entry_3.delete(0,END)
                                    ai_entry_3.insert(0,inv_s_2[4])
                                    ai_entry_3_1.delete('1.0',END)
                                    ai_entry_3_1.insert('1.0',inv_s_2[7])
                                    ai_entry_3_3.delete(0,END)
                                    ai_entry_3_3.insert(0,round(float(inv_s_2[8]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry18',state='normal')
                                    sr_Canvas_1.itemconfig('aientry21',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo10',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_s_3 is not None:
                                    
                                    ai_entry_3.delete(0,END)
                                    ai_entry_3.insert(0,inv_s_3[3])
                                    ai_entry_3_1.delete('1.0',END)
                                    ai_entry_3_1.insert('1.0',inv_s_3[4])
                                    sr_Canvas_1.itemconfig('aientry18',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry21',state='hidden')
                                    sr_Canvas_1.itemconfig('aicombo10',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine25',state='normal')
                                    sr_Canvas_1.itemconfig('ailine26',state='normal')
                                    sr_Canvas_1.itemconfig('ailine27',state='normal')
                                    sr_Canvas_1.itemconfig('ailine28',state='normal')
                                    sr_Canvas_1.itemconfig('ailine29',state='normal')
                                    sr_Canvas_1.itemconfig('ailine30',state='normal')
                                    sr_Canvas_1.itemconfig('ailine31',state='normal')
                                    sr_Canvas_1.itemconfig('ailine32',state='normal')
                                    sr_Canvas_1.itemconfig('ailine33',state='normal')
                                    sr_Canvas_1.itemconfig('ailine34',state='normal')
                                    sr_Canvas_1.itemconfig('ailine35',state='normal')
                                    sr_Canvas_1.itemconfig('ailine36',state='normal')
                                    sr_Canvas_1.itemconfig('ailine37',state='normal')
                                    sr_Canvas_1.itemconfig('ailine38',state='normal')
                                    sr_Canvas_1.itemconfig('ailine39',state='normal')
                                    sr_Canvas_1.itemconfig('ailine40',state='normal')
                                    sr_Canvas_1.itemconfig('ailine41',state='normal')
                                    sr_Canvas_1.itemconfig('ailine42',state='normal')
                                    sr_Canvas_1.itemconfig('ailine43',state='normal')
                                    sr_Canvas_1.itemconfig('ailine44',state='normal')
                                    sr_Canvas_1.itemconfig('ailine45',state='normal')
                                    sr_Canvas_1.itemconfig('ailine46',state='normal')
                                    sr_Canvas_1.itemconfig('bient1',state='normal')
                                    sr_Canvas_1.itemconfig('bient5',state='normal')
                                    sr_Canvas_1.itemconfig('bient9',state='normal')
                                    sr_Canvas_1.itemconfig('bient13',state='normal')
                                    sr_Canvas_1.itemconfig('bient17',state='normal')
                                    sr_Canvas_1.itemconfig('bient21',state='normal')
                                    sr_Canvas_1.itemconfig('bient25',state='normal')
                                    sr_Canvas_1.itemconfig('bient2',state='normal')
                                    sr_Canvas_1.itemconfig('bient6',state='normal')
                                    sr_Canvas_1.itemconfig('bient10',state='normal')
                                    sr_Canvas_1.itemconfig('bient14',state='normal')
                                    sr_Canvas_1.itemconfig('bient18',state='normal')
                                    sr_Canvas_1.itemconfig('bient22',state='normal')
                                    sr_Canvas_1.itemconfig('bient26',state='normal')
                                    sr_Canvas_1.itemconfig('bient3',state='normal')
                                    sr_Canvas_1.itemconfig('bient7',state='normal')
                                    sr_Canvas_1.itemconfig('bient11',state='normal')
                                    sr_Canvas_1.itemconfig('bient15',state='normal')
                                    sr_Canvas_1.itemconfig('bient19',state='normal')
                                    sr_Canvas_1.itemconfig('bient23',state='normal')
                                    sr_Canvas_1.itemconfig('bient27',state='normal')
                                    sr_Canvas_1.itemconfig('bient4',state='normal')
                                    sr_Canvas_1.itemconfig('bient8',state='normal')
                                    sr_Canvas_1.itemconfig('bient12',state='normal')
                                    sr_Canvas_1.itemconfig('bient16',state='normal')
                                    sr_Canvas_1.itemconfig('bient20',state='normal')
                                    sr_Canvas_1.itemconfig('bient24',state='normal')
                                    sr_Canvas_1.itemconfig('bient28',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl1',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl2',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl3',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl4',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl5',state='normal')
                                    sr_Canvas_1.itemconfig('bient29',state='normal')
                                    sr_Canvas_1.itemconfig('bient30',state='normal')
                                    sr_Canvas_1.itemconfig('bient31',state='normal')
                                    sr_Canvas_1.itemconfig('bient32',state='normal')
                                    sr_Canvas_1.itemconfig('bient33',state='normal')
                                    sr_Canvas_1.itemconfig('bbutn1',state='normal')

                                    sr_Canvas_1.itemconfig('ailine16',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine17',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine18',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine19',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine20',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine21',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine22',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel27',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry23',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry24',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry25',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry26',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry27',state='hidden')
                                    sr_Canvas_1.itemconfig('aibutton2',state='hidden')

                                    bu_inv_1.delete(0,END)
                                    bu_inv_1.insert(0,inv_s_3[5])
                                    bu_inv_1_1.delete(0,END)
                                    bu_inv_1_1.insert(0,inv_s_3[9])
                                    bu_inv_1_2.delete('1.0',END)
                                    bu_inv_1_2.insert('1.0',inv_s_3[13])
                                    bu_inv_1_3.delete(0,END)
                                    bu_inv_1_3.insert(0,round(inv_s_3[21],2))
                                    bu_inv_1_4.delete(0,END)
                                    bu_inv_1_4.insert(0,inv_s_3[17])
                                    bu_inv_1_5.delete(0,END)
                                    bu_inv_1_5.insert(0,round(inv_s_3[25],2))
                                    bu_inv_1_6.delete(0,END)
                                    bu_inv_1_6.insert(0,inv_s_3[29])
                                    bu_inv_2.delete(0,END)
                                    bu_inv_2.insert(0,inv_s_3[6])
                                    bu_inv_2_1.delete(0,END)
                                    bu_inv_2_1.insert(0,inv_s_3[10])
                                    bu_inv_2_2.delete('1.0',END)
                                    bu_inv_2_2.insert('1.0',inv_s_3[14])
                                    bu_inv_2_3.delete(0,END)
                                    bu_inv_2_3.insert(0,round(inv_s_3[22],2))
                                    bu_inv_2_4.delete(0,END)
                                    bu_inv_2_4.insert(0,inv_s_3[18])
                                    bu_inv_2_5.delete(0,END)
                                    bu_inv_2_5.insert(0,round(inv_s_3[26],2))
                                    bu_inv_2_6.delete(0,END)
                                    bu_inv_2_6.insert(0,inv_s_3[30])
                                    bu_inv_3.delete(0,END)
                                    bu_inv_3.insert(0,inv_s_3[7])
                                    bu_inv_3_1.delete(0,END)
                                    bu_inv_3_1.insert(0,inv_s_3[11])
                                    bu_inv_3_2.delete('1.0',END)
                                    bu_inv_3_2.insert('1.0',inv_s_3[15])
                                    bu_inv_3_3.delete(0,END)
                                    bu_inv_3_3.insert(0,round(inv_s_3[23],2))
                                    bu_inv_3_4.delete(0,END)
                                    bu_inv_3_4.insert(0,inv_s_3[19])
                                    bu_inv_3_5.delete(0,END)
                                    bu_inv_3_5.insert(0,round(inv_s_3[27],2))
                                    bu_inv_3_6.delete(0,END)
                                    bu_inv_3_6.insert(0,inv_s_3[31])
                                    bu_inv_4.delete(0,END)
                                    bu_inv_4.insert(0,inv_s_3[8])
                                    bu_inv_4_1.delete(0,END)
                                    bu_inv_4_1.insert(0,inv_s_3[12])
                                    bu_inv_4_2.delete('1.0',END)
                                    bu_inv_4_2.insert('1.0',inv_s_3[16])
                                    bu_inv_4_3.delete(0,END)
                                    bu_inv_4_3.insert(0,round(inv_s_3[24],2))
                                    bu_inv_4_4.delete(0,END)
                                    bu_inv_4_4.insert(0,inv_s_3[20])
                                    bu_inv_4_5.delete(0,END)
                                    bu_inv_4_5.insert(0,round(inv_s_3[28],2))
                                    bu_inv_4_6.delete(0,END)
                                    bu_inv_4_6.insert(0,inv_s_3[32])

                                    try:
                                        n1 = float(en_str_1.get())
                                    except:
                                        n1=0.0
                                    try:
                                        n2 = float(en_str_2.get())
                                    except:
                                        n2 = 0.0
                                    try:
                                        n3 = float(en_str_3.get())
                                    except:
                                        n3 = 0.0
                                    try:
                                        n4 = float(en_str_4.get())
                                    except:
                                        n4 = 0.0
                                    try:
                                        n5 = float(en_str_5.get())
                                    except:
                                        n5 = 0.0 
                                    try:
                                        n6 = float(en_str_6.get())
                                    except:
                                        n6 = 0.0 
                                    try:
                                        n7 = float(en_str_7.get())
                                    except:
                                        n7 = 0.0 
                                    try:
                                        n8 = float(en_str_8.get())
                                    except:
                                        n8 = 0.0 

                                    sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                    bsub_entry_1.delete(0, END)
                                    bsub_entry_1.insert(0,round(sum_i,2))

                                    if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(15/100)
                                    elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14.5/100)
                                    elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12.36/100)
                                    elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(4/100)
                                    elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(2/100)
                                    elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    else:
                                        if en_str_1.get()==' ':
                                            y1 = float(en_str_1.get())
                                        else:
                                            y1=0.0
                                        t1 = y1*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(15/100)
                                    elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14.5/100)
                                    elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12.36/100)
                                    elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(4/100)
                                    elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(2/100)
                                    elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    else:
                                        if en_str_2.get()==' ':
                                            y2 = float(en_str_2.get())
                                        else:
                                            y2=0.0
                                        t2 = y2*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(15/100)
                                    elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14.5/100)
                                    elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12.36/100)
                                    elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(4/100)
                                    elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(2/100)
                                    elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    else:
                                        
                                        if en_str_3.get()==' ':
                                            y3 = float(en_str_3.get())
                                        else:
                                            y3=0.0
                                        t3 = y3*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    grand_entry_1.delete(0, END)
                                    grand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(15/100)
                                    elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14.5/100)
                                    elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12.36/100)
                                    elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(4/100)
                                    elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(2/100)
                                    elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    else:
                                        if en_str_4.get()==' ':
                                            y4 = float(en_str_4.get())
                                        else:
                                            y4=0.0
                                        t4 = y4*(0/100)

                                    
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    
                                    if bu_inv_1_6.get() == '28.0% GST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(15/100)
                                    elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14.5/100)
                                    elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12.36/100)
                                    elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(4/100)
                                    elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(2/100)
                                    elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0% GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == '0% IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    else:
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        tm6 = 0.0
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_2_6.get() == '28.0% GST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(15/100)
                                    elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14.5/100)
                                    elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12.36/100)
                                    elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(4/100)
                                    elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(2/100)
                                    elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0% GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == '0% IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    else:
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_3_6.get() == '28.0% GST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(15/100)
                                    elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14.5/100)
                                    elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12.36/100)
                                    elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(4/100)
                                    elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(2/100)
                                    elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0% GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == '0% IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    else:
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_4_6.get() == '28.0% GST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(15/100)
                                    elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14.5/100)
                                    elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12.36/100)
                                    elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(4/100)
                                    elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(2/100)
                                    elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0% GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == '0% IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    else:
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))
                                    
                                else:
                                    pass

                            def i_details_sl_4(event):
                                inv_to_str_4 = ai_comb_p_4.get()

                                sql = "select * from app1_inventory where name=%s and cid_id=%s"
                                val = (inv_to_str_4,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_ss_1 = fbcursor.fetchone()

                                sql = "select * from app1_noninventory where name=%s and cid_id=%s"
                                val = (inv_to_str_4,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_ss_2 = fbcursor.fetchone()

                                sql = "select * from app1_bundle where name=%s and cid_id=%s"
                                val = (inv_to_str_4,cmp_dtl_i[0],)
                                fbcursor.execute(sql,val)
                                inv_ss_3 = fbcursor.fetchone() 

                                if inv_ss_1 is not None:
                                    
                                    ai_entry_4.delete(0,END)
                                    ai_entry_4.insert(0,inv_ss_1[4])
                                    ai_entry_4_1.delete('1.0',END)
                                    ai_entry_4_1.insert('1.0',inv_ss_1[11])
                                    ai_entry_4_3.delete(0,END)
                                    ai_entry_4_3.insert(0,round(float(inv_ss_1[12]),2))
                                   
                                    sr_Canvas_1.itemconfig('aientry19',state='normal')
                                    sr_Canvas_1.itemconfig('aientry22',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo11',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_ss_2 is not None:
                                    
                                    ai_entry_4.delete(0,END)
                                    ai_entry_4.insert(0,inv_ss_2[4])
                                    ai_entry_4_1.delete('1.0',END)
                                    ai_entry_4_1.insert('1.0',inv_ss_2[7])
                                    ai_entry_4_3.delete(0,END)
                                    ai_entry_4_3.insert(0,round(float(inv_ss_2[8]),2))
                                    
                                    sr_Canvas_1.itemconfig('aientry19',state='normal')
                                    sr_Canvas_1.itemconfig('aientry22',state='normal')
                                    sr_Canvas_1.itemconfig('aicombo11',state='normal')

                                    sr_Canvas_1.itemconfig('ailine25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine27',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine28',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine29',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine30',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine31',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine32',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine33',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine34',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine35',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine36',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine37',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine38',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine39',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine40',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine41',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine42',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine43',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine44',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine45',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine46',state='hidden')
                                    sr_Canvas_1.itemconfig('bient1',state='hidden')
                                    sr_Canvas_1.itemconfig('bient5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient9',state='hidden')
                                    sr_Canvas_1.itemconfig('bient13',state='hidden')
                                    sr_Canvas_1.itemconfig('bient17',state='hidden')
                                    sr_Canvas_1.itemconfig('bient21',state='hidden')
                                    sr_Canvas_1.itemconfig('bient25',state='hidden')
                                    sr_Canvas_1.itemconfig('bient2',state='hidden')
                                    sr_Canvas_1.itemconfig('bient6',state='hidden')
                                    sr_Canvas_1.itemconfig('bient10',state='hidden')
                                    sr_Canvas_1.itemconfig('bient14',state='hidden')
                                    sr_Canvas_1.itemconfig('bient18',state='hidden')
                                    sr_Canvas_1.itemconfig('bient22',state='hidden')
                                    sr_Canvas_1.itemconfig('bient26',state='hidden')
                                    sr_Canvas_1.itemconfig('bient3',state='hidden')
                                    sr_Canvas_1.itemconfig('bient7',state='hidden')
                                    sr_Canvas_1.itemconfig('bient11',state='hidden')
                                    sr_Canvas_1.itemconfig('bient15',state='hidden')
                                    sr_Canvas_1.itemconfig('bient19',state='hidden')
                                    sr_Canvas_1.itemconfig('bient23',state='hidden')
                                    sr_Canvas_1.itemconfig('bient27',state='hidden')
                                    sr_Canvas_1.itemconfig('bient4',state='hidden')
                                    sr_Canvas_1.itemconfig('bient8',state='hidden')
                                    sr_Canvas_1.itemconfig('bient12',state='hidden')
                                    sr_Canvas_1.itemconfig('bient16',state='hidden')
                                    sr_Canvas_1.itemconfig('bient20',state='hidden')
                                    sr_Canvas_1.itemconfig('bient24',state='hidden')
                                    sr_Canvas_1.itemconfig('bient28',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl1',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl2',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl3',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl4',state='hidden')
                                    sr_Canvas_1.itemconfig('bilabl5',state='hidden')
                                    sr_Canvas_1.itemconfig('bient29',state='hidden')
                                    sr_Canvas_1.itemconfig('bient30',state='hidden')
                                    sr_Canvas_1.itemconfig('bient31',state='hidden')
                                    sr_Canvas_1.itemconfig('bient32',state='hidden')
                                    sr_Canvas_1.itemconfig('bient33',state='hidden')
                                    sr_Canvas_1.itemconfig('bbutn1',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine16',state='normal')
                                    sr_Canvas_1.itemconfig('ailine17',state='normal')
                                    sr_Canvas_1.itemconfig('ailine18',state='normal')
                                    sr_Canvas_1.itemconfig('ailine19',state='normal')
                                    sr_Canvas_1.itemconfig('ailine20',state='normal')
                                    sr_Canvas_1.itemconfig('ailine21',state='normal')
                                    sr_Canvas_1.itemconfig('ailine22',state='normal')
                                    sr_Canvas_1.itemconfig('ailine23',state='normal')
                                    sr_Canvas_1.itemconfig('ailine24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel23',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel24',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel25',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel26',state='normal')
                                    sr_Canvas_1.itemconfig('ailabel27',state='normal')
                                    sr_Canvas_1.itemconfig('aientry23',state='normal')
                                    sr_Canvas_1.itemconfig('aientry24',state='normal')
                                    sr_Canvas_1.itemconfig('aientry25',state='normal')
                                    sr_Canvas_1.itemconfig('aientry26',state='normal')
                                    sr_Canvas_1.itemconfig('aientry27',state='normal')
                                    sr_Canvas_1.itemconfig('aibutton2',state='normal')

                                elif inv_ss_3 is not None:
                                    
                                    ai_entry_4.delete(0,END)
                                    ai_entry_4.insert(0,inv_ss_3[3])
                                    ai_entry_4_1.delete('1.0',END)
                                    ai_entry_4_1.insert('1.0',inv_ss_3[4])
                                    sr_Canvas_1.itemconfig('aientry19',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry22',state='hidden')
                                    sr_Canvas_1.itemconfig('aicombo11',state='hidden')

                                    sr_Canvas_1.itemconfig('ailine25',state='normal')
                                    sr_Canvas_1.itemconfig('ailine26',state='normal')
                                    sr_Canvas_1.itemconfig('ailine27',state='normal')
                                    sr_Canvas_1.itemconfig('ailine28',state='normal')
                                    sr_Canvas_1.itemconfig('ailine29',state='normal')
                                    sr_Canvas_1.itemconfig('ailine30',state='normal')
                                    sr_Canvas_1.itemconfig('ailine31',state='normal')
                                    sr_Canvas_1.itemconfig('ailine32',state='normal')
                                    sr_Canvas_1.itemconfig('ailine33',state='normal')
                                    sr_Canvas_1.itemconfig('ailine34',state='normal')
                                    sr_Canvas_1.itemconfig('ailine35',state='normal')
                                    sr_Canvas_1.itemconfig('ailine36',state='normal')
                                    sr_Canvas_1.itemconfig('ailine37',state='normal')
                                    sr_Canvas_1.itemconfig('ailine38',state='normal')
                                    sr_Canvas_1.itemconfig('ailine39',state='normal')
                                    sr_Canvas_1.itemconfig('ailine40',state='normal')
                                    sr_Canvas_1.itemconfig('ailine41',state='normal')
                                    sr_Canvas_1.itemconfig('ailine42',state='normal')
                                    sr_Canvas_1.itemconfig('ailine43',state='normal')
                                    sr_Canvas_1.itemconfig('ailine44',state='normal')
                                    sr_Canvas_1.itemconfig('ailine45',state='normal')
                                    sr_Canvas_1.itemconfig('ailine46',state='normal')
                                    sr_Canvas_1.itemconfig('bient1',state='normal')
                                    sr_Canvas_1.itemconfig('bient5',state='normal')
                                    sr_Canvas_1.itemconfig('bient9',state='normal')
                                    sr_Canvas_1.itemconfig('bient13',state='normal')
                                    sr_Canvas_1.itemconfig('bient17',state='normal')
                                    sr_Canvas_1.itemconfig('bient21',state='normal')
                                    sr_Canvas_1.itemconfig('bient25',state='normal')
                                    sr_Canvas_1.itemconfig('bient2',state='normal')
                                    sr_Canvas_1.itemconfig('bient6',state='normal')
                                    sr_Canvas_1.itemconfig('bient10',state='normal')
                                    sr_Canvas_1.itemconfig('bient14',state='normal')
                                    sr_Canvas_1.itemconfig('bient18',state='normal')
                                    sr_Canvas_1.itemconfig('bient22',state='normal')
                                    sr_Canvas_1.itemconfig('bient26',state='normal')
                                    sr_Canvas_1.itemconfig('bient3',state='normal')
                                    sr_Canvas_1.itemconfig('bient7',state='normal')
                                    sr_Canvas_1.itemconfig('bient11',state='normal')
                                    sr_Canvas_1.itemconfig('bient15',state='normal')
                                    sr_Canvas_1.itemconfig('bient19',state='normal')
                                    sr_Canvas_1.itemconfig('bient23',state='normal')
                                    sr_Canvas_1.itemconfig('bient27',state='normal')
                                    sr_Canvas_1.itemconfig('bient4',state='normal')
                                    sr_Canvas_1.itemconfig('bient8',state='normal')
                                    sr_Canvas_1.itemconfig('bient12',state='normal')
                                    sr_Canvas_1.itemconfig('bient16',state='normal')
                                    sr_Canvas_1.itemconfig('bient20',state='normal')
                                    sr_Canvas_1.itemconfig('bient24',state='normal')
                                    sr_Canvas_1.itemconfig('bient28',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl1',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl2',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl3',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl4',state='normal')
                                    sr_Canvas_1.itemconfig('bilabl5',state='normal')
                                    sr_Canvas_1.itemconfig('bient29',state='normal')
                                    sr_Canvas_1.itemconfig('bient30',state='normal')
                                    sr_Canvas_1.itemconfig('bient31',state='normal')
                                    sr_Canvas_1.itemconfig('bient32',state='normal')
                                    sr_Canvas_1.itemconfig('bient33',state='normal')
                                    sr_Canvas_1.itemconfig('bbutn1',state='normal')

                                    sr_Canvas_1.itemconfig('ailine16',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine17',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine18',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine19',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine20',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine21',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine22',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailine24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel23',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel24',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel25',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel26',state='hidden')
                                    sr_Canvas_1.itemconfig('ailabel27',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry23',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry24',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry25',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry26',state='hidden')
                                    sr_Canvas_1.itemconfig('aientry27',state='hidden')
                                    sr_Canvas_1.itemconfig('aibutton2',state='hidden')

                                    bu_inv_1.delete(0,END)
                                    bu_inv_1.insert(0,inv_ss_3[5])
                                    bu_inv_1_1.delete(0,END)
                                    bu_inv_1_1.insert(0,inv_ss_3[9])
                                    bu_inv_1_2.delete('1.0',END)
                                    bu_inv_1_2.insert('1.0',inv_ss_3[13])
                                    bu_inv_1_3.delete(0,END)
                                    bu_inv_1_3.insert(0,round(inv_ss_3[21],2))
                                    bu_inv_1_4.delete(0,END)
                                    bu_inv_1_4.insert(0,inv_ss_3[17])
                                    bu_inv_1_5.delete(0,END)
                                    bu_inv_1_5.insert(0,round(inv_ss_3[25],2))
                                    bu_inv_1_6.delete(0,END)
                                    bu_inv_1_6.insert(0,inv_ss_3[29])
                                    bu_inv_2.delete(0,END)
                                    bu_inv_2.insert(0,inv_ss_3[6])
                                    bu_inv_2_1.delete(0,END)
                                    bu_inv_2_1.insert(0,inv_ss_3[10])
                                    bu_inv_2_2.delete('1.0',END)
                                    bu_inv_2_2.insert('1.0',inv_ss_3[14])
                                    bu_inv_2_3.delete(0,END)
                                    bu_inv_2_3.insert(0,round(inv_ss_3[22],2))
                                    bu_inv_2_4.delete(0,END)
                                    bu_inv_2_4.insert(0,inv_ss_3[18])
                                    bu_inv_2_5.delete(0,END)
                                    bu_inv_2_5.insert(0,round(inv_ss_3[26],2))
                                    bu_inv_2_6.delete(0,END)
                                    bu_inv_2_6.insert(0,inv_ss_3[30])
                                    bu_inv_3.delete(0,END)
                                    bu_inv_3.insert(0,inv_ss_3[7])
                                    bu_inv_3_1.delete(0,END)
                                    bu_inv_3_1.insert(0,inv_ss_3[11])
                                    bu_inv_3_2.delete('1.0',END)
                                    bu_inv_3_2.insert('1.0',inv_ss_3[15])
                                    bu_inv_3_3.delete(0,END)
                                    bu_inv_3_3.insert(0,round(inv_ss_3[23],2))
                                    bu_inv_3_4.delete(0,END)
                                    bu_inv_3_4.insert(0,inv_ss_3[19])
                                    bu_inv_3_5.delete(0,END)
                                    bu_inv_3_5.insert(0,round(inv_ss_3[27],2))
                                    bu_inv_3_6.delete(0,END)
                                    bu_inv_3_6.insert(0,inv_ss_3[31])
                                    bu_inv_4.delete(0,END)
                                    bu_inv_4.insert(0,inv_ss_3[8])
                                    bu_inv_4_1.delete(0,END)
                                    bu_inv_4_1.insert(0,inv_ss_3[12])
                                    bu_inv_4_2.delete('1.0',END)
                                    bu_inv_4_2.insert('1.0',inv_ss_3[16])
                                    bu_inv_4_3.delete(0,END)
                                    bu_inv_4_3.insert(0,round(inv_ss_3[24],2))
                                    bu_inv_4_4.delete(0,END)
                                    bu_inv_4_4.insert(0,inv_ss_3[20])
                                    bu_inv_4_5.delete(0,END)
                                    bu_inv_4_5.insert(0,round(inv_ss_3[28],2))
                                    bu_inv_4_6.delete(0,END)
                                    bu_inv_4_6.insert(0,inv_ss_3[32])

                                    try:
                                        n1 = float(en_str_1.get())
                                    except:
                                        n1=0.0
                                    try:
                                        n2 = float(en_str_2.get())
                                    except:
                                        n2 = 0.0
                                    try:
                                        n3 = float(en_str_3.get())
                                    except:
                                        n3 = 0.0
                                    try:
                                        n4 = float(en_str_4.get())
                                    except:
                                        n4 = 0.0
                                    try:
                                        n5 = float(en_str_5.get())
                                    except:
                                        n5 = 0.0 
                                    try:
                                        n6 = float(en_str_6.get())
                                    except:
                                        n6 = 0.0 
                                    try:
                                        n7 = float(en_str_7.get())
                                    except:
                                        n7 = 0.0 
                                    try:
                                        n8 = float(en_str_8.get())
                                    except:
                                        n8 = 0.0 

                                    sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                    bsub_entry_1.delete(0, END)
                                    bsub_entry_1.insert(0,round(sum_i,2))

                                    if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(28/100)
                                    elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(18/100)
                                    elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(15/100)
                                    elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14.5/100)
                                    elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(14/100)
                                    elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12.36/100)
                                    elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(12/100)
                                    elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(6/100)
                                    elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(5/100)
                                    elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(4/100)
                                    elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(3/100)
                                    elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(2/100)
                                    elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0.25/100)
                                    elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                        y1 = float(en_str_1.get())
                                        t1 = y1*(0/100)
                                    else:
                                        if en_str_1.get()==' ':
                                            y1 = float(en_str_1.get())
                                        else:
                                            y1=0.0
                                        t1 = y1*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(28/100)
                                    elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(18/100)
                                    elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(15/100)
                                    elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14.5/100)
                                    elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(14/100)
                                    elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12.36/100)
                                    elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(12/100)
                                    elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(6/100)
                                    elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(5/100)
                                    elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(4/100)
                                    elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(3/100)
                                    elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(2/100)
                                    elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0.25/100)
                                    elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                        y2 = float(en_str_2.get())
                                        t2 = y2*(0/100)
                                    else:
                                        if en_str_2.get()==' ':
                                            y2 = float(en_str_2.get())
                                        else:
                                            y2=0.0
                                        t2 = y2*(0/100)
                                        pass
                                        

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(28/100)
                                    elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(18/100)
                                    elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(15/100)
                                    elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14.5/100)
                                    elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(14/100)
                                    elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12.36/100)
                                    elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(12/100)
                                    elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(6/100)
                                    elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(5/100)
                                    elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(4/100)
                                    elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(3/100)
                                    elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(2/100)
                                    elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0.25/100)
                                    elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                        y3 = float(en_str_3.get())
                                        t3 = y3*(0/100)
                                    else:
                                        
                                        if en_str_3.get()==' ':
                                            y3 = float(en_str_3.get())
                                        else:
                                            y3=0.0
                                        t3 = y3*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    grand_entry_1.delete(0, END)
                                    grand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(28/100)
                                    elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(18/100)
                                    elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(15/100)
                                    elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14.5/100)
                                    elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(14/100)
                                    elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12.36/100)
                                    elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(12/100)
                                    elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(6/100)
                                    elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(5/100)
                                    elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(4/100)
                                    elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(3/100)
                                    elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(2/100)
                                    elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0.25/100)
                                    elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                        y4 = float(en_str_4.get())
                                        t4 = y4*(0/100)
                                    else:
                                        if en_str_4.get()==' ':
                                            y4 = float(en_str_4.get())
                                        else:
                                            y4=0.0
                                        t4 = y4*(0/100)

                                    
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        pass
                                    try:
                                        tm2 = t2
                                    except:
                                        pass
                                    try:
                                        tm3 = t3
                                    except:
                                        pass
                                    try:
                                        tm4  = t4
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(sub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(tax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))

                                    try:
                                        x1 = float(grd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(amount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    
                                    if bu_inv_1_6.get() == '28.0% GST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(28/100)
                                    elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(18/100)
                                    elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(15/100)
                                    elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14.5/100)
                                    elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(14/100)
                                    elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12.36/100)
                                    elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(12/100)
                                    elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(6/100)
                                    elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(5/100)
                                    elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(4/100)
                                    elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(3/100)
                                    elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(2/100)
                                    elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0.25/100)
                                    elif bu_inv_1_6.get() == '0% GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == '0% IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                    else:
                                        y5 = float(en_str_5.get())
                                        t5 = y5*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        tm6 = 0.0
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_2_6.get() == '28.0% GST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(28/100)
                                    elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(18/100)
                                    elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(15/100)
                                    elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14.5/100)
                                    elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(14/100)
                                    elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12.36/100)
                                    elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(12/100)
                                    elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(6/100)
                                    elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(5/100)
                                    elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(4/100)
                                    elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(3/100)
                                    elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(2/100)
                                    elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0.25/100)
                                    elif bu_inv_2_6.get() == '0% GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == '0% IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                    else:
                                        y6 = float(en_str_6.get())
                                        t6 = y6*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        tm7 = 0.0
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_3_6.get() == '28.0% GST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(28/100)
                                    elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(18/100)
                                    elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(15/100)
                                    elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14.5/100)
                                    elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(14/100)
                                    elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12.36/100)
                                    elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(12/100)
                                    elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(6/100)
                                    elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(5/100)
                                    elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(4/100)
                                    elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(3/100)
                                    elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(2/100)
                                    elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0.25/100)
                                    elif bu_inv_3_6.get() == '0% GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == '0% IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                    else:
                                        y7 = float(en_str_7.get())
                                        t7 = y7*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        tm8 = 0.0
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))

                                    if bu_inv_4_6.get() == '28.0% GST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(28/100)
                                    elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(18/100)
                                    elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(15/100)
                                    elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14.5/100)
                                    elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(14/100)
                                    elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12.36/100)
                                    elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(12/100)
                                    elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(6/100)
                                    elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(5/100)
                                    elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(4/100)
                                    elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(3/100)
                                    elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(2/100)
                                    elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0.25/100)
                                    elif bu_inv_4_6.get() == '0% GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == '0% IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                    else:
                                        y8 = float(en_str_8.get())
                                        t8 = y8*(0/100)
                                        pass

                                    try:
                                        tm1  = t1
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm2 = t2
                                    except:
                                        tm2 = 0.0
                                    try:
                                        tm3 = t3
                                    except:
                                        tm3 = 0.0
                                    try:
                                        tm4  = t4
                                    except:
                                        tm4 = 0.0
                                    try:
                                        tm5  = t5
                                    except:
                                        pass
                                    try:
                                        tm6  = t6
                                    except:
                                        pass
                                    try:
                                        tm7  = t7
                                    except:
                                        pass
                                    try:
                                        tm8  = t8
                                    except:
                                        pass
                                    
                                    
                                    sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                    btax_entry_1.delete(0, END)
                                    btax_entry_1.insert(0,round(sum_ii,2))

                                    try:
                                        m1 = float(bsub_str.get())
                                    except:
                                        m1 =0.0
                                    try:
                                        m2 = float(btax_str.get())
                                    except:
                                        m2 =0.0

                                    sum_iii = m1+m2
                                    bgrand_entry_1.delete(0, END)
                                    bgrand_entry_1.insert(0,round(sum_iii,2))


                                    try:
                                        x1 = float(bgrd_str.get())
                                    except:
                                        x1 = 0.0
                                    try:
                                        x2 = float(bamount_entry_1.get())
                                    except:
                                        x2 = 0.0
                                    sum_iv = x1-x2
                                    bbal_entry_1.delete(0, END)
                                    bbal_entry_1.insert(0,round(sum_iv,2))
                                    
                                    
                                else:
                                    pass
                                
                                

                            sql_i="select * from auth_user where username=%s"
                            val_i=(nm_ent.get(),)
                            fbcursor.execute(sql_i,val_i,)
                            p_dtl=fbcursor.fetchone()

                            sql = "select * from app1_company where id_id=%s"
                            val = (p_dtl[0],)
                            fbcursor.execute(sql, val,)
                            cmp_dtl_i=fbcursor.fetchone()
                            

                            i_sql = "SELECT name FROM app1_inventory where cid_id=%s"
                            i_val = (cmp_dtl_i[0],)
                            fbcursor.execute(i_sql,i_val)
                            i_data = fbcursor.fetchall()
                            
                            ii_sql = "SELECT name FROM app1_noninventory where cid_id=%s"
                            ii_val = (cmp_dtl_i[0],)
                            fbcursor.execute(ii_sql,ii_val)
                            ii_data = fbcursor.fetchall()

                            iii_sql = "SELECT name FROM app1_bundle where cid_id=%s"
                            iii_val = (cmp_dtl_i[0],)
                            fbcursor.execute(iii_sql,iii_val)
                            iii_data = fbcursor.fetchall()

                            inv_data = []   
                            
                            for i in i_data:
                                inv_data.append(i[0])
                            for i in ii_data:
                                inv_data.append(i[0])
                            for i in iii_data:
                                inv_data.append(i[0])

                            label_2 = Label(sr_Canvas_1,width=2,height=1,text="1", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(90, 1020, anchor="nw", window=label_2,tags=('ailabel19'))

                            ai_comb_p_1 = ttk.Combobox(sr_Canvas_1, font=('arial 10'),values=inv_data)
                            window_ai_comb_p_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=180, height=30,window=ai_comb_p_1,tags=('aicombo4'))
                            ai_comb_p_1.bind("<<ComboboxSelected>>",i_details_sl_1)

                            ai_entry_p_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_ai_entry_p_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_1,tags=('aientry3'))

                            ai_entry_p_1_2=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_ai_entry_p_1_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_1_2,tags=('aientry4'))

                            

                            ai_entry_p_1_4=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_p_1_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_1_4,tags=('aientry6'))

                            def multiply_num_i1_sl():
                                num1= float(ai_entry_p_1_3.get())
                                num2= float(ai_entry_p_1_4.get())
                                mul_i= round(num1 * num2,2)
                                ai_entry_p_1_5.delete(0, END)
                                ai_entry_p_1_5.insert(0,mul_i)

                                
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))

                                
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                            

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                
                            
                            def cmd_slt_gst(event):
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                            

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                
                            ai_entry_p_1_3=Spinbox(sr_Canvas_1,width=13,from_=0 , command=multiply_num_i1_sl,to=1000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_p_1_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_1_3,tags=('aientry5'))
                            
                                
                            en_str_1 = StringVar()
                            ai_entry_p_1_5=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_1)
                            window_ai_entry_p_1_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_1_5,tags=('aientry7'))
                            

                            ai_comb_p_1_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            ai_comb_p_1_2['values'] = ("Choose","28.0% GST (28%)","18.0% GST (18%)","12.0% GST (12%)","06.0% GST (06%)","05.0% GST (05%)","03.0% GST (03%)","0.25% GST (0.25%)","0.0% GST (0%)","Exempt GST (0%)","Out of Scope (0%)",)
                            ai_comb_p_1_2.current(0)
                            ai_comb_p_1_2.bind('<<ComboboxSelected>>',cmd_slt_gst)
                            window_ai_comb_p_1_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=150, height=30,window=ai_comb_p_1_2,tags=('aicombo5'))


                            label_2 = Label(sr_Canvas_1,width=2,height=1,text="2", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel20'))

                            ai_comb_p_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'),values=inv_data)
                            window_ai_comb_p_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=180, height=30,window=ai_comb_p_2,tags=('aicombo6'))
                            ai_comb_p_2.bind("<<ComboboxSelected>>",i_details_sl_2)

                            ai_entry_p_2=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_ai_entry_p_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_2,tags=('aientry8'))

                            ai_entry_p_2_1=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_ai_entry_p_2_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_p_2_1,tags=('aientry11'))

                            

                            ai_entry_2_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_2_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_2_3,tags=('aientry17'))

                            def multiply_num_sl_i2():
                                num1= float(ai_entry_2_2.get())
                                num2= float(ai_entry_2_3.get())
                                mul_i= round(num1 * num2,2)
                                ai_entry_2_4.delete(0, END)
                                ai_entry_2_4.insert(0,mul_i)

                                
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                                

                            
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            def cmd_slt_gst_1(event):
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                            

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass
                                    

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            
                            ai_entry_2_2=Spinbox(sr_Canvas_1,width=13,from_=0 ,command=multiply_num_sl_i2,to=1000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_2_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_2_2,tags=('aientry14'))
                            
            
                            en_str_2 = StringVar()
                            ai_entry_2_4=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_2)
                            window_ai_entry_2_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_2_4,tags=('aientry20'))
                            

                            ai_comb_P_2_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            ai_comb_P_2_2['values'] = ("Choose","28.0% GST (28%)","18.0% GST (18%)","12.0% GST (12%)","06.0% GST (06%)","05.0% GST (05%)","03.0% GST (03%)","0.25% GST (0.25%)","0.0% GST (0%)","Exempt GST (0%)","Out of Scope (0%)",)
                            ai_comb_P_2_2.current(0)
                            ai_comb_P_2_2.bind('<<ComboboxSelected>>',cmd_slt_gst_1)
                            window_ai_comb_P_2_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=150, height=30,window=ai_comb_P_2_2,tags=('aicombo9'))


                            label_2 = Label(sr_Canvas_1,width=2,height=1,text="3", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel21'))

                            ai_comb_p_3 = ttk.Combobox(sr_Canvas_1, font=('arial 10'),values=inv_data)
                            window_ai_comb_p_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=180, height=30,window=ai_comb_p_3,tags=('aicombo7'))
                            ai_comb_p_3.bind("<<ComboboxSelected>>",i_details_sl_3)

                            ai_entry_3=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_ai_entry_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_3,tags=('aientry9'))

                            ai_entry_3_1=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_ai_entry_3_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_3_1,tags=('aientry12'))

                            

                            ai_entry_3_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_3_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_3_3,tags=('aientry18'))

                            def multiply_num_sl_i3():
                                num1= float(ai_entry_3_2.get())
                                num2= float(ai_entry_3_3.get())
                                mul_i= round(num1 * num2,2)
                                ai_entry_3_4.delete(0, END)
                                ai_entry_3_4.insert(0,mul_i)

                                
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                                
                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            def cmd_slt_gst_2(event):
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                            

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            
                            en_str_3 = StringVar()
                            ai_entry_3_4=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_3)
                            
                            window_ai_entry_3_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_3_4,tags=('aientry21'))

                            ai_entry_3_2=Spinbox(sr_Canvas_1,width=13,from_=0 , command=multiply_num_sl_i3,to=1000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_3_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_3_2,tags=('aientry15'))
                            
                            

                            ai_comb_P_3_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            ai_comb_P_3_2['values'] = ("Choose","28.0% GST (28%)","18.0% GST (18%)","12.0% GST (12%)","06.0% GST (06%)","05.0% GST (05%)","03.0% GST (03%)","0.25% GST (0.25%)","0.0% GST (0%)","Exempt GST (0%)","Out of Scope (0%)",)
                            ai_comb_P_3_2.current(0)
                            ai_comb_P_3_2.bind('<<ComboboxSelected>>',cmd_slt_gst_2)
                            window_ai_comb_P_3_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=150, height=30,window=ai_comb_P_3_2,tags=('aicombo10'))

                            label_2 = Label(sr_Canvas_1,width=2,height=1,text="4", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel22'))

                            ai_comb_p_4 = ttk.Combobox(sr_Canvas_1, font=('arial 10'),values=inv_data)
                            window_ai_comb_p_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=180, height=30,window=ai_comb_p_4,tags=('aicombo8'))
                            ai_comb_p_4.bind("<<ComboboxSelected>>",i_details_sl_4)

                            ai_entry_4=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_ai_entry_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_4,tags=('aientry10'))

                            ai_entry_4_1=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_ai_entry_4_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_4_1,tags=('aientry13'))

                            

                            ai_entry_4_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_4_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_4_3,tags=('aientry19'))

                            def multiply_num_sl_i4():
                                num1= float(ai_entry_4_2.get())
                                num2= float(ai_entry_4_3.get())
                                mul_i= round(num1 * num2,2)
                                ai_entry_4_4.delete(0, END)
                                ai_entry_4_4.insert(0,mul_i)

                                
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                                
                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            def cmd_slt_gst_3(event):
                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                
                                sum_i = n1+n2+n3+n4
                                sub_entry_1.delete(0, END)
                                sub_entry_1.insert(0,round(sum_i,2))
                            

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                tax_entry_1.delete(0, END)
                                tax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bal_entry_1.delete(0, END)
                                bal_entry_1.insert(0,round(sum_iv,2))

                            
                            ai_entry_4_2=Spinbox(sr_Canvas_1,width=13,command=multiply_num_sl_i4,from_=0 ,to=1000,justify=LEFT,background='#2f516f',foreground='white')
                            window_ai_entry_4_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_4_2,tags=('aientry16'))
                            
            
                            en_str_4 = StringVar()
                            ai_entry_4_4=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_4)
                            window_ai_entry_4_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=ai_entry_4_4,tags=('aientry22'))
                            

                            ai_comb_P_4_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            ai_comb_P_4_2['values'] = ("Choose","28.0% GST (28%)","18.0% GST (18%)","12.0% GST (12%)","06.0% GST (06%)","05.0% GST (05%)","03.0% GST (03%)","0.25% GST (0.25%)","0.0% GST (0%)","Exempt GST (0%)","Out of Scope (0%)",)
                            ai_comb_P_4_2.current(0)
                            ai_comb_P_4_2.bind('<<ComboboxSelected>>',cmd_slt_gst_3)
                            window_ai_comb_P_4_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=150, height=30,window=ai_comb_P_4_2,tags=('aicombo11'))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine16'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine17'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine18'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine19'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine20'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine21'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine22'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine23'))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine24'))
                            

                            label_5 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('ailabel23'))

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Tax Amount", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('ailabel24'))

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Grand Total", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('ailabel25'))

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Amount Received", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('ailabel26'))

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Balance Due", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('ailabel27'))

                            
                            sub_str=StringVar()
                            sub_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=sub_str)
                            window_sub_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=sub_entry_1,tags=('aientry23'))
                            
                            tax_str=StringVar()
                            tax_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=tax_str)
                            window_tax_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=tax_entry_1,tags=('aientry24'))

                            grd_str=StringVar()
                            grand_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=grd_str)
                            window_grand_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=grand_entry_1,tags=('aientry25'))

                            
                            amount_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_amount_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=amount_entry_1,tags=('aientry26'))

                            bal_str=StringVar()
                            bal_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT, background='#2f516f',foreground="white",textvariable=bal_str)
                            window_bal_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bal_entry_1,tags=('aientry27'))

                            ai_save_btn1=Button(sr_Canvas_1,text='Save', width=15,height=2,foreground="white",background="#1b3857",font='arial 12',command=sales_add_new_inv_sl)
                            window_ai_save_btn1 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=ai_save_btn1,tags=('aibutton2'))


                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine25'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine26'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine27'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine28'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine29'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine30'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine31'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine32'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine33'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine34'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine35'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine36'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine37'),state=HIDDEN)

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine38'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine39'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine40'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine41'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine42'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine43'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine44'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine45'),state=HIDDEN)
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1, tags=('ailine46'),state=HIDDEN)

                            
                            bu_inv_1 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_1 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_1,tags=('bient1'),state=HIDDEN)

                            bu_inv_1_1 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_1_1 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_1_1,tags=('bient5'),state=HIDDEN)

                            bu_inv_1_2=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_bu_inv_1_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_1_2,tags=('bient9'),state=HIDDEN)

                            bu_inv_1_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_1_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_1_3,tags=('bient13'),state=HIDDEN)

                            def multiply_num_sl_i5():
                                

                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                try:
                                    n5 = float(en_str_5.get())
                                except:
                                    n5 = 0.0 
                                try:
                                    n6 = float(en_str_6.get())
                                except:
                                    n6 = 0.0 
                                try:
                                    n7 = float(en_str_7.get())
                                except:
                                    n7 = 0.0 
                                try:
                                    n8 = float(en_str_8.get())
                                except:
                                    n8 = 0.0 

                                sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                bsub_entry_1.delete(0, END)
                                bsub_entry_1.insert(0,round(sum_i,2))

                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass
                                    

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    if en_str_2.get()==' ':
                                        y2 = float(en_str_2.get())
                                    else:
                                        y2=0.0
                                    t2 = y2*(0/100)
                                    pass
                                    

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    
                                    if en_str_3.get()==' ':
                                        y3 = float(en_str_3.get())
                                    else:
                                        y3=0.0
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    if en_str_4.get()==' ':
                                        y4 = float(en_str_4.get())
                                    else:
                                        y4=0.0
                                    t4 = y4*(0/100)

                                   
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                
                                if bu_inv_1_6.get() == '28.0% GST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(15/100)
                                elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14.5/100)
                                elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12.36/100)
                                elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(4/100)
                                elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(2/100)
                                elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0% GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == '0% IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                else:
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    tm6 = 0.0
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_2_6.get() == '28.0% GST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(15/100)
                                elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14.5/100)
                                elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12.36/100)
                                elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(4/100)
                                elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(2/100)
                                elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0% GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == '0% IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                else:
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_3_6.get() == '28.0% GST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(15/100)
                                elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14.5/100)
                                elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12.36/100)
                                elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(4/100)
                                elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(2/100)
                                elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0% GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == '0% IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                else:
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_4_6.get() == '28.0% GST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(15/100)
                                elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14.5/100)
                                elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12.36/100)
                                elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(4/100)
                                elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(2/100)
                                elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0% GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == '0% IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                else:
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))


                            bu_inv_1_4=Spinbox(sr_Canvas_1,width=13,from_=0 ,to=1000,justify=LEFT,command=multiply_num_sl_i5,background='#2f516f',foreground='white')
                            window_bu_inv_1_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_1_4,tags=('bient17'),state=HIDDEN)
                            

                            en_str_5 = StringVar()
                            bu_inv_1_5=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_5)
                            window_bu_inv_1_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_1_5,tags=('bient21'),state=HIDDEN)

                            bu_inv_1_6=Entry(sr_Canvas_1,width=25,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_1_6 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_1_6,tags=('bient25'),state=HIDDEN)

                            bu_inv_2 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_2 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_2,tags=('bient2'),state=HIDDEN)

                            bu_inv_2_1 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_2_1 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_2_1,tags=('bient6'),state=HIDDEN)

                            bu_inv_2_2=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_bu_inv_2_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_2_2,tags=('bient10'),state=HIDDEN)

                            bu_inv_2_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_2_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_2_3,tags=('bient14'),state=HIDDEN)

                            def multiply_num_sl_i6():

                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                try:
                                    n5 = float(en_str_5.get())
                                except:
                                    n5 = 0.0 
                                try:
                                    n6 = float(en_str_6.get())
                                except:
                                    n6 = 0.0 
                                try:
                                    n7 = float(en_str_7.get())
                                except:
                                    n7 = 0.0 
                                try:
                                    n8 = float(en_str_8.get())
                                except:
                                    n8 = 0.0 

                                sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                bsub_entry_1.delete(0, END)
                                bsub_entry_1.insert(0,round(sum_i,2))

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                
                                if bu_inv_1_6.get() == '28.0% GST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(15/100)
                                elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14.5/100)
                                elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12.36/100)
                                elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(4/100)
                                elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(2/100)
                                elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0% GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == '0% IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                else:
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    tm6 = 0.0
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_2_6.get() == '28.0% GST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(15/100)
                                elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14.5/100)
                                elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12.36/100)
                                elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(4/100)
                                elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(2/100)
                                elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0% GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == '0% IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                else:
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_3_6.get() == '28.0% GST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(15/100)
                                elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14.5/100)
                                elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12.36/100)
                                elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(4/100)
                                elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(2/100)
                                elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0% GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == '0% IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                else:
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_4_6.get() == '28.0% GST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(15/100)
                                elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14.5/100)
                                elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12.36/100)
                                elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(4/100)
                                elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(2/100)
                                elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0% GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == '0% IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                else:
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                            bu_inv_2_4=Spinbox(sr_Canvas_1,width=13,from_=0 ,to=1000,justify=LEFT,command=multiply_num_sl_i6,background='#2f516f',foreground='white')
                            window_bu_inv_2_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_2_4,tags=('bient18'),state=HIDDEN)
                            

                            en_str_6 = StringVar()
                            bu_inv_2_5=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_6)
                            window_bu_inv_2_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_2_5,tags=('bient22'),state=HIDDEN)

                            bu_inv_2_6=Entry(sr_Canvas_1,width=25,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_2_6 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_2_6,tags=('bient26'),state=HIDDEN)

                            bu_inv_3 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_3 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_3,tags=('bient3'),state=HIDDEN)

                            bu_inv_3_1 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_3_1 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_3_1,tags=('bient7'),state=HIDDEN)

                            bu_inv_3_2=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_bu_inv_3_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_3_2,tags=('bient11'),state=HIDDEN)

                            bu_inv_3_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_3_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_3_3,tags=('bient15'),state=HIDDEN)

                            def multiply_num_sl_i7():

                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                try:
                                    n5 = float(en_str_5.get())
                                except:
                                    n5 = 0.0 
                                try:
                                    n6 = float(en_str_6.get())
                                except:
                                    n6 = 0.0 
                                try:
                                    n7 = float(en_str_7.get())
                                except:
                                    n7 = 0.0 
                                try:
                                    n8 = float(en_str_8.get())
                                except:
                                    n8 = 0.0 

                                sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                bsub_entry_1.delete(0, END)
                                bsub_entry_1.insert(0,round(sum_i,2))

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                
                                if bu_inv_1_6.get() == '28.0% GST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(15/100)
                                elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14.5/100)
                                elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12.36/100)
                                elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(4/100)
                                elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(2/100)
                                elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0% GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == '0% IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                else:
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    tm6 = 0.0
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_2_6.get() == '28.0% GST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(15/100)
                                elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14.5/100)
                                elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12.36/100)
                                elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(4/100)
                                elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(2/100)
                                elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0% GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == '0% IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                else:
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_3_6.get() == '28.0% GST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(15/100)
                                elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14.5/100)
                                elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12.36/100)
                                elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(4/100)
                                elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(2/100)
                                elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0% GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == '0% IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                else:
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_4_6.get() == '28.0% GST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(15/100)
                                elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14.5/100)
                                elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12.36/100)
                                elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(4/100)
                                elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(2/100)
                                elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0% GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == '0% IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                else:
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                            bu_inv_3_4=Spinbox(sr_Canvas_1,width=13,from_=0 ,to=1000,command=multiply_num_sl_i7,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_3_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_3_4,tags=('bient19'),state=HIDDEN)
                            

                            en_str_7 = StringVar()
                            bu_inv_3_5=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_7)
                            window_bu_inv_3_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_3_5,tags=('bient23'),state=HIDDEN)

                            bu_inv_3_6=Entry(sr_Canvas_1,width=25,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_3_6 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_3_6,tags=('bient27'),state=HIDDEN)

                            bu_inv_4 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_4 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_4,tags=('bient4'),state=HIDDEN)

                            bu_inv_4_1 = Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_4_1 = sr_Canvas_1.create_window(0, 0, anchor="nw",height=30,window=bu_inv_4_1,tags=('bient8'),state=HIDDEN)

                            bu_inv_4_2=scrolledtext.ScrolledText(sr_Canvas_1,width=21,background='#2f516f',foreground="white")
                            window_bu_inv_4_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_4_2,tags=('bient12'),state=HIDDEN)

                            bu_inv_4_3=Spinbox(sr_Canvas_1,width=16,from_=0 ,to=1000000,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_4_3 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_4_3,tags=('bient16'),state=HIDDEN)

                            def multiply_num_sl_i8():

                                try:
                                    n1 = float(en_str_1.get())
                                except:
                                    n1=0.0
                                try:
                                    n2 = float(en_str_2.get())
                                except:
                                    n2 = 0.0
                                try:
                                    n3 = float(en_str_3.get())
                                except:
                                    n3 = 0.0
                                try:
                                    n4 = float(en_str_4.get())
                                except:
                                    n4 = 0.0
                                try:
                                    n5 = float(en_str_5.get())
                                except:
                                    n5 = 0.0 
                                try:
                                    n6 = float(en_str_6.get())
                                except:
                                    n6 = 0.0 
                                try:
                                    n7 = float(en_str_7.get())
                                except:
                                    n7 = 0.0 
                                try:
                                    n8 = float(en_str_8.get())
                                except:
                                    n8 = 0.0 

                                sum_i = n1+n2+n3+n4+n5+n6+n7+n8
                                bsub_entry_1.delete(0, END)
                                bsub_entry_1.insert(0,round(sum_i,2))

                                
                                if ai_comb_p_1_2.get() == '28.0% GST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '28.0% IGST (28%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(28/100)
                                elif ai_comb_p_1_2.get() == '18.0% GST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '18.0% IGST (18%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(18/100)
                                elif ai_comb_p_1_2.get() == '15.0% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(15/100)
                                elif ai_comb_p_1_2.get() == '14.5% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14.5/100)
                                elif ai_comb_p_1_2.get() == '14.00% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '14.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(14/100)
                                elif ai_comb_p_1_2.get() == '12.36% ST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12.36/100)
                                elif ai_comb_p_1_2.get() == '12.0% GST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '12.0% IGST (12%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(12/100)
                                elif ai_comb_p_1_2.get() == '6.0% GST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '6.0% IGST (6%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(6/100)
                                elif ai_comb_p_1_2.get() == '5.0% GST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% IGST (5%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '5.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(5/100)
                                elif ai_comb_p_1_2.get() == '4.0% VAT (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(4/100)
                                elif ai_comb_p_1_2.get() == '3.0% GST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '3.0% IGST (3%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(3/100)
                                elif ai_comb_p_1_2.get() == '2.0% CST (100%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(2/100)
                                elif ai_comb_p_1_2.get() == '0.25% GST (O.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0.25% IGST (0.25%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0.25/100)
                                elif ai_comb_p_1_2.get() == '0% GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == '0% IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt GST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Exempt IGST (0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                elif ai_comb_p_1_2.get() == 'Out of Scope(0%)':
                                    y1 = float(en_str_1.get())
                                    t1 = y1*(0/100)
                                else:
                                    if en_str_1.get()==' ':
                                        y1 = float(en_str_1.get())
                                    else:
                                        y1=0.0
                                    t1 = y1*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_2_2.get() == '28.0% GST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '28.0% IGST (28%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(28/100)
                                elif ai_comb_P_2_2.get() == '18.0% GST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '18.0% IGST (18%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(18/100)
                                elif ai_comb_P_2_2.get() == '15.0% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(15/100)
                                elif ai_comb_P_2_2.get() == '14.5% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14.5/100)
                                elif ai_comb_P_2_2.get() == '14.00% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '14.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(14/100)
                                elif ai_comb_P_2_2.get() == '12.36% ST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12.36/100)
                                elif ai_comb_P_2_2.get() == '12.0% GST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '12.0% IGST (12%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(12/100)
                                elif ai_comb_P_2_2.get() == '6.0% GST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '6.0% IGST (6%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(6/100)
                                elif ai_comb_P_2_2.get() == '5.0% GST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% IGST (5%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '5.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(5/100)
                                elif ai_comb_P_2_2.get() == '4.0% VAT (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(4/100)
                                elif ai_comb_P_2_2.get() == '3.0% GST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '3.0% IGST (3%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(3/100)
                                elif ai_comb_P_2_2.get() == '2.0% CST (100%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(2/100)
                                elif ai_comb_P_2_2.get() == '0.25% GST (O.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0.25% IGST (0.25%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0.25/100)
                                elif ai_comb_P_2_2.get() == '0% GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == '0% IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt GST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Exempt IGST (0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                elif ai_comb_P_2_2.get() == 'Out of Scope(0%)':
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                else:
                                    y2 = float(en_str_2.get())
                                    t2 = y2*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_3_2.get() == '28.0% GST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '28.0% IGST (28%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(28/100)
                                elif ai_comb_P_3_2.get() == '18.0% GST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '18.0% IGST (18%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(18/100)
                                elif ai_comb_P_3_2.get() == '15.0% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(15/100)
                                elif ai_comb_P_3_2.get() == '14.5% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14.5/100)
                                elif ai_comb_P_3_2.get() == '14.00% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '14.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(14/100)
                                elif ai_comb_P_3_2.get() == '12.36% ST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12.36/100)
                                elif ai_comb_P_3_2.get() == '12.0% GST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '12.0% IGST (12%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(12/100)
                                elif ai_comb_P_3_2.get() == '6.0% GST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '6.0% IGST (6%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(6/100)
                                elif ai_comb_P_3_2.get() == '5.0% GST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% IGST (5%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '5.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(5/100)
                                elif ai_comb_P_3_2.get() == '4.0% VAT (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(4/100)
                                elif ai_comb_P_3_2.get() == '3.0% GST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '3.0% IGST (3%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(3/100)
                                elif ai_comb_P_3_2.get() == '2.0% CST (100%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(2/100)
                                elif ai_comb_P_3_2.get() == '0.25% GST (O.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0.25% IGST (0.25%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0.25/100)
                                elif ai_comb_P_3_2.get() == '0% GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == '0% IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt GST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Exempt IGST (0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                elif ai_comb_P_3_2.get() == 'Out of Scope(0%)':
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                else:
                                    y3 = float(en_str_3.get())
                                    t3 = y3*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                grand_entry_1.delete(0, END)
                                grand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if ai_comb_P_4_2.get() == '28.0% GST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '28.0% IGST (28%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(28/100)
                                elif ai_comb_P_4_2.get() == '18.0% GST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '18.0% IGST (18%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(18/100)
                                elif ai_comb_P_4_2.get() == '15.0% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(15/100)
                                elif ai_comb_P_4_2.get() == '14.5% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14.5/100)
                                elif ai_comb_P_4_2.get() == '14.00% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '14.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(14/100)
                                elif ai_comb_P_4_2.get() == '12.36% ST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12.36/100)
                                elif ai_comb_P_4_2.get() == '12.0% GST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '12.0% IGST (12%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(12/100)
                                elif ai_comb_P_4_2.get() == '6.0% GST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '6.0% IGST (6%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(6/100)
                                elif ai_comb_P_4_2.get() == '5.0% GST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% IGST (5%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '5.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(5/100)
                                elif ai_comb_P_4_2.get() == '4.0% VAT (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(4/100)
                                elif ai_comb_P_4_2.get() == '3.0% GST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '3.0% IGST (3%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(3/100)
                                elif ai_comb_P_4_2.get() == '2.0% CST (100%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(2/100)
                                elif ai_comb_P_4_2.get() == '0.25% GST (O.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0.25% IGST (0.25%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0.25/100)
                                elif ai_comb_P_4_2.get() == '0% GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == '0% IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt GST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Exempt IGST (0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                elif ai_comb_P_4_2.get() == 'Out of Scope(0%)':
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                else:
                                    y4 = float(en_str_4.get())
                                    t4 = y4*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    pass
                                try:
                                    tm2 = t2
                                except:
                                    pass
                                try:
                                    tm3 = t3
                                except:
                                    pass
                                try:
                                    tm4  = t4
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(sub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(tax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))

                                try:
                                    x1 = float(grd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(amount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                
                                if bu_inv_1_6.get() == '28.0% GST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '28.0% IGST (28%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(28/100)
                                elif bu_inv_1_6.get() == '18.0% GST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '18.0% IGST (18%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(18/100)
                                elif bu_inv_1_6.get() == '15.0% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(15/100)
                                elif bu_inv_1_6.get() == '14.5% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14.5/100)
                                elif bu_inv_1_6.get() == '14.00% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '14.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(14/100)
                                elif bu_inv_1_6.get() == '12.36% ST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12.36/100)
                                elif bu_inv_1_6.get() == '12.0% GST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '12.0% IGST (12%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(12/100)
                                elif bu_inv_1_6.get() == '6.0% GST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '6.0% IGST (6%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(6/100)
                                elif bu_inv_1_6.get() == '5.0% GST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% IGST (5%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '5.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(5/100)
                                elif bu_inv_1_6.get() == '4.0% VAT (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(4/100)
                                elif bu_inv_1_6.get() == '3.0% GST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '3.0% IGST (3%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(3/100)
                                elif bu_inv_1_6.get() == '2.0% CST (100%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(2/100)
                                elif bu_inv_1_6.get() == '0.25% GST (O.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0.25% IGST (0.25%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0.25/100)
                                elif bu_inv_1_6.get() == '0% GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == '0% IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt GST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Exempt IGST (0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                elif bu_inv_1_6.get() == 'Out of Scope(0%)':
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                else:
                                    y5 = float(en_str_5.get())
                                    t5 = y5*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    tm6 = 0.0
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_2_6.get() == '28.0% GST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '28.0% IGST (28%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(28/100)
                                elif bu_inv_2_6.get() == '18.0% GST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '18.0% IGST (18%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(18/100)
                                elif bu_inv_2_6.get() == '15.0% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(15/100)
                                elif bu_inv_2_6.get() == '14.5% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14.5/100)
                                elif bu_inv_2_6.get() == '14.00% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '14.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(14/100)
                                elif bu_inv_2_6.get() == '12.36% ST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12.36/100)
                                elif bu_inv_2_6.get() == '12.0% GST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '12.0% IGST (12%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(12/100)
                                elif bu_inv_2_6.get() == '6.0% GST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '6.0% IGST (6%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(6/100)
                                elif bu_inv_2_6.get() == '5.0% GST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% IGST (5%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '5.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(5/100)
                                elif bu_inv_2_6.get() == '4.0% VAT (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(4/100)
                                elif bu_inv_2_6.get() == '3.0% GST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '3.0% IGST (3%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(3/100)
                                elif bu_inv_2_6.get() == '2.0% CST (100%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(2/100)
                                elif bu_inv_2_6.get() == '0.25% GST (O.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0.25% IGST (0.25%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0.25/100)
                                elif bu_inv_2_6.get() == '0% GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == '0% IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt GST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Exempt IGST (0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                elif bu_inv_2_6.get() == 'Out of Scope(0%)':
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                else:
                                    y6 = float(en_str_6.get())
                                    t6 = y6*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    tm7 = 0.0
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_3_6.get() == '28.0% GST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '28.0% IGST (28%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(28/100)
                                elif bu_inv_3_6.get() == '18.0% GST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '18.0% IGST (18%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(18/100)
                                elif bu_inv_3_6.get() == '15.0% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(15/100)
                                elif bu_inv_3_6.get() == '14.5% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14.5/100)
                                elif bu_inv_3_6.get() == '14.00% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '14.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(14/100)
                                elif bu_inv_3_6.get() == '12.36% ST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12.36/100)
                                elif bu_inv_3_6.get() == '12.0% GST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '12.0% IGST (12%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(12/100)
                                elif bu_inv_3_6.get() == '6.0% GST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '6.0% IGST (6%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(6/100)
                                elif bu_inv_3_6.get() == '5.0% GST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% IGST (5%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '5.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(5/100)
                                elif bu_inv_3_6.get() == '4.0% VAT (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(4/100)
                                elif bu_inv_3_6.get() == '3.0% GST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '3.0% IGST (3%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(3/100)
                                elif bu_inv_3_6.get() == '2.0% CST (100%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(2/100)
                                elif bu_inv_3_6.get() == '0.25% GST (O.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0.25% IGST (0.25%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0.25/100)
                                elif bu_inv_3_6.get() == '0% GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == '0% IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt GST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Exempt IGST (0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                elif bu_inv_3_6.get() == 'Out of Scope(0%)':
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                else:
                                    y7 = float(en_str_7.get())
                                    t7 = y7*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    tm8 = 0.0
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                                if bu_inv_4_6.get() == '28.0% GST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '28.0% IGST (28%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(28/100)
                                elif bu_inv_4_6.get() == '18.0% GST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '18.0% IGST (18%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(18/100)
                                elif bu_inv_4_6.get() == '15.0% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(15/100)
                                elif bu_inv_4_6.get() == '14.5% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14.5/100)
                                elif bu_inv_4_6.get() == '14.00% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '14.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(14/100)
                                elif bu_inv_4_6.get() == '12.36% ST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12.36/100)
                                elif bu_inv_4_6.get() == '12.0% GST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '12.0% IGST (12%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(12/100)
                                elif bu_inv_4_6.get() == '6.0% GST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '6.0% IGST (6%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(6/100)
                                elif bu_inv_4_6.get() == '5.0% GST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% IGST (5%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '5.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(5/100)
                                elif bu_inv_4_6.get() == '4.0% VAT (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(4/100)
                                elif bu_inv_4_6.get() == '3.0% GST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '3.0% IGST (3%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(3/100)
                                elif bu_inv_4_6.get() == '2.0% CST (100%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(2/100)
                                elif bu_inv_4_6.get() == '0.25% GST (O.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0.25% IGST (0.25%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0.25/100)
                                elif bu_inv_4_6.get() == '0% GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == '0% IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt GST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Exempt IGST (0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                elif bu_inv_4_6.get() == 'Out of Scope(0%)':
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                else:
                                    y8 = float(en_str_8.get())
                                    t8 = y8*(0/100)
                                    pass

                                try:
                                    tm1  = t1
                                except:
                                    tm2 = 0.0
                                try:
                                    tm2 = t2
                                except:
                                    tm2 = 0.0
                                try:
                                    tm3 = t3
                                except:
                                    tm3 = 0.0
                                try:
                                    tm4  = t4
                                except:
                                    tm4 = 0.0
                                try:
                                    tm5  = t5
                                except:
                                    pass
                                try:
                                    tm6  = t6
                                except:
                                    pass
                                try:
                                    tm7  = t7
                                except:
                                    pass
                                try:
                                    tm8  = t8
                                except:
                                    pass
                                
                                
                                sum_ii = tm1+tm2+tm3+tm4+tm5+tm6+tm7+tm8
                                btax_entry_1.delete(0, END)
                                btax_entry_1.insert(0,round(sum_ii,2))

                                try:
                                    m1 = float(bsub_str.get())
                                except:
                                    m1 =0.0
                                try:
                                    m2 = float(btax_str.get())
                                except:
                                    m2 =0.0

                                sum_iii = m1+m2
                                bgrand_entry_1.delete(0, END)
                                bgrand_entry_1.insert(0,round(sum_iii,2))


                                try:
                                    x1 = float(bgrd_str.get())
                                except:
                                    x1 = 0.0
                                try:
                                    x2 = float(bamount_entry_1.get())
                                except:
                                    x2 = 0.0
                                sum_iv = x1-x2
                                bbal_entry_1.delete(0, END)
                                bbal_entry_1.insert(0,round(sum_iv,2))

                            
                            bu_inv_4_4=Spinbox(sr_Canvas_1,width=13,from_=0 , command=multiply_num_sl_i8,to=1000,justify=LEFT,background='#2f516f',foreground='white')
                            window_bu_inv_4_4 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_4_4,tags=('bient20'),state=HIDDEN)
                            

                            en_str_8 = StringVar()
                            bu_inv_4_5=Entry(sr_Canvas_1,width=16,justify=LEFT,background='#2f516f',foreground="white",textvariable=en_str_8)
                            window_bu_inv_4_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_4_5,tags=('bient24'),state=HIDDEN)

                            bu_inv_4_6=Entry(sr_Canvas_1,width=25,justify=LEFT,background='#2f516f',foreground="white")
                            window_bu_inv_4_6 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bu_inv_4_6,tags=('bient28'),state=HIDDEN)

                            label_5 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('bilabl1'),state=HIDDEN)

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Tax Amount", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('bilabl2'),state=HIDDEN)

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Grand Total", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('bilabl3'),state=HIDDEN)

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Amount Received", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('bilabl4'),state=HIDDEN)

                            label_5 = Label(sr_Canvas_1,width=12,height=1,text="Balance Due", font=('arial 10'),background="#1b3857",fg="white") 
                            window_label_5 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_5,tags=('bilabl5'),state=HIDDEN)

                            bsub_str=StringVar()
                            bsub_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=bsub_str)
                            bsub_entry_1.insert(0,0)
                            print(bsub_entry_1.get())
                            window_bsub_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bsub_entry_1,tags=('bient29'),state=HIDDEN)
                            
                            
                            btax_str=StringVar()
                            btax_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=btax_str)
                            btax_entry_1.insert(0,0)
                            window_btax_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=btax_entry_1,tags=('bient30'),state=HIDDEN)

                            bgrd_str=StringVar()
                            bgrand_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white",textvariable=bgrd_str)
                            bgrand_entry_1.insert(0,0)
                            window_bgrand_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bgrand_entry_1,tags=('bient31'),state=HIDDEN)

                            
                            bamount_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT,background='#2f516f',foreground="white")
                            bamount_entry_1.insert(0,0)
                            window_bamount_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bamount_entry_1,tags=('bient32'),state=HIDDEN)

                            bbal_str=StringVar()
                            bbal_entry_1=Entry(sr_Canvas_1,width=30,justify=LEFT, background='#2f516f',foreground="white",textvariable=bbal_str)
                            bbal_entry_1.insert(0,0)
                            window_bbal_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=bbal_entry_1,tags=('bient33'),state=HIDDEN)

                            bai_save_btn1=Button(sr_Canvas_1,text='Save', width=15,height=2,foreground="white",background="#1b3857",font='arial 12',command=sales_add_new_inv_sl)
                            window_bai_save_btn1 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=bai_save_btn1,tags=('bbutn1'),state=HIDDEN)

                            
                            

                            bck_btn1=Button(sr_Canvas_1,text='← Back', bd=0, foreground="white",background="#2f516f",font='arial 10 bold',activebackground="#1b3857",command=inv_back_1_sl)
                            window_bck_btn1 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=bck_btn1,tags=('aibutton3'))

                            label_2 = Label(sr_Canvas_1,width=14,height=1,text="Invoice Date:", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel7'))

                            label_2 = Label(sr_Canvas_1,width=15,height=1,text="Due Date:", font=('arial 12'),background="#1b3857",fg="white") 
                            window_label_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", window=label_2,tags=('ailabel28'))



                            def term_date_sl(event):
                                current_date = aid_entry_1.get()
                                current_date_temp = date.today()
                                if comb_t_2.get() == 'Due on Receipt':
                                    newdate = current_date_temp + timedelta(days=0)
                                    aid_entry_2.delete(0, END)
                                    aid_entry_2.set_date(newdate)
                                elif comb_t_2.get() == 'NET 15':
                                    newdate = current_date_temp + timedelta(days=15)
                                    aid_entry_2.delete(0, END)
                                    aid_entry_2.set_date(newdate)
                                elif comb_t_2.get() == 'NET 30':
                                    newdate = current_date_temp + timedelta(days=30)
                                    aid_entry_2.delete(0, END)
                                    aid_entry_2.set_date(newdate)
                                elif comb_t_2.get() == 'NET 60':
                                    newdate = current_date_temp + timedelta(days=60)
                                    aid_entry_2.delete(0, END)
                                    aid_entry_2.set_date(newdate)
                                elif comb_t_2.get() == 'Add New Term':
                                    pass
                                else:
                                    pass

                            comb_t_2 = ttk.Combobox(sr_Canvas_1, font=('arial 10'))
                            comb_t_2['values'] = ("Due on Receipt","NET 15","NET 30","NET 60","Add New Term",)
                            window_comb_t_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", width=251, height=30,window=comb_t_2,tags=('aicombo2'))
                            comb_t_2.bind("<<ComboboxSelected>>",term_date_sl)

                            aid_entry_1=DateEntry(sr_Canvas_1,width=40,justify=LEFT,foreground='white')
                            window_aid_entry_1 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=aid_entry_1,tags=('aidate1'))

                            aid_entry_2=DateEntry(sr_Canvas_1,width=40,justify=LEFT,foreground='white')
                            window_aid_entry_2 = sr_Canvas_1.create_window(0, 0, anchor="nw", height=30, window=aid_entry_2,tags=('aidate2'))
 
                        elif sr_transCombo.get() == 'Payment':
                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            rp_label = Label(sr_Canvas_1,width=18,height=1,text="RECIEVE PAYMENT",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=rp_label,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                            rp_label1 = Label(sr_Canvas_1,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=rp_label1,tags=("label2"))

                            rp_label2 = Label(sr_Canvas_1,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor='w')
                            sr_Canvas_1.create_window(0,0,window=rp_label2,tags=("label3"))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            def rp_fetch_custDetails(event):
                                cust_name = rp_custCombo.get()
                                cust_fname = cust_name.split(" ")[0]
                                cust_lname = cust_name.split(" ")[1]

                                cust_sql = "SELECT email FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                cust_val = (cust_fname,cust_lname,comp_data[0])
                                fbcursor.execute(cust_sql,cust_val)
                                cust_data = fbcursor.fetchone()

                                inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                inv_val = (cust_name,comp_data[0])
                                fbcursor.execute(inv_sql,inv_val)
                                inv_data = fbcursor.fetchall()

                                if not cust_data:
                                    pass
                                else:
                                    rp_email.delete(0,END)
                                    rp_email.insert(0,cust_data[0])

                                if not inv_data:
                                    pass
                                else:
                                    count = 1
                                    for i in inv_data:
                                        rp_tree.insert(parent='',index='end',iid=i,text='',values=(count,str(i[3]) + " " + i[5],i[6],i[17],i[41],0))
                                        count += 1

                            rp_custCombo = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'))
                            rp_custCombo['values'] = cust_list
                            rp_custCombo.current(0)
                            rp_custCombo.bind("<<ComboboxSelected>>",rp_fetch_custDetails)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_custCombo,tags=("combo1"))

                            def sr_addCustomer():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        rp_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        rp_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def dc_goBack1():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dc_goBack1())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            rp_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer())
                            sr_Canvas_1.create_window(0,0,window=rp_plus,tags=("button1"))

                            rp_label3 = Label(sr_Canvas_1,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=rp_label3,tags=('label4'))

                            rp_email = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_email,tags=("entry1"))

                            rp_label4 = Label(sr_Canvas_1,width=20,height=1,text="Find by invoice number",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label4,tags=("label5"))

                            rp_invnum = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_invnum,tags=("entry2"))

                            rp_label6 = Label(sr_Canvas_1,width=20,height=1,text="Payment method",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label6,tags=("label7"))

                            def rp_show_pmethod(event):
                                if rp_pmethod.get() == "Add new":
                                    rp_newmeth.delete(0,END)
                                    sr_Canvas_1.itemconfig("entry7",state='normal')
                                else:
                                    sr_Canvas_1.itemconfig("entry7",state='hidden')

                            rp_pmethod = ttk.Combobox(sr_Canvas_1,font=('arial 15'),width=19,background='#2f516f')
                            pmethod_list = ['Cash','Cheque','Credit Card','Add new']
                            rp_pmethod['values'] = pmethod_list
                            rp_pmethod.bind("<<ComboboxSelected>>",rp_show_pmethod)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_pmethod,tags=("entry3"))

                            def rp_addnew_pmethod(event):
                                pmethod_list.insert(0,rp_newmeth.get())

                                rp_pmethod["values"] = pmethod_list

                            rp_newmeth = Entry(sr_Canvas_1,font=('arial 15'),width=20,background='#2f516f',foreground='white')
                            rp_newmeth.bind("<FocusOut>",rp_addnew_pmethod)
                            sr_Canvas_1.create_window(0,0,anchor='nw',state=HIDDEN,window=rp_newmeth,tags=("entry7"))

                            rp_label7 = Label(sr_Canvas_1,width=20,height=1,text="Deposit to",font=('arial 12'),background='#1b3857',fg="white",anchor="nw")
                            sr_Canvas_1.create_window(0,0,window=rp_label7,tags=("label8"))

                            rp_depositto = ttk.Combobox(sr_Canvas_1,font=('arial 15'),width=15)
                            dep_list = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                            'Deferred Krishi Kalyan Cess Input Credit','Deferred SGST','Deferred Service Tax Input Credit',
                            'Deferred VAT Input Credit','GST Refund','Inventory Asset','Krishi Kalyan Cess Refund'
                            ,'Prepaid Insurance','Service Tax Refund','TDS Receivable','Uncategorised Asset','Undeposited Fund',]

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            dep_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s"
                            dep_val = (comp_data[0],)
                            fbcursor.execute(dep_sql,dep_val)
                            dep_data = fbcursor.fetchall()

                            for d in dep_data:
                                dep_list.insert(0,d)
                            rp_depositto['values'] = dep_list
                            rp_depositto.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_depositto,tags=("combo2"))

                            def add_depositTo():
                                sr_Frame_1.grid_forget()
                                sr_Frame_3 = Frame(tab3_1,)
                                sr_Frame_3.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets3(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget

                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.9


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/8.2,dheight/2.44)
                                    dcanvas.coords("label3",dwidth/1.655,dheight/2.44)
                                    dcanvas.coords("label4",dwidth/8.2,dheight/1.89)
                                    dcanvas.coords("label5",dwidth/1.655,dheight/1.89)
                                    dcanvas.coords("label6",dwidth/1.605,dheight/1.522)
                                    dcanvas.coords("label7",dwidth/1.655,dheight/1.27)

                                    dcanvas.coords("entry1",dwidth/20,dheight/2.32)
                                    dcanvas.coords("entry2",dwidth/1.88,dheight/2.32)
                                    dcanvas.coords("entry3",dwidth/20,dheight/1.8)
                                    dcanvas.coords("entry4",dwidth/1.88,dheight/1.805)
                                    dcanvas.coords("entry5",dwidth/20,dheight/1.605)
                                    dcanvas.coords("entry6",dwidth/1.88,dheight/1.46)
                                    dcanvas.coords("entry7",dwidth/1.88,dheight/1.23)

                                    dcanvas.coords("check1",dwidth/1.89,dheight/1.57)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.97)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_3 = Canvas(sr_Frame_3,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_3.grid_columnconfigure(0,weight=1)
                                sr_Frame_3.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_3,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_3.yview)
                                sr_Canvas_3.bind("<Configure>", responsive_widgets3)
                                sr_Canvas_3.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_3.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                dep_label1 = Label(sr_Canvas_3,width=18,height=1,text="ACCOUNT CREATE",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_3.create_window(0,0,anchor="c",window=dep_label1,tags=("label1"))
                                sr_Canvas_3.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                dep_label2 = Label(sr_Canvas_3,width=20,height=1,text="Account type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label2,tags=("label2"))

                                def fetch_detailType(event):
                                    if dep_acctype.get() == "Bank":
                                        item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                        item_val = (3,)
                                        fbcursor.execute(item_sql,item_val)
                                        item_data = fbcursor.fetchall()

                                        item_list = []
                                        for i in item_data:
                                            item_list.append(i[1])
                                        dep_dtype.configure(values=item_list)
                                    else:
                                        item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                        item_val = (2,)
                                        fbcursor.execute(item_sql,item_val)
                                        item_data = fbcursor.fetchall()

                                        item_list = []
                                        for i in item_data:
                                            item_list.append(i[1])
                                        dep_dtype.configure(values=item_list)

                                dep_acctype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                dep_acctype['values'] = ['Bank','Current Assets',]
                                dep_acctype.bind("<<ComboboxSelected>>",fetch_detailType)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_acctype,tags=("entry1"))

                                dep_label3 = Label(sr_Canvas_3,width=20,height=1,text="*Name",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label3,tags=("label3"))

                                dep_name = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_name,tags=("entry2"))

                                dep_label4 = Label(sr_Canvas_3,width=20,height=1,text="*Detail Type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label4,tags=("label4"))

                                dep_dtype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtype,tags=("entry3"))

                                dep_label5 = Label(sr_Canvas_3,width=20,height=1,text="Description",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label5,tags=("label5"))

                                dep_desp = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_desp,tags=("entry4"))

                                dep_term = Text(sr_Canvas_3,width=47,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                term_txt = "Use Cash and Cash Equivalents to track cash or assets that can be converted into cash immediately. For example, marketable securities and Treasury bills."
                                dep_term.insert('1.0',term_txt)
                                dep_term.config(state=DISABLED)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_term,tags=("entry5"))

                                def sr_subAccount():
                                    if subaccVar.get() == True:
                                        dep_subacc["state"] = NORMAL
                                    else:
                                        dep_subacc["state"] = DISABLED

                                subaccVar = BooleanVar()
                                dep_subcheck = Checkbutton(sr_Canvas_3,variable=subaccVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sr_subAccount)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subcheck,tags=("check1"))

                                dep_label6 = Label(sr_Canvas_3,width=20,height=1,text="Is sub-account",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label6,tags=("label6"))

                                dep_subacc = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black',state=DISABLED)
                                dep_subacc['values'] = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                                'Deferred Krishi Kalyan Cess Input Credit','Deferred Service Tax Input Credit',
                                'Deferred SGST','Deferred VAT Input Credit','GST Refund','Inventory Asset','Paid Insurance',
                                'Service Tax Refund','TDS Receivable','Uncategorised Asset','Accumulated Depreciation',
                                'Buildings and Improvements','Furniture and Equipment','Land','Leasehold Improvements',
                                'CGST Payable','CST Payable','CST Suspense','GST Payable','GST Suspense','IGST Payable',
                                'Input CGST','Input CGST Tax RCM','Input IGST','Input IGST Tax RCM','Input Krishi Kalyan Cess',
                                'Input Krishi Kalyan Cess RCM','Input Service Tax','Input Service Tax RCM','Input SGST',
                                'Input SGST Tax RCM','Input VAT 14%','Input VAT 4%','Input VAT 5%','Krishi Kalyan Cess Payable',
                                'Krishi Kalyan Cess Suspense','Output CGST','Output CGST Tax RCM','Output CST 2%','Output IGST',
                                'Output IGST Tax RCM','Output Krishi Kalyan Cess','Output Krishi Kalyan Cess RCM','Output Service Tax',
                                'Output Service Tax RCM','Output SGST','Output SGST Tax RCM','Output VAT 14%','Output VAT 4%',
                                'Output VAT 5%','Service Tax Payable','Service Tax Suspense','SGST Payable','SGST Suspense',
                                'Swachh Bharat Cess Payable','Swachh Bharat Cess Suspense','TDS Payable','VAT Payable',
                                'VAT Suspense','Opening Balance','Equity',]
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subacc,tags=("entry6"))

                                dep_label7 = Label(sr_Canvas_3,width=20,height=1,text="Default Tax Code",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label7,tags=("label7"))

                                dep_dtaxcode = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                dep_dtaxcode['values'] = ['18.0% IGST','14.00% ST','0% IGST','Out of Scope','0% GST','14.5% ST',
                                '14.0% VAT','6.0% IGST','28.0% IGST','15.0% ST','28.0% GST','12.0% GST','18.0% GST','3.0% GST',
                                '0.2% IGST','5.0% GST','6.0% GST','0.2% GST','Exempt IGST','3.0% IGS','4.0% VAT','5.0% IGST',
                                '12.36% ST','5.0% VAT','Exempt GST','12.0% IGST','2.0% CST',]
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtaxcode,tags=("entry7"))

                                def payment_createAccType():
                                    acctype = dep_acctype.get()
                                    detype = dep_dtype.get()
                                    name = dep_name.get()
                                    description = dep_desp.get()
                                    gst = dep_subacc.get()
                                    deftaxcode = dep_dtaxcode.get()
                                    balance = 0
                                    today = datetime.today()
                                    asof = today.strftime("%Y-%m-%d")
                                    balfordisp = 0
                                    # ----company id
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]
                                    #----------------

                                    #product id --------------
                                    if acctype == "Bank":
                                        pro_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                        pro_val = (3,)
                                        fbcursor.execute(pro_sql,pro_val)
                                        product_data = fbcursor.fetchone()
                                    else:
                                        product_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                        product_val = (2,)
                                        fbcursor.execute(product_sql,product_val)
                                        product_data = fbcursor.fetchone()
                                    
                                    productid = product_data[0]
                                    #-----------------

                                    acctype_sql = "SELECT accountname FROM app1_accountype WHERE accountname=%s"
                                    acctype_val = (dep_dtype.get(),)
                                    fbcursor.execute(acctype_sql,acctype_val)
                                    acctype_data = fbcursor.fetchone()

                                    acct_sql = "SELECT name,cid_id FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                    acct_val = (dep_name.get(),comp_data[0])
                                    fbcursor.execute(acct_sql,acct_val)
                                    acct_data = fbcursor.fetchone()

                                    acct1_sql = "SELECT name,cid_id FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                    acct1_val = (dep_name.get(),comp_data[0])
                                    fbcursor.execute(acct1_sql,acct1_val)
                                    acct1_data = fbcursor.fetchone()
                                    

                                    if not acctype_data and not acct_data or not acct1_data:
                                        ins_acctype_sql = "INSERT INTO app1_accountype(cid_id,accountname,accountbal) VALUES(%s,%s,%s)"
                                        ins_acctype_val= (comp_data[0],detype,balance)
                                        fbcursor.execute(ins_acctype_sql,ins_acctype_val)
                                        finsysdb.commit()
                                        
                                        if acctype == "Bank":
                                            #pro id ------------
                                            pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                            pro_val = (3,)
                                            fbcursor.execute(pro_sql,pro_val)
                                            pro_data = fbcursor.fetchone()
                                            #--------------------
                                            ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                            ins_accts_val = (3,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                            fbcursor.execute(ins_accts_sql,ins_accts_val)
                                            finsysdb.commit()
                                        else:
                                            #pro id ------------
                                            pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                            pro_val = (2,)
                                            fbcursor.execute(pro_sql,pro_val)
                                            pro_data = fbcursor.fetchone()
                                            #--------------------

                                            ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                            ins_accts_val = (2,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                            fbcursor.execute(ins_accts_sql,ins_accts_val)
                                            finsysdb.commit()

                                        sel_accts1_sql = "SELECT * FROM app1_accounts1 WHERE cid_id=%s and name=%s"
                                        sel_accts1_val = (cid,'Opening Balance Equity',)
                                        fbcursor.execute(sel_accts1_sql,sel_accts1_val)
                                        sel_accts1_data = fbcursor.fetchone()

                                        bal = sel_accts1_data[7] + float(balance)
                                        upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE cid_id=%s and name=%s"
                                        upd_accts1_val = (bal,cid,'Opening Balance Equity',)
                                        fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                        finsysdb.commit()

                                        sr_Frame_3.destroy()
                                        sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        deposit_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s ORDER BY accountsid DESC LIMIT 1;"
                                        deposit_val = (comp_data[0],)
                                        fbcursor.execute(deposit_sql,deposit_val)
                                        deposit_data = fbcursor.fetchall()

                                        dep_list.insert(0,deposit_data)
                                        rp_depositto.config(values=dep_list)
                                        rp_depositto.current(0)
                                    else:
                                        messagebox.showwarning("Fin sYs",f"Account with name {name} already exists. Please provide another name.")




                                dep_save = Button(sr_Canvas_3,text="Create",font=('arial 12 bold'),width=35,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:payment_createAccType())
                                sr_Canvas_3.create_window(0,0,window=dep_save,tags=("button1"))

                                def dep_goBack():
                                    sr_Frame_3.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_3,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dep_goBack())
                                sr_Canvas_3.create_window(0,0,window=back_btn,tags=("button2"))

                            rp_plus1 = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:add_depositTo())
                            sr_Canvas_1.create_window(0,0,window=rp_plus1,tags=("button2"))

                            rp_label8 = Label(sr_Canvas_1,width=20,height=1,text="Amount recieved",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label8,tags=("label9"))

                            def amount_receiving(event):
                                try:
                                    ramount = rp_amntre.get()
                                    if ramount.isdigit():
                                        if rp_tree.get_children() == '':
                                            pass
                                        else:
                                            try:
                                                child  = rp_tree.get_children()
                                                rp_tree.focus(child[0])
                                                rp_tree.selection_set(child[0])
                                                selected_row = rp_tree.selection()[0]
                                                pay_indices = rp_tree.item(selected_row,'values')
                                                rp_tree.item(selected_row,values=pay_indices)

                                                if float(pay_indices[4]) >= float(ramount):
                                                    rp_tree.set(selected_row,"#6",ramount)
                                                elif float(pay_indices[4]) == 0.0 or float(pay_indices[4]) <= float(ramount):
                                                    rp_tree.set(selected_row,"#6",float(pay_indices[4]))
                                                    
                                                else:
                                                    pass

                                                bal = float(ramount) - float(pay_indices[4])

                                                rp_tree.focus(child[1])
                                                rp_tree.selection_set(child[1])
                                                selected_row = rp_tree.selection()[0]
                                                pay_indices1 = rp_tree.item(selected_row,'values')
                                                rp_tree.item(selected_row,values=pay_indices1)
                                                
                                                if bal <= 0.0:
                                                    for i in  range(1,len(child)):
                                                        rp_tree.focus(child[i])
                                                        rp_tree.selection_set(child[i])
                                                        selected_row = rp_tree.selection()[0]
                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                        rp_tree.item(selected_row,values=pay_indices)

                                                        rp_tree.set(selected_row,"#6",0)
                                                else:
                                                    if float(pay_indices1[4]) >= bal:
                                                        rp_tree.set(selected_row,"#6",bal)
                                                    elif float(pay_indices1[4]) == 0.0 or float(pay_indices1[4]) <= bal:
                                                        rp_tree.set(selected_row,"#6",float(pay_indices1[4]))
                                                    else:
                                                        pass

                                                    bal1 = float(bal) - float(pay_indices1[4])

                                                    rp_tree.focus(child[2])
                                                    rp_tree.selection_set(child[2])
                                                    selected_row = rp_tree.selection()[0]
                                                    pay_indices2 = rp_tree.item(selected_row,'values')
                                                    rp_tree.item(selected_row,values=pay_indices2)

                                                    if bal1 <= 0.0:
                                                        for i in  range(2,len(child)):
                                                            rp_tree.focus(child[i])
                                                            rp_tree.selection_set(child[i])
                                                            selected_row = rp_tree.selection()[0]
                                                            pay_indices = rp_tree.item(selected_row,'values')
                                                            rp_tree.item(selected_row,values=pay_indices)

                                                            rp_tree.set(selected_row,"#6",0)
                                                    else:
                                                        if float(pay_indices2[4]) >= bal1:
                                                            rp_tree.set(selected_row,"#6",bal1)
                                                        elif float(pay_indices2[4]) == 0.0 or float(pay_indices2[4]) <= bal1:
                                                            rp_tree.set(selected_row,"#6",float(pay_indices2[4]))
                                                        else:
                                                            pass

                                                        bal2 = float(bal1) - float(pay_indices2[4])

                                                        rp_tree.focus(child[3])
                                                        rp_tree.selection_set(child[3])
                                                        selected_row = rp_tree.selection()[0]
                                                        pay_indices3 = rp_tree.item(selected_row,'values')
                                                        rp_tree.item(selected_row,values=pay_indices3)

                                                        if bal2 <= 0.0:
                                                            for i in  range(3,len(child)):
                                                                rp_tree.focus(child[i])
                                                                rp_tree.selection_set(child[i])
                                                                selected_row = rp_tree.selection()[0]
                                                                pay_indices = rp_tree.item(selected_row,'values')
                                                                rp_tree.item(selected_row,values=pay_indices)

                                                                rp_tree.set(selected_row,"#6",0)
                                                        else:
                                                            if float(pay_indices3[4]) >= bal2:
                                                                rp_tree.set(selected_row,"#6",bal2)
                                                            elif float(pay_indices3[4]) == 0.0 or float(pay_indices3[4]) <= bal2:
                                                                rp_tree.set(selected_row,"#6",float(pay_indices3[4]))
                                                            else:
                                                                pass

                                                            bal3 = float(bal2) - float(pay_indices3[4])

                                                            rp_tree.focus(child[4])
                                                            rp_tree.selection_set(child[4])
                                                            selected_row = rp_tree.selection()[0]
                                                            pay_indices4 = rp_tree.item(selected_row,'values')
                                                            rp_tree.item(selected_row,values=pay_indices4)

                                                            if bal3 <= 0.0:
                                                                for i in  range(4,len(child)):
                                                                    rp_tree.focus(child[i])
                                                                    rp_tree.selection_set(child[i])
                                                                    selected_row = rp_tree.selection()[0]
                                                                    pay_indices = rp_tree.item(selected_row,'values')
                                                                    rp_tree.item(selected_row,values=pay_indices)

                                                                    rp_tree.set(selected_row,"#6",0)
                                                            else:
                                                                if float(pay_indices4[4]) >= bal3:
                                                                    rp_tree.set(selected_row,"#6",bal3)
                                                                elif float(pay_indices4[4]) == 0.0 or float(pay_indices4[4]) <= bal3:
                                                                    rp_tree.set(selected_row,"#6",float(pay_indices4[4]))
                                                                else:
                                                                    pass

                                                                bal4 = float(bal3) - float(pay_indices4[4])

                                                                rp_tree.focus(child[5])
                                                                rp_tree.selection_set(child[5])
                                                                selected_row = rp_tree.selection()[0]
                                                                pay_indices5 = rp_tree.item(selected_row,'values')
                                                                rp_tree.item(selected_row,values=pay_indices5)

                                                                if bal4 <= 0.0:
                                                                    for i in  range(5,len(child)):
                                                                        rp_tree.focus(child[i])
                                                                        rp_tree.selection_set(child[i])
                                                                        selected_row = rp_tree.selection()[0]
                                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                                        rp_tree.item(selected_row,values=pay_indices)

                                                                        rp_tree.set(selected_row,"#6",0)
                                                                else:
                                                                    if float(pay_indices5[4]) >= bal4:
                                                                        rp_tree.set(selected_row,"#6",bal4)
                                                                    elif float(pay_indices5[4]) == 0.0 or float(pay_indices5[4]) <= bal4:
                                                                        rp_tree.set(selected_row,"#6",float(pay_indices5[4]))
                                                                    else:
                                                                        pass

                                                                    bal5 = float(bal4) - float(pay_indices5[4])

                                                                    rp_tree.focus(child[6])
                                                                    rp_tree.selection_set(child[6])
                                                                    selected_row = rp_tree.selection()[0]
                                                                    pay_indices6 = rp_tree.item(selected_row,'values')
                                                                    rp_tree.item(selected_row,values=pay_indices6)

                                                                    if bal5 <= 0.0:
                                                                        for i in  range(6,len(child)):
                                                                            rp_tree.focus(child[i])
                                                                            rp_tree.selection_set(child[i])
                                                                            selected_row = rp_tree.selection()[0]
                                                                            pay_indices = rp_tree.item(selected_row,'values')
                                                                            rp_tree.item(selected_row,values=pay_indices)

                                                                            rp_tree.set(selected_row,"#6",0)
                                                                    else:
                                                                        if float(pay_indices6[4]) >= bal5:
                                                                            rp_tree.set(selected_row,"#6",bal5)
                                                                        elif float(pay_indices6[4]) == 0.0 or float(pay_indices6[4]) <= bal5:
                                                                            rp_tree.set(selected_row,"#6",float(pay_indices6[4]))
                                                                        else:
                                                                            pass

                                                                        bal6 = float(bal5) - float(pay_indices6[4])

                                                                        rp_tree.focus(child[7])
                                                                        rp_tree.selection_set(child[7])
                                                                        selected_row = rp_tree.selection()[0]
                                                                        pay_indices7 = rp_tree.item(selected_row,'values')
                                                                        rp_tree.item(selected_row,values=pay_indices7)

                                                                        if bal6 <= 0.0:
                                                                            for i in  range(7,len(child)):
                                                                                rp_tree.focus(child[i])
                                                                                rp_tree.selection_set(child[i])
                                                                                selected_row = rp_tree.selection()[0]
                                                                                pay_indices = rp_tree.item(selected_row,'values')
                                                                                rp_tree.item(selected_row,values=pay_indices)

                                                                                rp_tree.set(selected_row,"#6",0)
                                                                        else:
                                                                            if float(pay_indices7[4]) >= bal6:
                                                                                rp_tree.set(selected_row,"#6",bal6)
                                                                            elif float(pay_indices7[4]) == 0.0 or float(pay_indices7[4]) <= bal6:
                                                                                rp_tree.set(selected_row,"#6",float(pay_indices7[4]))
                                                                            else:
                                                                                pass

                                                                            bal7 = float(bal6) - float(pay_indices7[4])

                                                                            rp_tree.focus(child[8])
                                                                            rp_tree.selection_set(child[8])
                                                                            selected_row = rp_tree.selection()[0]
                                                                            pay_indices8 = rp_tree.item(selected_row,'values')
                                                                            rp_tree.item(selected_row,values=pay_indices8)

                                                                            if bal7 <= 0.0:
                                                                                for i in  range(8,len(child)):
                                                                                    rp_tree.focus(child[i])
                                                                                    rp_tree.selection_set(child[i])
                                                                                    selected_row = rp_tree.selection()[0]
                                                                                    pay_indices = rp_tree.item(selected_row,'values')
                                                                                    rp_tree.item(selected_row,values=pay_indices)

                                                                                    rp_tree.set(selected_row,"#6",0)
                                                                            else:
                                                                                if float(pay_indices8[4]) >= bal7:
                                                                                    rp_tree.set(selected_row,"#6",bal7)
                                                                                elif float(pay_indices8[4]) == 0.0 or float(pay_indices8[4]) <= bal7:
                                                                                    rp_tree.set(selected_row,"#6",float(pay_indices8[4]))
                                                                                else:
                                                                                    pass

                                                                                bal8 = float(bal7) - float(pay_indices8[4])

                                                                                rp_tree.focus(child[9])
                                                                                rp_tree.selection_set(child[9])
                                                                                selected_row = rp_tree.selection()[0]
                                                                                pay_indices9 = rp_tree.item(selected_row,'values')
                                                                                rp_tree.item(selected_row,values=pay_indices9)

                                                                                if bal8 <= 0.0:
                                                                                    for i in  range(8,len(child)):
                                                                                        rp_tree.focus(child[i])
                                                                                        rp_tree.selection_set(child[i])
                                                                                        selected_row = rp_tree.selection()[0]
                                                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                                                        rp_tree.item(selected_row,values=pay_indices)

                                                                                        rp_tree.set(selected_row,"#6",0)
                                                                                else:
                                                                                    if float(pay_indices9[4]) >= bal8:
                                                                                        rp_tree.set(selected_row,"#6",bal8)
                                                                                    elif float(pay_indices9[4]) == 0.0 or float(pay_indices9[4]) <= bal8:
                                                                                        rp_tree.set(selected_row,"#6",float(pay_indices9[4]))
                                                                                    else:
                                                                                        pass
                                            except:
                                                pass

                                            
                                            rp_label10.config(text=str(ramount))
                                            
                                            ata = 0.0
                                            for c in child:
                                                payment = rp_tree.item(c,'values')[5]
                                                ata += float(payment)
                                            
                                            atc = float(ramount) - float(ata)

                                            rp_amnttoapply.delete(0,END)
                                            rp_amnttoapply.insert(0,ata)
                                            rp_amnttocredit.delete(0,END)
                                            rp_amnttocredit.insert(0,atc)
                                    else:
                                        rp_amntre.delete(0,END)
                                        if ramount == '':
                                            child  = rp_tree.get_children()
                                            for i in  range(0,len(child)):
                                                rp_tree.focus(child[i])
                                                rp_tree.selection_set(child[i])
                                                selected_row = rp_tree.selection()[0]
                                                pay_indices = rp_tree.item(selected_row,'values')
                                                rp_tree.item(selected_row,values=pay_indices)

                                                rp_tree.set(selected_row,"#6",0)
                                            rp_label10.config(text='0.00')
                                        else:
                                            pass
                                except:
                                    pass

                            rp_amntre = Entry(sr_Canvas_1,font=('arial 15'),width=20,background='#2f516f',foreground='white')
                            rp_amntre.bind("<KeyRelease>",amount_receiving)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_amntre,tags=("entry4"))

                            rp_label9 = Label(sr_Canvas_1,width=20,height=1,text="AMOUNT RECIEVED",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label9,tags=("label10"))

                            rp_label10 = Label(sr_Canvas_1,width=20,height=1,text="0.00",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label10,tags=("label11"))

                            

                            rpt_label2 = Label(sr_Canvas_1,width=15,height=1,text="DESCRIPTION", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label2,tags=("label13"))

                            rpt_label3 = Label(sr_Canvas_1,width=15,height=1,text="DUE DATE", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label3,tags=("label14"))

                            rpt_label4 = Label(sr_Canvas_1,width=15,height=1,text="ORIGINAL AMOUNT", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label4,tags=("label15"))

                            rpt_label5 = Label(sr_Canvas_1,width=15,height=1,text="OPEN BALANCE", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label5,tags=("label16"))

                            rpt_label6 = Label(sr_Canvas_1,width=15,height=1,text="PAYMENT", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label6,tags=("label17"))

                            rp_tree_style = ttk.Style()
                            rp_tree_style.theme_use("default")
                            rp_tree_style.configure("Treeview",background="#2f516f",foreground="white",rowheight=25,font=(None,11),fieldbackground="#2f516f")
                            rp_tree_style.configure("Treeview.Heading",background="#1b3857",activeforeground="black",foreground="white",font=(None,11))

                            rp_tree = ttk.Treeview(sr_Canvas_1,columns=("0","1","2","3","4","5"),show="headings",height=7)
                            rp_tree.column("0",width=36,anchor=CENTER)
                            rp_tree.column("1",width=210,anchor=CENTER)
                            rp_tree.column("2",width=210,anchor=CENTER)
                            rp_tree.column("3",width=210,anchor=CENTER)
                            rp_tree.column("4",width=210,anchor=CENTER)
                            rp_tree.column("5",width=210,anchor=CENTER)
                            rp_tree.heading("0",text="#")
                            rp_tree.heading("1",text="DESCRIPTION")
                            rp_tree.heading("2",text="DUE DATE")
                            rp_tree.heading("3",text="ORIGINAL AMOUNT")
                            rp_tree.heading("4",text="OPEN BALANCE")
                            rp_tree.heading("5",text="PAYMENT")
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=rp_tree,tags=("tree1"))

                            

                            sr_Canvas_1.create_line(820,800,1260,800,fill='gray',width=1,tags=("line10"))
                            sr_Canvas_1.create_line(820,850,1260,850,fill='gray',width=1,tags=("line11"))
                            sr_Canvas_1.create_line(820,900,1260,900,fill='gray',width=1,tags=("line12"))
                            sr_Canvas_1.create_line(820,800,820,900,fill='gray',width=1,tags=("line13"))
                            sr_Canvas_1.create_line(1000,800,1000,900,fill='gray',width=1,tags=("line14"))
                            sr_Canvas_1.create_line(1260,800,1260,900,fill='gray',width=1,tags=("line15"))

                            rpt_label7 = Label(sr_Canvas_1,width=15,height=1,text="Amount to Apply", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(910, 825, anchor="c", window=rpt_label7,tags=("label18"))  

                            rp_amnttoapply = Entry(sr_Canvas_1,font=('arial 15'),width=21,background='#2f516f',foreground='white')
                            rp_amnttoapply.delete(0,END)
                            rp_amnttoapply.insert(0,"0.00")
                            sr_Canvas_1.create_window(1130,825,anchor='c',window=rp_amnttoapply,tags=("entry5"))   

                            rpt_label8 = Label(sr_Canvas_1,width=15,height=1,text="Amount to Credit", font=('arial 10 bold'),background='#1b3857',fg="white") 
                            sr_Canvas_1.create_window(910, 875, anchor="c", window=rpt_label8,tags=("label19"))  

                            rp_amnttocredit = Entry(sr_Canvas_1,font=('arial 15'),width=21,background='#2f516f',foreground='white')
                            rp_amnttocredit.delete(0,END)
                            rp_amnttocredit.insert(0,"0.00")
                            sr_Canvas_1.create_window(1130,875,anchor='c',window=rp_amnttocredit,tags=("entry6"))   

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3")) 

                            def rp_savePayment():
                                customer = rp_custCombo.get()
                                email = rp_email.get()
                                findinvoice = rp_invnum.get()
                                pmethod = rp_pmethod.get()
                                depto = rp_depositto.get()
                                amtreceived = rp_amntre.get()
                                amtapply = rp_amnttoapply.get()
                                amtcredit = rp_amnttocredit.get()
                                paymdate = rp_pdate.get()
                                
                                try:
                                    descp_list = []
                                    due_list = []
                                    original_list = []
                                    open_list = []
                                    payment_list = []
                                    for records in rp_tree.get_children():
                                        descp_list.append(rp_tree.item(records,'values')[1])
                                        due_list.append(rp_tree.item(records,'values')[2])
                                        original_list.append(rp_tree.item(records,'values')[3])
                                        open_list.append(rp_tree.item(records,'values')[4])
                                        payment_list.append(rp_tree.item(records,'values')[5])
                                except:
                                    pass

                                try:
                                    inv_list = []
                                    for i in descp_list:
                                        inv_list.append(i.split(" ")[0])
                                except:
                                    pass

                                user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                user_val = (nm_ent.get(),)
                                fbcursor.execute(user_sql,user_val)
                                user_data = fbcursor.fetchone()

                                comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                comp_val = (user_data[0],)
                                fbcursor.execute(comp_sql,comp_val)
                                comp_data = fbcursor.fetchone()

                                get_payment_sql = "SELECT * FROM app1_payment ORDER BY paymentid DESC LIMIT 1"
                                fbcursor.execute(get_payment_sql)
                                get_payment_data = fbcursor.fetchone()

                                if not get_payment_data:
                                    refno = '1001'
                                else:
                                    refno = str(float(get_payment_data[6]) + 1)

                                if customer == '':
                                    pass
                                elif pmethod == 'Add new':
                                    pass
                                elif len(descp_list) == 1:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,descrip2,duedate2,orgamt2,descrip3,duedate3,orgamt3,descrip4,duedate4,orgamt4,descrip5,duedate5,orgamt5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 2:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,descrip3,duedate3,orgamt3,descrip4,duedate4,orgamt4,descrip5,duedate5,orgamt5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 3:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,descrip4,duedate4,orgamt4,descrip5,duedate5,orgamt5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 4:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,descrip5,duedate5,orgamt5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 5:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 6:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,openbal5,payment5,descrip6,duedate6,orgamt6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 7:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,openbal5,payment5,descrip6,duedate6,orgamt6,openbal6,payment6,descrip7,duedate7,orgamt7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 8:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,openbal5,payment5,descrip6,duedate6,orgamt6,openbal6,payment6,descrip7,duedate7,orgamt7,openbal7,payment7,descrip8,duedate8,orgamt8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 9:
                                    undefined = 'undefined'
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,openbal5,payment5,descrip6,duedate6,orgamt6,openbal6,payment6,descrip7,duedate7,orgamt7,openbal7,payment7,descrip8,duedate8,orgamt8,openbal8,payment8,descrip9,duedate9,orgamt9,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],descp_list[8],due_list[8],original_list[8],open_list[8],payment_list[8],undefined,undefined,undefined,comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                elif len(descp_list) == 10:
                                    ins_payment_sql = "INSERT INTO app1_payment(customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descrip,duedate,orgamt,openbal,payment,descrip1,duedate1,orgamt1,openbal1,payment1,descrip2,duedate2,orgamt2,openbal2,payment2,descrip3,duedate3,orgamt3,openbal3,payment3,descrip4,duedate4,orgamt4,openbal4,payment4,descrip5,duedate5,orgamt5,openbal5,payment5,descrip6,duedate6,orgamt6,openbal6,payment6,descrip7,duedate7,orgamt7,openbal7,payment7,descrip8,duedate8,orgamt8,openbal8,payment8,descrip9,duedate9,orgamt9,openbal9,payment9) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],descp_list[8],due_list[8],original_list[8],open_list[8],payment_list[8],descp_list[9],due_list[9],original_list[9],open_list[9],payment_list[9],comp_data[0])
                                    fbcursor.execute(ins_payment_sql,ins_payment_val)
                                    finsysdb.commit()
                                else:
                                    pass

                                get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                get_accts1_val = ('Account Receivable(Debtors)',comp_data[0])
                                fbcursor.execute(get_accts1_sql,get_accts1_val)
                                get_accts1_data = fbcursor.fetchone()
                                
                                accts1_bal = float(get_accts1_data[0]) - float(amtreceived) 
                                upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                upd_accts1_val = (accts1_bal,'Account Receivable(Debtors)',comp_data[0])
                                fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                finsysdb.commit()

                                try:
                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                    get_accts1_val1 = (depto,comp_data[0])
                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                    get_accts1_data1 = fbcursor.fetchone()

                                    if not get_accts1_data1:
                                        pass
                                    else:
                                        accts1_bal1 = float(get_accts1_data1[0]) - float(amtreceived)
                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                        upd_accts1_val1 = (accts1_bal1,depto,comp_data[0])
                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                        finsysdb.commit()
                                except:
                                    pass

                                try:
                                    get_accts_sql = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                    get_accts_val = (depto,comp_data[0])
                                    fbcursor.execute(get_accts_sql,get_accts_val)
                                    get_accts_data = fbcursor.fetchone()

                                    if not get_accts_data:
                                        pass
                                    else:
                                        accts_bal = float(get_accts_data[0]) - float(amtreceived)
                                        upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                        upd_accts_val = (accts_bal,depto,comp_data[0])
                                        fbcursor.execute(upd_accts_sql,upd_accts_val)
                                        finsysdb.commit()
                                except:
                                    pass

                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[0],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[0] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[0])
                                        baldue = float(open_list[0]) - float(payment_list[0])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[0],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[1],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[1] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[1])
                                        baldue = float(open_list[1]) - float(payment_list[1])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[1],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[2],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[2] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[2])
                                        baldue = float(open_list[2]) - float(payment_list[2])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[2],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[3],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[3] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[3])
                                        baldue = float(open_list[3]) - float(payment_list[3])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[3],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[4],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[4] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[4])
                                        baldue = float(open_list[4]) - float(payment_list[4])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[4],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[5],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[5] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[5])
                                        baldue = float(open_list[5]) - float(payment_list[5])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[5],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[6],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[6] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[6])
                                        baldue = float(open_list[6]) - float(payment_list[6])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[6],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[7],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[7] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[7])
                                        baldue = float(open_list[7]) - float(payment_list[7])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[7],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[8],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[8] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[8])
                                        baldue = float(open_list[8]) - float(payment_list[8])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[8],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                try:
                                    get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                    get_inv1_val = (inv_list[9],comp_data[0])
                                    fbcursor.execute(get_inv1_sql,get_inv1_val)
                                    get_inv1_data = fbcursor.fetchone()

                                    if get_inv1_data and inv_list[9] != 'undefined':
                                        amtrecvd = int(get_inv1_data[39]) + int(payment_list[9])
                                        baldue = float(open_list[9]) - float(payment_list[9])

                                        upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                        upd_inv_val = (amtrecvd,baldue,inv_list[9],comp_data[0])
                                        fbcursor.execute(upd_inv_sql,upd_inv_val)
                                        finsysdb.commit()
                                    else:
                                        pass
                                except:
                                    pass
                                
                                sr_Frame_1.destroy()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                                show_sr_treeData()



                            save_btn = Button(sr_Canvas_1,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#1476c5",foreground="white",activeforeground="white",bd=0,command=lambda:rp_savePayment())
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button4")) 

                            # rpt_label9 = Label(sr_Canvas_1,width=5,height=1,text="1",font=('arial 12'),background='#1b3857',fg="white",anchor="c")
                            # sr_Canvas_1.create_window(0,0,window=rpt_label9,tags=("label20"))

                            rpt_descp = Entry(sr_Canvas_1,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_descp,tags=("entry8")) 

                            rpt_due = Entry(sr_Canvas_1,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_due,tags=("entry9")) 

                            rpt_original = Entry(sr_Canvas_1,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_original,tags=("entry10")) 

                            rpt_obal = Entry(sr_Canvas_1,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_obal,tags=("entry11"))

                            rpt_payment = Entry(sr_Canvas_1,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_payment,tags=("entry12")) 

                            def show_editEntry():
                                selected_item = rp_tree.selection()[0]
                                rpt_row = list(rp_tree.item(selected_item,'values'))
                                if len(rpt_row) == '':
                                    pass
                                else:
                                    sr_Canvas_1.itemconfig('label13',state='normal')
                                    sr_Canvas_1.itemconfig('label14',state='normal')
                                    sr_Canvas_1.itemconfig('label15',state='normal')
                                    sr_Canvas_1.itemconfig('label16',state='normal')
                                    sr_Canvas_1.itemconfig('label17',state='normal')

                                    sr_Canvas_1.itemconfig('entry8',state='normal')
                                    sr_Canvas_1.itemconfig('entry9',state='normal')
                                    sr_Canvas_1.itemconfig('entry10',state='normal')
                                    sr_Canvas_1.itemconfig('entry11',state='normal')
                                    sr_Canvas_1.itemconfig('entry12',state='normal')

                                    rpt_descp.delete(0,END)
                                    rpt_descp.insert(0,rpt_row[1])
                                    rpt_due.delete(0,END)
                                    rpt_due.insert(0,rpt_row[2])
                                    rpt_original.delete(0,END)
                                    rpt_original.insert(0,rpt_row[3])
                                    rpt_obal.delete(0,END)
                                    rpt_obal.insert(0,rpt_row[4])
                                    rpt_payment.delete(0,END)
                                    rpt_payment.insert(0,rpt_row[5])

                                    try:
                                        def assign_newvalue(event):
                                            rp_tree.item(selected_item,values=(rpt_row[0],rpt_descp.get(),rpt_due.get(),rpt_original.get(),rpt_obal.get(),rpt_payment.get()))

                                        rpt_descp.bind("<KeyRelease>",assign_newvalue)
                                        rpt_due.bind("<KeyRelease>",assign_newvalue)
                                        rpt_original.bind("<KeyRelease>",assign_newvalue)
                                        rpt_obal.bind("<KeyRelease>",assign_newvalue)
                                        rpt_payment.bind("<KeyRelease>",assign_newvalue)
                                    except:
                                        pass


                            rpt_edit = Button(sr_Canvas_1,font=('arial 12'),text='Edit',width=11,background='#1b3857',foreground='white',activebackground='#1b3857',activeforeground='white',command=lambda:show_editEntry())
                            sr_Canvas_1.create_window(0,0,anchor='c',window=rpt_edit,tags=("combo13")) 

                            rp_label5 = Label(sr_Canvas_1,width=20,height=1,text="Payment date",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=rp_label5,tags=("label6"))

                            rp_pdate = DateEntry(sr_Canvas_1,font=('arial 15'),date_pattern="yyyy-mm-dd",width=19,background='#2f516f',foreground='white')

                            cwidth = root.winfo_screenwidth()

                            if cwidth > 1280:
                                sr_Canvas_1.create_window(122.27272727272727,442.44604316546764,anchor='nw',window=rp_pdate,tags=('date4'))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(91.54545454545455,456.1151079136691,anchor='nw',window=rp_pdate,tags=('date4'))
                            else:
                                sr_Canvas_1.create_window(114.81818181818181,407.9136690647482,anchor='nw',window=rp_pdate,tags=('date4'))
                        
                        elif sr_transCombo.get() == 'Sales Receipt':
                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            cm_label1 = Label(sr_Canvas_1,width=18,height=1,text="CASH MEMO",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=cm_label1,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))

                            cm_label2 = Label(sr_Canvas_1,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=cm_label2,tags=("label2"))

                            cm_label3 = Label(sr_Canvas_1,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=cm_label3,tags=("label21"))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            def cm_fetch_custDetails(event):
                                cust_name = cm_custCombo.get()
                                cust_fname = cust_name.split(" ")[0]
                                cust_lname = cust_name.split(" ")[1]

                                cust_sql = "SELECT * FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                cust_val = (cust_fname,cust_lname,comp_data[0])
                                fbcursor.execute(cust_sql,cust_val)
                                cust_data = fbcursor.fetchone()

                                inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                inv_val = (cust_name,comp_data[0])
                                fbcursor.execute(inv_sql,inv_val)
                                inv_data = fbcursor.fetchall()

                                try:
                                    if not cust_data:
                                        pass
                                    else:
                                        cm_email.delete(0,END)
                                        cm_email.insert(0,cust_data[9])
                                        cm_baddress.delete("1.0","end-1c")
                                        cm_baddress.insert("1.0",cust_data[2] + " " + cust_data[3] + "\n" + cust_data[4] + "\n" + cust_data[12] + "\n" + cust_data[13] + "\n" + cust_data[14] + "\n" + cust_data[15] + "\n" + cust_data[16])
                                        if comp_data[4] in cm_pofsupply['values']:
                                            cm_pofsupply.delete(0,END)
                                            cm_pofsupply.insert(0,comp_data[4])
                                        else:
                                            pass
                                except:
                                    pass

                            cm_custCombo = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'))
                            cm_custCombo["values"] = cust_list
                            cm_custCombo.current(0)
                            cm_custCombo.bind("<<ComboboxSelected>>",cm_fetch_custDetails)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_custCombo,tags=("combo3"))

                            def sr_addCustomer_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                                                    cust_val = (comp_data[0],)
                                                    fbcursor.execute(cust_sql,cust_val)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        cm_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%S"
                                                    fbcursor.execute(cust_sql,comp_data[0])
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        cm_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def cm_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:cm_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            cm_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer_1())
                            sr_Canvas_1.create_window(0,0,window=cm_plus,tags=("button5"))

                            cm_label4 = Label(sr_Canvas_1,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label4,tags=('label22'))

                            cm_email = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_email,tags=("entry13"))

                            cm_label5 = Label(sr_Canvas_1,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label5,tags=('label23'))

                            cm_baddress = Text(sr_Canvas_1,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_baddress,tags=("entry14"))

                            cm_label7 = Label(sr_Canvas_1,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label7,tags=('label25'))

                            def gst_selection(event):
                                cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']

                                ncplace_gstlist = ['Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                if not comp_data:
                                    pass
                                elif comp_data[4] == cm_pofsupply.get():
                                    cmt_entry7["values"] = cplace_gstlist
                                    cmt_entry17["values"] = cplace_gstlist
                                    cmt_entry24["values"] = cplace_gstlist
                                    cmt_entry31["values"] = cplace_gstlist
                                else:
                                    cmt_entry7["values"] = ncplace_gstlist
                                    cmt_entry17["values"] = ncplace_gstlist
                                    cmt_entry24["values"] = ncplace_gstlist
                                    cmt_entry31["values"] = ncplace_gstlist

                            cm_pofsupply = ttk.Combobox(sr_Canvas_1,width=19,font=('arial 15'),background='#2f516f')
                            pofsupply_list = ['Kerala','Andaman and Nicobar Islads','Andhra Predhesh','Arunachal Predesh',
                            'Assam','Bihar','Chandigarh','Chhattisgarh','Dadra and Nagar Haveli','Damn anad Diu','Delhi',
                            'Goa','Gujarat','Haryana','Himachal Predesh','Jammu and Kashmir','Jharkhand','Karnataka','Ladakh',
                            'Lakshadweep','Madhya Predesh','Maharashtra','Manipur','Meghalaya','Mizoram','Nagaland','Odisha',
                            'Puducherry','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura','Uttar Predesh','Uttarakhand',
                            'West Bengal','Other Territory',]
                            cm_pofsupply["values"] = pofsupply_list
                            cm_pofsupply.bind("<<ComboboxSelected>>",gst_selection)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_pofsupply,tags=("entry15"))

                            cm_label8 = Label(sr_Canvas_1,width=20,height=1,text="Payment Method",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label8,tags=('label26'))

                            def cm_show_pmethod(event):
                                if cm_pmethod.get() == "Add new":
                                    cm_pmethod.delete(0,END)
                                    sr_Canvas_1.itemconfig("entry26",state='normal')
                                else:
                                    sr_Canvas_1.itemconfig("entry26",state='hidden')

                            cm_pmethod = ttk.Combobox(sr_Canvas_1,width=19,font=('arial 15'),background='#2f516f')
                            pmethod_list_1 = ['Cash','Cheque','Credit Card','Add new']
                            cm_pmethod["values"] = pmethod_list_1
                            cm_pmethod.bind("<<ComboboxSelected>>",cm_show_pmethod)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_pmethod,tags=("entry16"))

                            def cm_addnew_pmethod(event):
                                pmethod_list_1.insert(0,cm_newmeth.get())

                                cm_pmethod["values"] = pmethod_list_1

                            cm_newmeth = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            cm_newmeth.bind("<FocusOut>",cm_addnew_pmethod)
                            sr_Canvas_1.create_window(115,755,anchor='nw',state=HIDDEN,window=cm_newmeth,tags=("entry26"))

                            cm_label9 = Label(sr_Canvas_1,width=20,height=1,text="Reference No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label9,tags=('label27'))

                            def cm_show_ref(event):
                                ref_nom=cm_ref.get()

                                ref_sql = "SELECT * FROM app1_invoice WHERE cid_id=%s and invoiceid=%s and customername=%s"
                                ref_val = (comp_data[0],ref_nom,cm_custCombo.get())
                                fbcursor.execute(ref_sql,ref_val)
                                ref_data = fbcursor.fetchone()
                                

                                cmt_entry1.delete(0,END)
                                cmt_entry1.insert(0,ref_data[9])
                                cmt_entry2.delete(0,END)
                                cmt_entry2.insert(0,ref_data[10])
                                cmt_entry3.delete(0,END)
                                cmt_entry3.insert(0,ref_data[11])
                                cmt_entry4.delete(0,END)
                                cmt_entry4.insert(0,ref_data[12])
                                cmt_entry5.delete(0,END)
                                cmt_entry5.insert(0,ref_data[13])
                                cmt_entry6.delete(0,END)
                                cmt_entry6.insert(0,ref_data[14])
                                cmt_entry7.delete(0,END)
                                cmt_entry7.insert(0,ref_data[15])

                                cmt_entry11.delete(0,END)
                                cmt_entry11.insert(0,ref_data[18])
                                cmt_entry12.delete(0,END)
                                cmt_entry12.insert(0,ref_data[19])
                                cmt_entry13.delete(0,END)
                                cmt_entry13.insert(0,ref_data[20])
                                cmt_entry14.delete(0,END)
                                cmt_entry14.insert(0,ref_data[21])
                                cmt_entry15.delete(0,END)
                                cmt_entry15.insert(0,ref_data[22])
                                cmt_entry16.delete(0,END)
                                cmt_entry16.insert(0,ref_data[23])
                                cmt_entry17.delete(0,END)
                                cmt_entry17.insert(0,ref_data[24])

                                cmt_entry18.delete(0,END)
                                cmt_entry18.insert(0,ref_data[25])
                                cmt_entry19.delete(0,END)
                                cmt_entry19.insert(0,ref_data[26])
                                cmt_entry20.delete(0,END)
                                cmt_entry20.insert(0,ref_data[27])
                                cmt_entry21.delete(0,END)
                                cmt_entry21.insert(0,ref_data[28])
                                cmt_entry22.delete(0,END)
                                cmt_entry22.insert(0,ref_data[29])
                                cmt_entry23.delete(0,END)
                                cmt_entry23.insert(0,ref_data[30])
                                cmt_entry24.delete(0,END)
                                cmt_entry24.insert(0,ref_data[31])

                                cmt_entry25.delete(0,END)
                                cmt_entry25.insert(0,ref_data[32])
                                cmt_entry26.delete(0,END)
                                cmt_entry26.insert(0,ref_data[33])
                                cmt_entry27.delete(0,END)
                                cmt_entry27.insert(0,ref_data[34])
                                cmt_entry28.delete(0,END)
                                cmt_entry28.insert(0,ref_data[35])
                                cmt_entry29.delete(0,END)
                                cmt_entry29.insert(0,ref_data[36])
                                cmt_entry30.delete(0,END)
                                cmt_entry30.insert(0,ref_data[37])
                                cmt_entry31.delete(0,END)
                                cmt_entry31.insert(0,ref_data[38])

                                cmt_entry8.delete(0,END)
                                cmt_entry8.insert(0,ref_data[16])
                                cmt_entry9.delete(0,END)
                                cmt_entry9.insert(0,ref_data[40])
                                cmt_entry10.delete(0,END)
                                cmt_entry10.insert(0,ref_data[17])




                            cm_ref = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            cm_ref.bind("<Return>",cm_show_ref)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_ref,tags=("entry17"))

                            cm_label10 = Label(sr_Canvas_1,width=20,height=1,text="Deposit to:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label10,tags=('label28'))

                            cm_depto = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f')

                            dep_list = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                            'Deferred Krishi Kalyan Cess Input Credit','Deferred SGST','Deferred Service Tax Input Credit',
                            'Deferred VAT Input Credit','GST Refund','Inventory Asset','Krishi Kalyan Cess Refund'
                            ,'Prepaid Insurance','Service Tax Refund','TDS Receivable','Uncategorised Asset','Undeposited Fund',]

                            dep_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s"
                            dep_val = (comp_data[0],)
                            fbcursor.execute(dep_sql,dep_val)
                            dep_data = fbcursor.fetchall()

                            for d in dep_data:
                                dep_list.insert(0,d)
                            cm_depto['values'] = dep_list
                            cm_depto.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cm_depto,tags=("combo4"))

                            def add_depositTo_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_3 = Frame(tab3_1,)
                                sr_Frame_3.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets3(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget

                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.9


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/8.2,dheight/2.44)
                                    dcanvas.coords("label3",dwidth/1.655,dheight/2.44)
                                    dcanvas.coords("label4",dwidth/8.2,dheight/1.89)
                                    dcanvas.coords("label5",dwidth/1.655,dheight/1.89)
                                    dcanvas.coords("label6",dwidth/1.605,dheight/1.522)
                                    dcanvas.coords("label7",dwidth/1.655,dheight/1.27)

                                    dcanvas.coords("entry1",dwidth/20,dheight/2.32)
                                    dcanvas.coords("entry2",dwidth/1.88,dheight/2.32)
                                    dcanvas.coords("entry3",dwidth/20,dheight/1.8)
                                    dcanvas.coords("entry4",dwidth/1.88,dheight/1.805)
                                    dcanvas.coords("entry5",dwidth/20,dheight/1.605)
                                    dcanvas.coords("entry6",dwidth/1.88,dheight/1.46)
                                    dcanvas.coords("entry7",dwidth/1.88,dheight/1.23)

                                    dcanvas.coords("check1",dwidth/1.89,dheight/1.57)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.97)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_3 = Canvas(sr_Frame_3,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_3.grid_columnconfigure(0,weight=1)
                                sr_Frame_3.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_3,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_3.yview)
                                sr_Canvas_3.bind("<Configure>", responsive_widgets3)
                                sr_Canvas_3.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_3.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                dep_label1 = Label(sr_Canvas_3,width=18,height=1,text="ACCOUNT CREATE",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_3.create_window(0,0,anchor="c",window=dep_label1,tags=("label1"))
                                sr_Canvas_3.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                dep_label2 = Label(sr_Canvas_3,width=20,height=1,text="Account type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label2,tags=("label2"))

                                def fetch_detailType(event):
                                    if dep_acctype.get() == "Cost of Goods Sold":
                                        item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                        item_val = (13,)
                                        fbcursor.execute(item_sql,item_val)
                                        item_data = fbcursor.fetchall()

                                        item_list = []
                                        for i in item_data:
                                            item_list.append(i[1])
                                        dep_dtype.configure(values=item_list)
                                    elif dep_acctype.get() == "Expenses":
                                        item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                        item_val = (14,)
                                        fbcursor.execute(item_sql,item_val)
                                        item_data = fbcursor.fetchall()

                                        item_list = []
                                        for i in item_data:
                                            item_list.append(i[1])
                                        dep_dtype.configure(values=item_list)
                                    else:
                                        item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                        item_val = (15,)
                                        fbcursor.execute(item_sql,item_val)
                                        item_data = fbcursor.fetchall()

                                        item_list = []
                                        for i in item_data:
                                            item_list.append(i[1])
                                        dep_dtype.configure(values=item_list)

                                dep_acctype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                dep_acctype['values'] = ['Cost of Goods Sold','Expenses','Other Expense']
                                dep_acctype.bind("<<ComboboxSelected>>",fetch_detailType)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_acctype,tags=("entry1"))

                                dep_label3 = Label(sr_Canvas_3,width=20,height=1,text="*Name",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label3,tags=("label3"))

                                dep_name = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_name,tags=("entry2"))

                                dep_label4 = Label(sr_Canvas_3,width=20,height=1,text="*Detail Type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label4,tags=("label4"))

                                dep_dtype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtype,tags=("entry3"))

                                dep_label5 = Label(sr_Canvas_3,width=20,height=1,text="Description",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label5,tags=("label5"))

                                dep_desp = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_desp,tags=("entry4"))

                                dep_term = Text(sr_Canvas_3,width=47,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                term_txt = "Use Cash and Cash Equivalents to track cash or assets that can be converted into cash immediately. For example, marketable securities and Treasury bills."
                                dep_term.insert('1.0',term_txt)
                                dep_term.config(state=DISABLED)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_term,tags=("entry5"))

                                def sr_subAccount():
                                    if subaccVar.get() == True:
                                        dep_subacc["state"] = NORMAL
                                    else:
                                        dep_subacc["state"] = DISABLED

                                subaccVar = BooleanVar()
                                dep_subcheck = Checkbutton(sr_Canvas_3,variable=subaccVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sr_subAccount)
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subcheck,tags=("check1"))

                                dep_label6 = Label(sr_Canvas_3,width=20,height=1,text="Is sub-account",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label6,tags=("label6"))

                                dep_subacc = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black',state=DISABLED)
                                dep_subacc['values'] = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                                'Deferred Krishi Kalyan Cess Input Credit','Deferred Service Tax Input Credit',
                                'Deferred SGST','Deferred VAT Input Credit','GST Refund','Inventory Asset','Paid Insurance',
                                'Service Tax Refund','TDS Receivable','Uncategorised Asset','Accumulated Depreciation',
                                'Buildings and Improvements','Furniture and Equipment','Land','Leasehold Improvements',
                                'CGST Payable','CST Payable','CST Suspense','GST Payable','GST Suspense','IGST Payable',
                                'Input CGST','Input CGST Tax RCM','Input IGST','Input IGST Tax RCM','Input Krishi Kalyan Cess',
                                'Input Krishi Kalyan Cess RCM','Input Service Tax','Input Service Tax RCM','Input SGST',
                                'Input SGST Tax RCM','Input VAT 14%','Input VAT 4%','Input VAT 5%','Krishi Kalyan Cess Payable',
                                'Krishi Kalyan Cess Suspense','Output CGST','Output CGST Tax RCM','Output CST 2%','Output IGST',
                                'Output IGST Tax RCM','Output Krishi Kalyan Cess','Output Krishi Kalyan Cess RCM','Output Service Tax',
                                'Output Service Tax RCM','Output SGST','Output SGST Tax RCM','Output VAT 14%','Output VAT 4%',
                                'Output VAT 5%','Service Tax Payable','Service Tax Suspense','SGST Payable','SGST Suspense',
                                'Swachh Bharat Cess Payable','Swachh Bharat Cess Suspense','TDS Payable','VAT Payable',
                                'VAT Suspense','Opening Balance','Equity',]
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subacc,tags=("entry6"))

                                dep_label7 = Label(sr_Canvas_3,width=20,height=1,text="Default Tax Code",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                sr_Canvas_3.create_window(0,0,window=dep_label7,tags=("label7"))

                                dep_dtaxcode = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                dep_dtaxcode['values'] = ['18.0% IGST','14.00% ST','0% IGST','Out of Scope','0% GST','14.5% ST',
                                '14.0% VAT','6.0% IGST','28.0% IGST','15.0% ST','28.0% GST','12.0% GST','18.0% GST','3.0% GST',
                                '0.2% IGST','5.0% GST','6.0% GST','0.2% GST','Exempt IGST','3.0% IGS','4.0% VAT','5.0% IGST',
                                '12.36% ST','5.0% VAT','Exempt GST','12.0% IGST','2.0% CST',]
                                sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtaxcode,tags=("entry7"))

                                def payment_createAccType():
                                    acctype = dep_acctype.get()
                                    detype = dep_dtype.get()
                                    name = dep_name.get()
                                    description = dep_desp.get()
                                    gst = dep_subacc.get()
                                    deftaxcode = dep_dtaxcode.get()
                                    balance = 0
                                    today = datetime.today()
                                    asof = today.strftime("%Y-%m-%d")
                                    balfordisp = 0
                                # ----company id
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]
                                    #----------------

                                    #product id --------------
                                    if acctype == "Cost of Goods Sold":
                                        pro_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                        pro_val = (13,)
                                        fbcursor.execute(pro_sql,pro_val)
                                        product_data = fbcursor.fetchone()
                                    elif acctype == "Expenses":
                                        pro_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                        pro_val = (14,)
                                        fbcursor.execute(pro_sql,pro_val)
                                        product_data = fbcursor.fetchone()
                                    else:
                                        product_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                        product_val = (15,)
                                        fbcursor.execute(product_sql,product_val)
                                        product_data = fbcursor.fetchone()
                                    
                                    productid = product_data[0]
                                    #-----------------

                                    acctype_sql = "SELECT accountname FROM app1_accountype WHERE accountname=%s"
                                    acctype_val = (dep_dtype.get(),)
                                    fbcursor.execute(acctype_sql,acctype_val)
                                    acctype_data = fbcursor.fetchone()

                                    acct_sql = "SELECT name,cid_id FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                    acct_val = (dep_name.get(),comp_data[0])
                                    fbcursor.execute(acct_sql,acct_val)
                                    acct_data = fbcursor.fetchone()

                                    acct1_sql = "SELECT name,cid_id FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                    acct1_val = (dep_name.get(),comp_data[0])
                                    fbcursor.execute(acct1_sql,acct1_val)
                                    acct1_data = fbcursor.fetchone()
                                    

                                    if not acctype_data and not acct_data or not acct1_data:
                                        ins_acctype_sql = "INSERT INTO app1_accountype(cid_id,accountname,accountbal) VALUES(%s,%s,%s)"
                                        ins_acctype_val= (comp_data[0],detype,balance)
                                        fbcursor.execute(ins_acctype_sql,ins_acctype_val)
                                        finsysdb.commit()
                                        
                                        if acctype == "Cost of Goods Sold":
                                            #pro id ------------
                                            pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                            pro_val = (13,)
                                            fbcursor.execute(pro_sql,pro_val)
                                            pro_data = fbcursor.fetchone()
                                            #--------------------
                                            ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                            ins_accts_val = (3,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                            fbcursor.execute(ins_accts_sql,ins_accts_val)
                                            finsysdb.commit()
                                        elif acctype == "Expenses":
                                            #pro id ------------
                                            pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                            pro_val = (14,)
                                            fbcursor.execute(pro_sql,pro_val)
                                            pro_data = fbcursor.fetchone()
                                            #--------------------
                                            ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                            ins_accts_val = (3,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                            fbcursor.execute(ins_accts_sql,ins_accts_val)
                                            finsysdb.commit()
                                        else:
                                            #pro id ------------
                                            pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                            pro_val = (15,)
                                            fbcursor.execute(pro_sql,pro_val)
                                            pro_data = fbcursor.fetchone()
                                            #--------------------

                                            ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                            ins_accts_val = (2,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                            fbcursor.execute(ins_accts_sql,ins_accts_val)
                                            finsysdb.commit()

                                        sel_accts1_sql = "SELECT * FROM app1_accounts1 WHERE cid_id=%s and name=%s"
                                        sel_accts1_val = (cid,'Opening Balance Equity',)
                                        fbcursor.execute(sel_accts1_sql,sel_accts1_val)
                                        sel_accts1_data = fbcursor.fetchone()

                                        bal = sel_accts1_data[7] + float(balance)
                                        upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE cid_id=%s and name=%s"
                                        upd_accts1_val = (bal,cid,'Opening Balance Equity',)
                                        fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                        finsysdb.commit()

                                        sr_Frame_3.destroy()
                                        sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        deposit_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s ORDER BY accountsid DESC LIMIT 1;"
                                        deposit_val = (comp_data[0],)
                                        fbcursor.execute(deposit_sql,deposit_val)
                                        deposit_data = fbcursor.fetchall()

                                        dep_list.insert(0,deposit_data)
                                        rp_depositto.config(values=dep_list)
                                        rp_depositto.current(0)
                                    else:
                                        messagebox.showwarning("Fin sYs",f"Account with name {name} already exists. Please provide another name.")




                                dep_save = Button(sr_Canvas_3,text="Create",font=('arial 12 bold'),width=35,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:payment_createAccType())
                                sr_Canvas_3.create_window(0,0,window=dep_save,tags=("button1"))

                                def dep_goBack():
                                    sr_Frame_3.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_3,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dep_goBack())
                                sr_Canvas_3.create_window(0,0,window=back_btn,tags=("button2"))

                            cm_plus1 = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:add_depositTo_1())
                            sr_Canvas_1.create_window(0,0,window=cm_plus1,tags=("button6"))

                            

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line17"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line18"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line19"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line20"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line21"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line22"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line23"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line24"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line25"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line26"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line27"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line28"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line29"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line30"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line31"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line58"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line32"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line33"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line34"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line35"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line36"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line37"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line38"))

                            cm_label13 = Label(sr_Canvas_1,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label13,tags=('label31'))

                            cm_label14 = Label(sr_Canvas_1,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label14,tags=('label32'))

                            cm_label18 = Label(sr_Canvas_1,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label18,tags=('label33'))

                            cm_label19 = Label(sr_Canvas_1,width=10,height=1,text="HSN",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label19,tags=('label34'))

                            cm_label20 = Label(sr_Canvas_1,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label20,tags=('label35'))

                            cm_label21 = Label(sr_Canvas_1,width=6,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label21,tags=('label36'))

                            cm_label22 = Label(sr_Canvas_1,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label22,tags=('label37'))

                            cm_label23 = Label(sr_Canvas_1,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label23,tags=('label38'))

                            cm_label24 = Label(sr_Canvas_1,width=8,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label24,tags=('label39')) 

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                            get_inventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_inventory_sql,get_inventory_val)
                            get_inventory_data = fbcursor.fetchall()

                            get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                            get_noninventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                            get_noninventory_data = fbcursor.fetchall()

                            get_service_sql = "SELECT * FROM app1_service WHERE cid_id=%s" 
                            get_service_val = (comp_data[0],)                      
                            fbcursor.execute(get_service_sql,get_service_val)
                            get_service_data = fbcursor.fetchall()

                            get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                            get_bundle_val = (comp_data[0],)                      
                            fbcursor.execute(get_bundle_sql,get_bundle_val)
                            get_bundle_data = fbcursor.fetchall()

                            product_list = []

                            if not get_inventory_data:
                                pass
                            else:
                                for i in get_inventory_data:
                                    product_list.append(i[2])

                            if not get_noninventory_data:
                                pass
                            else:
                                for n in get_noninventory_data:
                                    product_list.append(n[2])
                                    
                            if not get_service_data:
                                pass
                            else:
                                for s in get_service_data:
                                    product_list.append(s[2])

                            if not get_bundle_data:
                                pass
                            else:
                                for b in get_bundle_data:
                                    product_list.append(b[2])
                            
                            product_list.insert(0,"Select Product")

                            def view_bundleitems(b):
                                sr_Frame_1.grid_forget()
                                sr_Frame_4 = Frame(tab3_1,)
                                sr_Frame_4.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets3(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget

                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.9


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)

                                    dcanvas.coords("line1",dwidth/13,dheight/2.2,dwidth/1.09,dheight/2.2)
                                    dcanvas.coords("line2",dwidth/13,dheight/1.65,dwidth/1.09,dheight/1.65)
                                    dcanvas.coords("line3",dwidth/13,dheight/1.32,dwidth/1.09,dheight/1.32)
                                    dcanvas.coords("line4",dwidth/13,dheight/1.1,dwidth/1.09,dheight/1.1)
                                    dcanvas.coords("line5",dwidth/13,dheight/0.945,dwidth/1.09,dheight/0.945)
                                    dcanvas.coords("line6",dwidth/13,dheight/2.2,dwidth/13,dheight/0.945)
                                    dcanvas.coords("line7",dwidth/1.09,dheight/2.2,dwidth/1.09,dheight/0.945)
                                    dcanvas.coords("line8",dwidth/5.35,dheight/2.2,dwidth/5.35,dheight/0.945)
                                    dcanvas.coords("line9",dwidth/3.5,dheight/2.2,dwidth/3.5,dheight/0.945)
                                    dcanvas.coords("line10",dwidth/2.28,dheight/2.2,dwidth/2.28,dheight/0.945)
                                    dcanvas.coords("line11",dwidth/1.84,dheight/2.2,dwidth/1.84,dheight/0.945)
                                    dcanvas.coords("line12",dwidth/1.49,dheight/2.2,dwidth/1.49,dheight/0.945)
                                    dcanvas.coords("line13",dwidth/1.25,dheight/2.2,dwidth/1.25,dheight/0.945)

                                    dcanvas.coords("entry1",dwidth/11.5,dheight/1.99)
                                    dcanvas.coords("entry2",dwidth/5.1,dheight/1.99)
                                    dcanvas.coords("entry3",dwidth/3.38,dheight/1.99)
                                    dcanvas.coords("entry4",dwidth/2.249,dheight/1.99)
                                    dcanvas.coords("entry5",dwidth/1.81,dheight/1.99)
                                    dcanvas.coords("entry6",dwidth/1.465,dheight/1.99)

                                    dcanvas.coords("entry7",dwidth/11.5,dheight/1.525)
                                    dcanvas.coords("entry8",dwidth/5.1,dheight/1.525)
                                    dcanvas.coords("entry9",dwidth/3.38,dheight/1.525)
                                    dcanvas.coords("entry10",dwidth/2.249,dheight/1.525)
                                    dcanvas.coords("entry11",dwidth/1.81,dheight/1.525)
                                    dcanvas.coords("entry12",dwidth/1.465,dheight/1.525)

                                    dcanvas.coords("entry13",dwidth/11.5,dheight/1.24)
                                    dcanvas.coords("entry14",dwidth/5.1,dheight/1.24)
                                    dcanvas.coords("entry15",dwidth/3.38,dheight/1.24)
                                    dcanvas.coords("entry16",dwidth/2.249,dheight/1.24)
                                    dcanvas.coords("entry17",dwidth/1.81,dheight/1.24)
                                    dcanvas.coords("entry18",dwidth/1.465,dheight/1.24)

                                    dcanvas.coords("entry19",dwidth/11.5,dheight/1.045)
                                    dcanvas.coords("entry20",dwidth/5.1,dheight/1.045)
                                    dcanvas.coords("entry21",dwidth/3.38,dheight/1.045)
                                    dcanvas.coords("entry22",dwidth/2.249,dheight/1.045)
                                    dcanvas.coords("entry23",dwidth/1.81,dheight/1.045)
                                    dcanvas.coords("entry24",dwidth/1.465,dheight/1.045)

                                    dcanvas.coords("combo1",dwidth/1.165,dheight/1.88)
                                    dcanvas.coords("combo2",dwidth/1.165,dheight/1.46)
                                    dcanvas.coords("combo3",dwidth/1.165,dheight/1.2)
                                    dcanvas.coords("combo4",dwidth/1.165,dheight/1.019)

                                    dcanvas.coords("button2",dwidth/27,dheight/3)
                                
                                sr_Canvas_4 = Canvas(sr_Frame_4,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_4.grid_columnconfigure(0,weight=1)
                                sr_Frame_4.grid_rowconfigure(0,weight=1)

                                sr_Scroll_3 = Scrollbar(sr_Frame_4,orient=VERTICAL)
                                sr_Scroll_3.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_3.config(command=sr_Canvas_4.yview)
                                sr_Canvas_4.bind("<Configure>", responsive_widgets3)
                                sr_Canvas_4.config(yscrollcommand=sr_Scroll_3.set)
                                sr_Canvas_4.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                sr_Canvas_4.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line1"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line2"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line3"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line4"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line5"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line6"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line7"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line8"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line9"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line10"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line11"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line12"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line13"))

                                def bt_goBack():
                                    sr_Frame_4.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_4,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:bt_goBack())
                                sr_Canvas_4.create_window(0,0,window=back_btn,tags=("button2"))

                                global bt1_entry1,bt1_entry4,bt1_entry6,bt1_entry7,bt1_entry8,bt1_entry11,bt1_entry13,bt1_entry14,bt1_entry15,bt1_entry18,bt1_entry20,bt1_entry21,bt1_entry22,bt1_entry25,bt1_entry27,bt1_entry28
                                global bt2_entry1,bt2_entry4,bt2_entry6,bt2_entry7,bt2_entry8,bt2_entry11,bt2_entry13,bt2_entry14,bt2_entry15,bt2_entry18,bt2_entry20,bt2_entry21,bt2_entry22,bt2_entry25,bt2_entry27,bt2_entry28
                                global bt3_entry1,bt3_entry4,bt3_entry6,bt3_entry7,bt3_entry8,bt3_entry11,bt3_entry13,bt3_entry14,bt3_entry15,bt3_entry18,bt3_entry20,bt3_entry21,bt3_entry22,bt3_entry25,bt3_entry27,bt3_entry28
                                global bt4_entry1,bt4_entry4,bt4_entry6,bt4_entry7,bt4_entry8,bt4_entry11,bt4_entry13,bt4_entry14,bt4_entry15,bt4_entry18,bt4_entry20,bt4_entry21,bt4_entry22,bt4_entry25,bt4_entry27,bt4_entry28

                                if b == 1:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry1.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt1_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry1,tags=("entry1"))

                                    bt1_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry2,tags=("entry2"))

                                    bt1_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry3,tags=("entry3"))

                                    bt1_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry4,tags=("entry4"))

                                    bt1_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry5,tags=("entry5"))

                                    bt1_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry6,tags=("entry6"))

                                    bt1_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry7,tags=("combo1"))

                                    bt1_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry8,tags=("entry7"))

                                    bt1_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry9,tags=("entry8"))

                                    bt1_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry10,tags=("entry9"))

                                    bt1_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry11,tags=("entry10"))

                                    bt1_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry12,tags=("entry11"))

                                    bt1_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry13,tags=("entry12"))

                                    bt1_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry14,tags=("combo2"))

                                    bt1_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry15,tags=("entry13"))

                                    bt1_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry16,tags=("entry14"))

                                    bt1_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry17,tags=("entry15"))

                                    bt1_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry18,tags=("entry16"))

                                    bt1_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry19,tags=("entry17"))

                                    bt1_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry20,tags=("entry18"))

                                    bt1_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry21,tags=("combo3"))

                                    bt1_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry22,tags=("entry19"))

                                    bt1_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry23,tags=("entry20"))

                                    bt1_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry24,tags=("entry21"))

                                    bt1_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry25,tags=("entry22"))

                                    bt1_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry26,tags=("entry23"))

                                    bt1_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry27,tags=("entry24"))

                                    bt1_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val1 = (cmt_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql1,get_bundle_val1)
                                        get_bundle_data1 = fbcursor.fetchone()
                                    except:
                                        pass 
                                    try:
                                        bt1_entry1.delete(0,END)
                                        bt1_entry1.insert(0,get_bundle_data1[5])
                                        bt1_entry2.delete(0,END)
                                        bt1_entry2.insert(0,get_bundle_data1[9])
                                        bt1_entry3.delete(0,END)
                                        bt1_entry3.insert(0,get_bundle_data1[13])
                                        bt1_entry4.delete(0,END)
                                        bt1_entry5.delete(0,END)
                                        bt1_entry6.delete(0,END)
                                        if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                            bt1_entry4.insert(0,0)
                                        else:
                                            bt1_entry4.insert(0,get_bundle_data1[17])
                                        if get_bundle_data1[21] == '' or get_bundle_data1[21] is None or get_bundle_data1[21] == NULL:
                                            bt1_entry5.insert(0,0)
                                        else:
                                            bt1_entry5.insert(0,get_bundle_data1[21])
                                        if get_bundle_data1[25] == '' or get_bundle_data1[25] is None or get_bundle_data1[25] == NULL:
                                            bt1_entry6.insert(0,0)
                                        else:
                                            bt1_entry6.insert(0,get_bundle_data1[25])
                                        
                                        bt1_entry7.delete(0,END)
                                        bt1_entry8.delete(0,END)
                                        bt1_entry8.insert(0,get_bundle_data1[6])
                                        bt1_entry9.delete(0,END)
                                        bt1_entry9.insert(0,get_bundle_data1[10])
                                        bt1_entry10.delete(0,END)
                                        bt1_entry10.insert(0,get_bundle_data1[14])
                                        bt1_entry11.delete(0,END)
                                        bt1_entry12.delete(0,END)
                                        bt1_entry13.delete(0,END)
                                        if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[22] == NULL:
                                            bt1_entry11.insert(0,0)
                                        else:
                                            bt1_entry11.insert(0,get_bundle_data1[18])
                                        if get_bundle_data1[22] == '' or get_bundle_data1[22] is None or get_bundle_data1[22] == NULL:
                                            bt1_entry12.insert(0,0)
                                        else:
                                            bt1_entry12.insert(0,get_bundle_data1[22])
                                        if get_bundle_data1[26] == '' or get_bundle_data1[26] is None or get_bundle_data1[26] == NULL:
                                            bt1_entry13.insert(0,0)
                                        else:
                                            bt1_entry13.insert(0,get_bundle_data1[26])

                                        bt1_entry14.delete(0,END)
                                        bt1_entry15.delete(0,END)
                                        bt1_entry15.insert(0,get_bundle_data1[7])
                                        bt1_entry16.delete(0,END)
                                        bt1_entry16.insert(0,get_bundle_data1[11])
                                        bt1_entry17.delete(0,END)
                                        bt1_entry17.insert(0,get_bundle_data1[15])
                                        bt1_entry18.delete(0,END)
                                        bt1_entry19.delete(0,END)
                                        bt1_entry20.delete(0,END)
                                        if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                            bt1_entry18.insert(0,0)
                                        else:
                                            bt1_entry18.insert(0,get_bundle_data1[19])
                                        if get_bundle_data1[23] == '' or get_bundle_data1[23] is None or get_bundle_data1[23] == NULL:
                                            bt1_entry19.insert(0,0)
                                        else:
                                            bt1_entry19.insert(0,get_bundle_data1[23])
                                        if get_bundle_data1[27] == '' or get_bundle_data1[27] is None or get_bundle_data1[27] == NULL:
                                            bt1_entry20.insert(0,0)
                                        else:
                                            bt1_entry20.insert(0,get_bundle_data1[27])
                                        
                                        bt1_entry21.delete(0,END)
                                        bt1_entry22.delete(0,END)
                                        bt1_entry22.insert(0,get_bundle_data1[8])
                                        bt1_entry23.delete(0,END)
                                        bt1_entry23.insert(0,get_bundle_data1[12])
                                        bt1_entry24.delete(0,END)
                                        bt1_entry24.insert(0,get_bundle_data1[16])
                                        bt1_entry25.delete(0,END)
                                        bt1_entry26.delete(0,END)
                                        bt1_entry27.delete(0,END)
                                        bt1_entry28.delete(0,END)
                                        if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                            bt1_entry25.insert(0,0)
                                        else:
                                            bt1_entry25.insert(0,get_bundle_data1[20])
                                        if get_bundle_data1[24] == '' or get_bundle_data1[24] is None or get_bundle_data1[24] == NULL:
                                            bt1_entry26.insert(0,0)
                                        else:
                                            bt1_entry26.insert(0,get_bundle_data1[24])
                                        if get_bundle_data1[28] == '' or get_bundle_data1[28] is None or get_bundle_data1[28] == NULL:
                                            bt1_entry27.insert(0,0)
                                        else:
                                            bt1_entry27.insert(0,get_bundle_data1[28])
                                        
                                        if comp_data[4] == cm_pofsupply.get():
                                            if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                bt1_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry7.insert(0,f'{get_bundle_data1[29]}% GST({get_bundle_data1[29]}%)')
                                            if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                bt1_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry14.insert(0,f'{get_bundle_data1[30]}% GST({get_bundle_data1[30]}%)')
                                            if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                bt1_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry21.insert(0,f'{get_bundle_data1[31]}% GST({get_bundle_data1[31]}%)')
                                            if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                bt1_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry28.insert(0,f'{get_bundle_data1[32]}% GST({get_bundle_data1[32]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                bt1_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry7.insert(0,f'{get_bundle_data1[29]}% IGST({get_bundle_data1[29]}%)')
                                            if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                bt1_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry14.insert(0,f'{get_bundle_data1[30]}% IGST({get_bundle_data1[30]}%)')
                                            if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                bt1_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry21.insert(0,f'{get_bundle_data1[31]}% IGST({get_bundle_data1[31]}%)')
                                            if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                bt1_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry28.insert(0,f'{get_bundle_data1[32]}% IGST({get_bundle_data1[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data1[17]) * int(cmt_entry4.get())
                                        if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data1[18]) * int(cmt_entry4.get())
                                        if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data1[19]) * int(cmt_entry4.get())
                                        if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data1[20]) * int(cmt_entry4.get())
                                        
                                    except:
                                        pass
                                
                                    bt1_entry4.delete(0,END)
                                    bt1_entry4.insert(0,qty1)
                                    bt1_entry11.delete(0,END)
                                    bt1_entry11.insert(0,qty2)
                                    bt1_entry18.delete(0,END)
                                    bt1_entry18.insert(0,qty3)
                                    bt1_entry25.delete(0,END)
                                    bt1_entry25.insert(0,qty4)

                                    tot1 = int(bt1_entry4.get()) * int(float(bt1_entry5.get()))
                                    tot2 = int(bt1_entry11.get()) * int(float(bt1_entry12.get()))
                                    tot3 = int(bt1_entry18.get()) * int(float(bt1_entry19.get()))
                                    tot4 = int(bt1_entry25.get()) * int(float(bt1_entry26.get()))

                                    bt1_entry6.delete(0,END)
                                    bt1_entry6.insert(0,tot1)
                                    bt1_entry13.delete(0,END)
                                    bt1_entry13.insert(0,tot2)
                                    bt1_entry20.delete(0,END)
                                    bt1_entry20.insert(0,tot3)
                                    bt1_entry27.delete(0,END)
                                    bt1_entry27.insert(0,tot4)
                                elif b == 2:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry11.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt2_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry1,tags=("entry1"))

                                    bt2_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry2,tags=("entry2"))

                                    bt2_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry3,tags=("entry3"))

                                    bt2_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry4,tags=("entry4"))

                                    bt2_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry5,tags=("entry5"))

                                    bt2_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry6,tags=("entry6"))

                                    bt2_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry7,tags=("combo1"))

                                    bt2_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry8,tags=("entry7"))

                                    bt2_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry9,tags=("entry8"))

                                    bt2_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry10,tags=("entry9"))

                                    bt2_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry11,tags=("entry10"))

                                    bt2_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry12,tags=("entry11"))

                                    bt2_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry13,tags=("entry12"))

                                    bt2_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry14,tags=("combo2"))

                                    bt2_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry15,tags=("entry13"))

                                    bt2_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry16,tags=("entry14"))

                                    bt2_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry17,tags=("entry15"))

                                    bt2_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry18,tags=("entry16"))

                                    bt2_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry19,tags=("entry17"))

                                    bt2_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry20,tags=("entry18"))

                                    bt2_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry21,tags=("combo3"))

                                    bt2_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry22,tags=("entry19"))

                                    bt2_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry23,tags=("entry20"))

                                    bt2_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry24,tags=("entry21"))

                                    bt2_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry25,tags=("entry22"))

                                    bt2_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry26,tags=("entry23"))

                                    bt2_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry27,tags=("entry24"))

                                    bt2_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val2 = (cmt_entry11.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql2,get_bundle_val2)
                                        get_bundle_data2 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt2_entry1.delete(0,END)
                                        bt2_entry1.insert(0,get_bundle_data2[5])
                                        bt2_entry2.delete(0,END)
                                        bt2_entry2.insert(0,get_bundle_data2[9])
                                        bt2_entry3.delete(0,END)
                                        bt2_entry3.insert(0,get_bundle_data2[13])
                                        bt2_entry4.delete(0,END)
                                        bt2_entry5.delete(0,END)
                                        bt2_entry6.delete(0,END)
                                        if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                            bt2_entry4.insert(0,0)
                                        else:
                                            bt2_entry4.insert(0,get_bundle_data2[17])
                                        if get_bundle_data2[21] == '' or get_bundle_data2[21] is None or get_bundle_data2[21] == NULL:
                                            bt2_entry5.insert(0,0)
                                        else:
                                            bt2_entry5.insert(0,get_bundle_data2[21])
                                        if get_bundle_data2[25] == '' or get_bundle_data2[25] is None or get_bundle_data2[25] == NULL:
                                            bt2_entry6.insert(0,0)
                                        else:
                                            bt2_entry6.insert(0,get_bundle_data2[25])

                                        bt2_entry7.delete(0,END)
                                        bt2_entry8.delete(0,END)
                                        bt2_entry8.insert(0,get_bundle_data2[6])
                                        bt2_entry9.delete(0,END)
                                        bt2_entry9.insert(0,get_bundle_data2[10])
                                        bt2_entry10.delete(0,END)
                                        bt2_entry10.insert(0,get_bundle_data2[14])
                                        bt2_entry11.delete(0,END)
                                        bt2_entry12.delete(0,END)
                                        bt2_entry13.delete(0,END)
                                        if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[22] == NULL:
                                            bt2_entry11.insert(0,0)
                                        else:
                                            bt2_entry11.insert(0,get_bundle_data2[18])
                                        if get_bundle_data2[22] == '' or get_bundle_data2[22] is None or get_bundle_data2[22] == NULL:
                                            bt2_entry12.insert(0,0)
                                        else:
                                            bt2_entry12.insert(0,get_bundle_data2[22])
                                        if get_bundle_data2[26] == '' or get_bundle_data2[26] is None or get_bundle_data2[26] == NULL:
                                            bt2_entry13.insert(0,0)
                                        else:
                                            bt2_entry13.insert(0,get_bundle_data2[26])

                                        bt2_entry14.delete(0,END)
                                        bt2_entry15.delete(0,END)
                                        bt2_entry15.insert(0,get_bundle_data2[7])
                                        bt2_entry16.delete(0,END)
                                        bt2_entry16.insert(0,get_bundle_data2[11])
                                        bt2_entry17.delete(0,END)
                                        bt2_entry17.insert(0,get_bundle_data2[15])
                                        bt2_entry18.delete(0,END)
                                        bt2_entry19.delete(0,END)
                                        bt2_entry20.delete(0,END)
                                        if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                            bt2_entry18.insert(0,0)
                                        else:
                                            bt2_entry18.insert(0,get_bundle_data2[19])
                                        if get_bundle_data2[23] == '' or get_bundle_data2[23] is None or get_bundle_data2[23] == NULL:
                                            bt2_entry19.insert(0,0)
                                        else:
                                            bt2_entry19.insert(0,get_bundle_data2[23])
                                        if get_bundle_data2[27] == '' or get_bundle_data2[27] is None or get_bundle_data2[27] == NULL:
                                            bt2_entry20.insert(0,0)
                                        else:
                                            bt2_entry20.insert(0,get_bundle_data2[27])
                                        bt2_entry21.delete(0,END)
                                        bt2_entry22.delete(0,END)
                                        bt2_entry22.insert(0,get_bundle_data2[8])
                                        bt2_entry23.delete(0,END)
                                        bt2_entry23.insert(0,get_bundle_data2[12])
                                        bt2_entry24.delete(0,END)
                                        bt2_entry24.insert(0,get_bundle_data2[16])
                                        bt2_entry25.delete(0,END)
                                        bt2_entry26.delete(0,END)
                                        bt2_entry27.delete(0,END)
                                        bt2_entry28.delete(0,END)
                                        if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                            bt2_entry25.insert(0,0)
                                        else:
                                            bt2_entry25.insert(0,get_bundle_data2[20])
                                        if get_bundle_data2[24] == '' or get_bundle_data2[24] is None or get_bundle_data2[24] == NULL:
                                            bt2_entry26.insert(0,0)
                                        else:
                                            bt2_entry26.insert(0,get_bundle_data2[24])
                                        if get_bundle_data2[28] == '' or get_bundle_data2[28] is None or get_bundle_data2[28] == NULL:
                                            bt2_entry27.insert(0,0)
                                        else:
                                            bt2_entry27.insert(0,get_bundle_data2[28])

                                        if comp_data[4] == cm_pofsupply.get():
                                            if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                bt2_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry7.insert(0,f'{get_bundle_data2[29]}% GST({get_bundle_data2[29]}%)')
                                            if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                bt2_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry14.insert(0,f'{get_bundle_data2[30]}% GST({get_bundle_data2[30]}%)')
                                            if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                bt2_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry21.insert(0,f'{get_bundle_data2[31]}% GST({get_bundle_data2[31]}%)')
                                            if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                bt2_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry28.insert(0,f'{get_bundle_data2[32]}% GST({get_bundle_data2[32]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                bt2_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry7.insert(0,f'{get_bundle_data2[29]}% IGST({get_bundle_data2[29]}%)')
                                            if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                bt2_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry14.insert(0,f'{get_bundle_data2[30]}% IGST({get_bundle_data2[30]}%)')
                                            if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                bt2_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry21.insert(0,f'{get_bundle_data2[31]}% IGST({get_bundle_data2[31]}%)')
                                            if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                bt2_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry28.insert(0,f'{get_bundle_data2[32]}% IGST({get_bundle_data2[32]}%)')
                                        else:
                                            pass

                                    except:
                                        pass

                                    try:
                                        if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data2[17]) * int(cmt_entry14.get())
                                        if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data2[18]) * int(cmt_entry14.get())
                                        if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data2[19]) * int(cmt_entry14.get())
                                        if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data2[20]) * int(cmt_entry14.get())
                                        
                                    except:
                                        pass

                                    
                                    bt2_entry4.delete(0,END)
                                    bt2_entry4.insert(0,qty1)
                                    bt2_entry11.delete(0,END)
                                    bt2_entry11.insert(0,qty2)
                                    bt2_entry18.delete(0,END)
                                    bt2_entry18.insert(0,qty3)
                                    bt2_entry25.delete(0,END)
                                    bt2_entry25.insert(0,qty4)

                                    tot1 = int(bt2_entry4.get()) * int(float(bt2_entry5.get()))
                                    tot2 = int(bt2_entry11.get()) * int(float(bt2_entry12.get()))
                                    tot3 = int(bt2_entry18.get()) * int(float(bt2_entry19.get()))
                                    tot4 = int(bt2_entry25.get()) * int(float(bt2_entry26.get()))

                                    bt2_entry6.delete(0,END)
                                    bt2_entry6.insert(0,tot1)
                                    bt2_entry13.delete(0,END)
                                    bt2_entry13.insert(0,tot2)
                                    bt2_entry20.delete(0,END)
                                    bt2_entry20.insert(0,tot3)
                                    bt2_entry27.delete(0,END)
                                    bt2_entry27.insert(0,tot4)
                                elif b == 3:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry18.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt3_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry1,tags=("entry1"))

                                    bt3_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry2,tags=("entry2"))

                                    bt3_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry3,tags=("entry3"))

                                    bt3_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry4,tags=("entry4"))

                                    bt3_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry5,tags=("entry5"))

                                    bt3_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry6,tags=("entry6"))

                                    bt3_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry7,tags=("combo1"))

                                    bt3_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry8,tags=("entry7"))

                                    bt3_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry9,tags=("entry8"))

                                    bt3_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry10,tags=("entry9"))

                                    bt3_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry11,tags=("entry10"))

                                    bt3_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry12,tags=("entry11"))

                                    bt3_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry13,tags=("entry12"))

                                    bt3_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry14,tags=("combo2"))

                                    bt3_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry15,tags=("entry13"))

                                    bt3_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry16,tags=("entry14"))

                                    bt3_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry17,tags=("entry15"))

                                    bt3_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry18,tags=("entry16"))

                                    bt3_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry19,tags=("entry17"))

                                    bt3_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry20,tags=("entry18"))

                                    bt3_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry21,tags=("combo3"))

                                    bt3_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry22,tags=("entry19"))

                                    bt3_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry23,tags=("entry20"))

                                    bt3_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry24,tags=("entry21"))

                                    bt3_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry25,tags=("entry22"))

                                    bt3_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry26,tags=("entry23"))

                                    bt3_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry27,tags=("entry24"))

                                    bt3_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val3 = (cmt_entry18.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql3,get_bundle_val3)
                                        get_bundle_data3 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt3_entry1.delete(0,END)
                                        bt3_entry1.insert(0,get_bundle_data3[5])
                                        bt3_entry2.delete(0,END)
                                        bt3_entry2.insert(0,get_bundle_data3[9])
                                        bt3_entry3.delete(0,END)
                                        bt3_entry3.insert(0,get_bundle_data3[13])
                                        bt3_entry4.delete(0,END)
                                        bt3_entry5.delete(0,END)
                                        bt3_entry6.delete(0,END)
                                        if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                            bt3_entry4.insert(0,0)
                                        else:
                                            bt3_entry4.insert(0,get_bundle_data3[17])
                                        if get_bundle_data3[21] == '' or get_bundle_data3[21] is None or get_bundle_data3[21] == NULL:
                                            bt3_entry5.insert(0,0)
                                        else:
                                            bt3_entry5.insert(0,get_bundle_data3[21])
                                        if get_bundle_data3[25] == '' or get_bundle_data3[25] is None or get_bundle_data3[25] == NULL:
                                            bt3_entry6.insert(0,0)
                                        else:
                                            bt3_entry6.insert(0,get_bundle_data3[25])
                                        bt3_entry7.delete(0,END)
                                        bt3_entry8.delete(0,END)
                                        bt3_entry8.insert(0,get_bundle_data3[6])
                                        bt3_entry9.delete(0,END)
                                        bt3_entry9.insert(0,get_bundle_data3[10])
                                        bt3_entry10.delete(0,END)
                                        bt3_entry10.insert(0,get_bundle_data3[14])
                                        bt3_entry11.delete(0,END)
                                        bt3_entry12.delete(0,END)
                                        bt3_entry13.delete(0,END)
                                        if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[22] == NULL:
                                            bt3_entry11.insert(0,0)
                                        else:
                                            bt3_entry11.insert(0,get_bundle_data3[18])
                                        if get_bundle_data3[22] == '' or get_bundle_data3[22] is None or get_bundle_data3[22] == NULL:
                                            bt3_entry12.insert(0,0)
                                        else:
                                            bt3_entry12.insert(0,get_bundle_data3[22])
                                        if get_bundle_data3[26] == '' or get_bundle_data3[26] is None or get_bundle_data3[26] == NULL:
                                            bt3_entry13.insert(0,0)
                                        else:
                                            bt3_entry13.insert(0,get_bundle_data3[26])

                                        bt3_entry14.delete(0,END)
                                        bt3_entry15.delete(0,END)
                                        bt3_entry15.insert(0,get_bundle_data3[7])
                                        bt3_entry16.delete(0,END)
                                        bt3_entry16.insert(0,get_bundle_data3[11])
                                        bt3_entry17.delete(0,END)
                                        bt3_entry17.insert(0,get_bundle_data3[15])
                                        bt3_entry18.delete(0,END)
                                        bt3_entry19.delete(0,END)
                                        bt3_entry20.delete(0,END)
                                        if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                            bt3_entry18.insert(0,0)
                                        else:
                                            bt3_entry18.insert(0,get_bundle_data3[19])
                                        if get_bundle_data3[23] == '' or get_bundle_data3[23] is None or get_bundle_data3[23] == NULL:
                                            bt3_entry19.insert(0,0)
                                        else:
                                            bt3_entry19.insert(0,get_bundle_data3[23])
                                        if get_bundle_data3[27] == '' or get_bundle_data3[27] is None or get_bundle_data3[27] == NULL:
                                            bt3_entry20.insert(0,0)
                                        else:
                                            bt3_entry20.insert(0,get_bundle_data3[27])

                                        bt3_entry21.delete(0,END)
                                        bt3_entry22.delete(0,END)
                                        bt3_entry22.insert(0,get_bundle_data3[8])
                                        bt3_entry23.delete(0,END)
                                        bt3_entry23.insert(0,get_bundle_data3[12])
                                        bt3_entry24.delete(0,END)
                                        bt3_entry24.insert(0,get_bundle_data3[16])
                                        bt3_entry25.delete(0,END)
                                        bt3_entry26.delete(0,END)
                                        bt3_entry27.delete(0,END)
                                        bt3_entry28.delete(0,END)
                                        if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                            bt3_entry25.insert(0,0)
                                        else:
                                            bt3_entry25.insert(0,get_bundle_data3[20])
                                        if get_bundle_data3[24] == '' or get_bundle_data3[24] is None or get_bundle_data3[24] == NULL:
                                            bt3_entry26.insert(0,0)
                                        else:
                                            bt3_entry26.insert(0,get_bundle_data3[24])
                                        if get_bundle_data3[28] == '' or get_bundle_data3[28] is None or get_bundle_data3[28] == NULL:
                                            bt3_entry27.insert(0,0)
                                        else:
                                            bt3_entry27.insert(0,get_bundle_data3[28])


                                        if comp_data[4] == cm_pofsupply.get():
                                            if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                bt3_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry7.insert(0,f'{get_bundle_data3[29]}% GST({get_bundle_data3[29]}%)')
                                            if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                bt3_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry14.insert(0,f'{get_bundle_data3[30]}% GST({get_bundle_data3[30]}%)')
                                            if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                bt3_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry21.insert(0,f'{get_bundle_data3[31]}% GST({get_bundle_data3[31]}%)')
                                            if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                bt3_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry28.insert(0,f'{get_bundle_data3[32]}% GST({get_bundle_data3[32]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                bt3_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry7.insert(0,f'{get_bundle_data3[29]}% IGST({get_bundle_data3[29]}%)')
                                            if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                bt3_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry14.insert(0,f'{get_bundle_data3[30]}% IGST({get_bundle_data3[30]}%)')
                                            if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                bt3_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry21.insert(0,f'{get_bundle_data3[31]}% IGST({get_bundle_data3[31]}%)')
                                            if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                bt3_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry28.insert(0,f'{get_bundle_data3[32]}% IGST({get_bundle_data3[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data3[17]) * int(cmt_entry21.get())
                                        if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data3[18]) * int(cmt_entry21.get())
                                        if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data3[19]) * int(cmt_entry21.get())
                                        if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data3[20]) * int(cmt_entry21.get())
                                        
                                    except:
                                        pass
                                    
                                    bt3_entry4.delete(0,END)
                                    bt3_entry4.insert(0,qty1)
                                    bt3_entry11.delete(0,END)
                                    bt3_entry11.insert(0,qty2)
                                    bt3_entry18.delete(0,END)
                                    bt3_entry18.insert(0,qty3)
                                    bt3_entry25.delete(0,END)
                                    bt3_entry25.insert(0,qty4)

                                    tot1 = int(bt3_entry4.get()) * int(float(bt3_entry5.get()))
                                    tot2 = int(bt3_entry11.get()) * int(float(bt3_entry12.get()))
                                    tot3 = int(bt3_entry18.get()) * int(float(bt3_entry19.get()))
                                    tot4 = int(bt3_entry25.get()) * int(float(bt3_entry26.get()))

                                    bt3_entry6.delete(0,END)
                                    bt3_entry6.insert(0,tot1)
                                    bt3_entry13.delete(0,END)
                                    bt3_entry13.insert(0,tot2)
                                    bt3_entry20.delete(0,END)
                                    bt3_entry20.insert(0,tot3)
                                    bt3_entry27.delete(0,END)
                                    bt3_entry27.insert(0,tot4)
                                else:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry25.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt4_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry1,tags=("entry1"))

                                    bt4_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry2,tags=("entry2"))

                                    bt4_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry3,tags=("entry3"))

                                    bt4_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry4,tags=("entry4"))

                                    bt4_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry5,tags=("entry5"))

                                    bt4_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry6,tags=("entry6"))

                                    bt4_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry7,tags=("combo1"))

                                    bt4_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry8,tags=("entry7"))

                                    bt4_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry9,tags=("entry8"))

                                    bt4_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry10,tags=("entry9"))

                                    bt4_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry11,tags=("entry10"))

                                    bt4_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry12,tags=("entry11"))

                                    bt4_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry13,tags=("entry12"))

                                    bt4_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry14,tags=("combo2"))

                                    bt4_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry15,tags=("entry13"))

                                    bt4_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry16,tags=("entry14"))

                                    bt4_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry17,tags=("entry15"))

                                    bt4_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry18,tags=("entry16"))

                                    bt4_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry19,tags=("entry17"))

                                    bt4_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry20,tags=("entry18"))

                                    bt4_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry21,tags=("combo3"))

                                    bt4_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry22,tags=("entry19"))

                                    bt4_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry23,tags=("entry20"))

                                    bt4_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry24,tags=("entry21"))

                                    bt4_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry25,tags=("entry22"))

                                    bt4_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry26,tags=("entry23"))

                                    bt4_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry27,tags=("entry24"))

                                    bt4_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val4 = (cmt_entry25.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql4,get_bundle_val4)
                                        get_bundle_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt4_entry1.delete(0,END)
                                        bt4_entry1.insert(0,get_bundle_data4[5])
                                        bt4_entry2.delete(0,END)
                                        bt4_entry2.insert(0,get_bundle_data4[9])
                                        bt4_entry3.delete(0,END)
                                        bt4_entry3.insert(0,get_bundle_data4[13])
                                        bt4_entry4.delete(0,END)
                                        bt4_entry5.delete(0,END)
                                        bt4_entry6.delete(0,END)
                                        if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                            bt4_entry4.insert(0,0)
                                        else:
                                            bt4_entry4.insert(0,get_bundle_data4[17])
                                        if get_bundle_data4[21] == '' or get_bundle_data4[21] is None or get_bundle_data4[21] == NULL:
                                            bt4_entry5.insert(0,0)
                                        else:
                                            bt4_entry5.insert(0,get_bundle_data4[21])
                                        if get_bundle_data4[25] == '' or get_bundle_data4[25] is None or get_bundle_data4[25] == NULL:
                                            bt4_entry6.insert(0,0)
                                        else:
                                            bt4_entry6.insert(0,get_bundle_data4[25])
                                        bt4_entry7.delete(0,END)
                                        bt4_entry8.delete(0,END)
                                        bt4_entry8.insert(0,get_bundle_data4[6])
                                        bt4_entry9.delete(0,END)
                                        bt4_entry9.insert(0,get_bundle_data4[10])
                                        bt4_entry10.delete(0,END)
                                        bt4_entry10.insert(0,get_bundle_data4[14])
                                        bt4_entry11.delete(0,END)
                                        bt4_entry12.delete(0,END)
                                        bt4_entry13.delete(0,END)
                                        if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[22] == NULL:
                                            bt4_entry11.insert(0,0)
                                        else:
                                            bt4_entry11.insert(0,get_bundle_data4[18])
                                        if get_bundle_data4[22] == '' or get_bundle_data4[22] is None or get_bundle_data4[22] == NULL:
                                            bt4_entry12.insert(0,0)
                                        else:
                                            bt4_entry12.insert(0,get_bundle_data4[22])
                                        if get_bundle_data4[26] == '' or get_bundle_data4[26] is None or get_bundle_data4[26] == NULL:
                                            bt4_entry13.insert(0,0)
                                        else:
                                            bt4_entry13.insert(0,get_bundle_data4[26])
                                        bt4_entry14.delete(0,END)
                                        bt4_entry15.delete(0,END)
                                        bt4_entry15.insert(0,get_bundle_data4[7])
                                        bt4_entry16.delete(0,END)
                                        bt4_entry16.insert(0,get_bundle_data4[11])
                                        bt4_entry17.delete(0,END)
                                        bt4_entry17.insert(0,get_bundle_data4[15])
                                        bt4_entry18.delete(0,END)
                                        bt4_entry19.delete(0,END)
                                        bt4_entry20.delete(0,END)
                                        if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                            bt4_entry18.insert(0,0)
                                        else:
                                            bt4_entry18.insert(0,get_bundle_data4[19])
                                        if get_bundle_data4[23] == '' or get_bundle_data4[23] is None or get_bundle_data4[23] == NULL:
                                            bt4_entry19.insert(0,0)
                                        else:
                                            bt4_entry19.insert(0,get_bundle_data4[23])
                                        if get_bundle_data4[27] == '' or get_bundle_data4[27] is None or get_bundle_data4[27] == NULL:
                                            bt4_entry20.insert(0,0)
                                        else:
                                            bt4_entry20.insert(0,get_bundle_data4[27])
                                        bt4_entry21.delete(0,END)
                                        bt4_entry22.delete(0,END)
                                        bt4_entry22.insert(0,get_bundle_data4[8])
                                        bt4_entry23.delete(0,END)
                                        bt4_entry23.insert(0,get_bundle_data4[12])
                                        bt4_entry24.delete(0,END)
                                        bt4_entry24.insert(0,get_bundle_data4[16])
                                        bt4_entry25.delete(0,END)
                                        bt4_entry26.delete(0,END)
                                        bt4_entry27.delete(0,END)
                                        bt4_entry28.delete(0,END)
                                        if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                            bt4_entry25.insert(0,0)
                                        else:
                                            bt4_entry25.insert(0,get_bundle_data4[20])
                                        if get_bundle_data4[24] == '' or get_bundle_data4[24] is None or get_bundle_data4[24] == NULL:
                                            bt4_entry26.insert(0,0)
                                        else:
                                            bt4_entry26.insert(0,get_bundle_data4[24])
                                        if get_bundle_data4[28] == '' or get_bundle_data4[28] is None or get_bundle_data4[28] == NULL:
                                            bt4_entry27.insert(0,0)
                                        else:
                                            bt4_entry27.insert(0,get_bundle_data4[28])

                                        if comp_data[4] == cm_pofsupply.get():
                                            if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                bt4_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry7.insert(0,f'{get_bundle_data4[29]}% GST({get_bundle_data4[29]}%)')
                                            if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                bt4_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry14.insert(0,f'{get_bundle_data4[30]}% GST({get_bundle_data4[30]}%)')
                                            if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                bt4_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry21.insert(0,f'{get_bundle_data4[31]}% GST({get_bundle_data4[31]}%)')
                                            if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                bt4_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry28.insert(0,f'{get_bundle_data4[32]}% GST({get_bundle_data4[32]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                bt4_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry7.insert(0,f'{get_bundle_data4[29]}% IGST({get_bundle_data4[29]}%)')
                                            if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                bt4_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry14.insert(0,f'{get_bundle_data4[30]}% IGST({get_bundle_data4[30]}%)')
                                            if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                bt4_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry21.insert(0,f'{get_bundle_data4[31]}% IGST({get_bundle_data4[31]}%)')
                                            if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                bt4_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry28.insert(0,f'{get_bundle_data4[32]}% IGST({get_bundle_data4[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data4[17]) * int(cmt_entry28.get())
                                        if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data4[18]) * int(cmt_entry28.get())
                                        if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data4[19]) * int(cmt_entry28.get())
                                        if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data4[20]) * int(cmt_entry28.get())
                                        
                                    except:
                                        pass

                                    bt4_entry4.delete(0,END)
                                    bt4_entry4.insert(0,qty1)
                                    bt4_entry11.delete(0,END)
                                    bt4_entry11.insert(0,qty2)
                                    bt4_entry18.delete(0,END)
                                    bt4_entry18.insert(0,qty3)
                                    bt4_entry25.delete(0,END)
                                    bt4_entry25.insert(0,qty4)

                                    tot1 = int(bt4_entry4.get()) * int(float(bt4_entry5.get()))
                                    tot2 = int(bt4_entry11.get()) * int(float(bt4_entry12.get()))
                                    tot3 = int(bt4_entry18.get()) * int(float(bt4_entry19.get()))
                                    tot4 = int(bt4_entry25.get()) * int(float(bt4_entry26.get()))

                                    bt4_entry6.delete(0,END)
                                    bt4_entry6.insert(0,tot1)
                                    bt4_entry13.delete(0,END)
                                    bt4_entry13.insert(0,tot2)
                                    bt4_entry20.delete(0,END)
                                    bt4_entry20.insert(0,tot3)
                                    bt4_entry27.delete(0,END)
                                    bt4_entry27.insert(0,tot4)

                            #------------------------------------------
                            
                            def cm_fetch_proDetails1(event):
                                global get_pro_data3
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (cmt_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (cmt_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                    get_pro_val2 = (cmt_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                    get_pro_data2 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (cmt_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry21",state='normal')
                                        sr_Canvas_1.itemconfig("entry22",state='normal')
                                        sr_Canvas_1.itemconfig("combo6",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label67",state='normal')
                                        cm_label31.config(text="Available Qty : " + get_pro_data[7])
                                        cmt_entry2.delete(0,END)
                                        cmt_entry2.insert(0,get_pro_data[4])
                                        cmt_entry3.delete(0,END)
                                        cmt_entry3.insert(0,get_pro_data[11])
                                        cmt_entry5.delete(0,END)
                                        cmt_entry5.insert(0,get_pro_data[12])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry21",state='normal')
                                        sr_Canvas_1.itemconfig("entry22",state='normal')
                                        sr_Canvas_1.itemconfig("combo6",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label67",state='normal')
                                        cm_label31.config(text="Available Qty : " + get_pro_data1[17])
                                        cmt_entry2.delete(0,END)
                                        cmt_entry2.insert(0,get_pro_data1[4])
                                        cmt_entry3.delete(0,END)
                                        cmt_entry3.insert(0,get_pro_data1[7])
                                        cmt_entry5.delete(0,END)
                                        cmt_entry5.insert(0,get_pro_data1[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data2 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry21",state='normal')
                                        sr_Canvas_1.itemconfig("entry22",state='normal')
                                        sr_Canvas_1.itemconfig("combo6",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                        sr_Canvas_1.itemconfig("label67",state='hidden')
                                    except:
                                        pass

                                    try:
                                        cmt_entry2.delete(0,END)
                                        cmt_entry2.insert(0,get_pro_data2[4])
                                        cmt_entry3.delete(0,END)
                                        cmt_entry3.insert(0,get_pro_data2[7])
                                        cmt_entry5.delete(0,END)
                                        cmt_entry5.insert(0,get_pro_data2[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry7.delete(0,END)
                                            cmt_entry7.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                else:
                                    try:
                                        cmt_entry2.delete(0,END)
                                        cmt_entry2.insert(0,get_pro_data3[3])
                                        cmt_entry3.delete(0,END)
                                        cmt_entry3.insert(0,get_pro_data3[4])
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry21",state='hidden')
                                        sr_Canvas_1.itemconfig("entry22",state='hidden')
                                        sr_Canvas_1.itemconfig("combo6",state='hidden')
                                        sr_Canvas_1.itemconfig("button12",state='normal')
                                        sr_Canvas_1.itemconfig("label67",state='hidden')
                                    except:
                                        pass

                                    view_bundleitems(b=1)
                                    
                                
                            cmt_entry1 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry1["values"] = product_list
                            cmt_entry1.current(0)
                            cmt_entry1.bind("<<ComboboxSelected>>",cm_fetch_proDetails1)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry1,tags=("combo5"))

                            cmt_entry2 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry2,tags=("entry18"))

                            cmt_entry3 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry3,tags=("entry19"))

                            def cmt_calculateTotal1(event,s):
                                # try:
                                    if s == 1:
                                        name = cmt_entry1.get()
                                        qty = cmt_entry4.get()
                                    elif s == 2:
                                        name = cmt_entry11.get()
                                        qty = cmt_entry14.get()
                                    elif s == 3:
                                        name = cmt_entry18.get()
                                        qty = cmt_entry21.get()
                                    elif s == 4:
                                        name = cmt_entry25.get()
                                        qty = cmt_entry28.get()


                                    if qty != 0:
                                        global tax_tot1,tax_tot2,tax_tot3,tax_tot4,b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4
                                        tax_tot1 = 0.0
                                        tax_tot2 = 0.0
                                        tax_tot3 = 0.0
                                        tax_tot4 = 0.0

                                        b1tax_tot1 = 0.0
                                        b1tax_tot2 = 0.0
                                        b1tax_tot3 = 0.0
                                        b1tax_tot4 = 0.0

                                        b2tax_tot1 = 0.0
                                        b2tax_tot2 = 0.0
                                        b2tax_tot3 = 0.0
                                        b2tax_tot4 = 0.0

                                        b3tax_tot1 = 0.0
                                        b3tax_tot2 = 0.0
                                        b3tax_tot3 = 0.0
                                        b3tax_tot4 = 0.0

                                        b4tax_tot1 = 0.0
                                        b4tax_tot2 = 0.0
                                        b4tax_tot3 = 0.0
                                        b4tax_tot4 = 0.0
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()

                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()

                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()

                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass
                                        if s == 1:
                                            if get_pro_data is not None:
                                                tot = float(get_pro_data[12]) * int(qty)
                                                cmt_entry6.delete(0,END)
                                                cmt_entry6.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = float(get_pro_data1[8]) * int(qty)
                                                cmt_entry6.delete(0,END)
                                                cmt_entry6.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                view_bundleitems(b=1)
                                        elif s == 2:
                                            if get_pro_data is not None:
                                                tot = float(get_pro_data[12]) * int(qty)
                                                cmt_entry16.delete(0,END)
                                                cmt_entry16.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = float(get_pro_data1[8]) * int(qty)
                                                cmt_entry16.delete(0,END)
                                                cmt_entry16.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                view_bundleitems(b=2)
                                        elif s == 3:
                                            if get_pro_data is not None:
                                                tot = float(get_pro_data[12]) * int(qty)
                                                cmt_entry23.delete(0,END)
                                                cmt_entry23.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = float(get_pro_data1[8]) * int(qty)
                                                cmt_entry23.delete(0,END)
                                                cmt_entry23.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                view_bundleitems(b=3)
                                        elif s == 4:
                                            if get_pro_data is not None:
                                                tot = float(get_pro_data[12]) * int(qty)
                                                cmt_entry30.delete(0,END)
                                                cmt_entry30.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = float(get_pro_data1[8]) * int(qty)
                                                cmt_entry30.delete(0,END)
                                                cmt_entry30.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                view_bundleitems(b=4)

                                        cmt_entry8.delete(0,END)
                                        cmt_entry9.delete(0,END)
                                        cmt_entry10.delete(0,END)

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2

                                        #product gst -----------------------------
                                        try:
                                            gst_value1 = split_gst(cmt_entry7.get())
                                        except:
                                            pass
                                        try:
                                            gst_value2 = split_gst(cmt_entry17.get())
                                        except:
                                            pass
                                        try:
                                            gst_value3 = split_gst(cmt_entry24.get())
                                        except:
                                            pass
                                        try:
                                            gst_value4 = split_gst(cmt_entry31.get())
                                        except:
                                            pass

                                        #bundle gst ------------------------------ 
                                        try:
                                            bgst_value1 = split_gst(bt1_entry7.get())
                                            bgst_value2 = split_gst(bt1_entry14.get())
                                            bgst_value3 = split_gst(bt1_entry21.get())
                                            bgst_value4 = split_gst(bt1_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value5 = split_gst(bt2_entry7.get())
                                            bgst_value6 = split_gst(bt2_entry14.get())
                                            bgst_value7 = split_gst(bt2_entry21.get())
                                            bgst_value8 = split_gst(bt2_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value9 = split_gst(bt3_entry7.get())
                                            bgst_value10 = split_gst(bt3_entry14.get())
                                            bgst_value11 = split_gst(bt3_entry21.get())
                                            bgst_value12 = split_gst(bt3_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value13 = split_gst(bt4_entry7.get())
                                            bgst_value14 = split_gst(bt4_entry14.get())
                                            bgst_value15 = split_gst(bt4_entry21.get())
                                            bgst_value16 = split_gst(bt4_entry28.get())
                                        except:
                                            pass

                                        get_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                        get_bun_val = (comp_data[0],)
                                        fbcursor.execute(get_bun_sql,get_bun_val)
                                        get_bun_data = fbcursor.fetchall()
                                        
                                        b_list = []
                                        for g in get_bun_data:
                                            b_list.append(g[0])

                                        #=====================================================================================
                                        #Bundle1--------------------------------------------
                                        try:
                                            if bt1_entry7.get() == "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                pass
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                tax_total1 = b1tax_tot1
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                    b1tax_tot3 = 0
                                                else:
                                                    b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() != "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                    b1tax_tot3 = 0
                                                else:
                                                    b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100

                                                if bgst_value4[0] == "0" or bt1_entry28.get() == "Exempt GST(0%)" or bt1_entry28.get() == "Out of Scope(0%)":
                                                    b1tax_tot4 = 0
                                                else:
                                                    b1tax_tot4 = (float(bt1_entry27.get()) * float(float((bgst_value4[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3 + b1tax_tot4
                                        except:
                                            pass

                                        #Bundle2--------------------------------------------
                                        try:
                                            if bt2_entry7.get() == "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                pass
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                tax_total2 = b2tax_tot1
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                    b2tax_tot3 = 0
                                                else:
                                                    b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() != "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                    b2tax_tot3 = 0
                                                else:
                                                    b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100

                                                if bgst_value8[0] == "0" or bt2_entry28.get() == "Exempt GST(0%)" or bt2_entry28.get() == "Out of Scope(0%)":
                                                    b2tax_tot4 = 0
                                                else:
                                                    b2tax_tot4 = (float(bt2_entry27.get()) * float(float((bgst_value8[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3 + b2tax_tot4
                                        except:
                                            pass

                                        #Bundle3--------------------------------------------
                                        try:
                                            if bt3_entry7.get() == "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                pass
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                tax_total3 = b3tax_tot1
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                    b3tax_tot3 = 0
                                                else:
                                                    b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() != "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                    b3tax_tot3 = 0
                                                else:
                                                    b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100

                                                if bgst_value12[0] == "0" or bt3_entry28.get() == "Exempt GST(0%)" or bt3_entry28.get() == "Out of Scope(0%)":
                                                    b3tax_tot4 = 0
                                                else:
                                                    b3tax_tot4 = (float(bt3_entry27.get()) * float(float((bgst_value12[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3 + b3tax_tot4
                                        except:
                                            pass

                                        #Bundle4--------------------------------------------
                                        try:
                                            if bt4_entry7.get() == "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                pass
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                tax_total4 = b4tax_tot1
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                    b4tax_tot3 = 0
                                                else:
                                                    b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() != "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                    b4tax_tot3 = 0
                                                else:
                                                    b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100

                                                if bgst_value16[0] == "0" or bt4_entry28.get() == "Exempt GST(0%)" or bt4_entry28.get() == "Out of Scope(0%)":
                                                    b4tax_tot4 = 0
                                                else:
                                                    b4tax_tot4 = (float(bt4_entry27.get()) * float(float((bgst_value16[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3 + b4tax_tot4
                                        except:
                                            pass

                                        #=============================================================================================

                                        #All products ----------------------------------------------------------------------------------------
                                        if cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + float(cmt_entry23.get()) + float(cmt_entry30.get()))
                                            if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                            cmt_entry9.insert(0,ptax_total)

                                        #All bundles -----------------------------------------------------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + b2_tot + b3_tot + b4_tot)

                                            cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total3 + tax_total4)

                                        #First row bundle-----------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                            #Rest products--------------------------------------
                                            if cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":                                               
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":                                              
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            cmt_entry9.insert(0,tax_total1 + ptax_total)

                                        #First and Second row Bundle -------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + b2_tot + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                            #Rest products--------------------------------------
                                            if cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4

                                            cmt_entry9.insert(0,tax_total1 + tax_total2 + ptax_total)

                                        #First,Second and Third row Bundle -------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + b2_tot + b3_tot + float(cmt_entry30.get()))

                                            #Rest products--------------------------------------
                                            if cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry31.get() != "Choose":
                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total3 + ptax_total)
                                        
                                        #Second row Bundle------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                            if cmt_entry7.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            cmt_entry9.insert(0,tax_total2 + ptax_total)

                                        #Second,Third row Bundle------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + b3_tot + float(cmt_entry30.get()))

                                            if cmt_entry7.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            cmt_entry9.insert(0,tax_total2 + tax_total3 + ptax_total)

                                        #Second,Fourth row Bundle------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + float(cmt_entry23.get()) + b4_tot)

                                            if cmt_entry7.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            cmt_entry9.insert(0,tax_total2 + tax_total4 + ptax_total)

                                        #Second,Third and Fourth row Bundle------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + b3_tot + b4_tot)

                                            if cmt_entry7.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            cmt_entry9.insert(0,tax_total2 + tax_total3 + tax_total4 + ptax_total)
                                        
                                        #Third row Bundle---------------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + b3_tot + float(cmt_entry30.get()))

                                            if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            
                                            cmt_entry9.insert(0,tax_total3 + ptax_total)

                                        #Third,first row Bundle---------------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + b3_tot + float(cmt_entry30.get()))

                                            if cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry17.get() != "Choose" and cmt_entry31.get() == "Choose":                                            
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cmt_entry17.get() != "Choose" and cmt_entry31.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            
                                            cmt_entry9.insert(0,tax_total1 + tax_total3 + ptax_total)

                                        #Third,fourth row Bundle---------------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + b3_tot + b4_tot)

                                            if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            
                                            cmt_entry9.insert(0,tax_total3 + tax_total4 + ptax_total)

                                        #Third,first and fourth row Bundle---------------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + b3_tot + b4_tot)

                                            if cmt_entry17.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry17.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            
                                            cmt_entry9.insert(0,tax_total1 + tax_total3 + tax_total4 + ptax_total)

                                        #Fourth row Bundle -----------------------------------------------------
                                        elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + float(cmt_entry23.get()) + b4_tot)

                                            if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            cmt_entry9.insert(0,tax_total4 + ptax_total)

                                        #Fourth,First row Bundle -----------------------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + float(cmt_entry23.get()) + b4_tot)

                                            if cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose":                                            
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            cmt_entry9.insert(0,tax_total1 + tax_total4 + ptax_total)

                                        #Fourth,First and Second row Bundle -----------------------------------------------------
                                        elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cmt_entry8.insert(0,b1_tot + b2_tot + float(cmt_entry23.get()) + b4_tot)

                                            if cmt_entry24.get() == "Choose":
                                                ptax_total = 0
                                            elif cmt_entry24.get() != "Choose":
                                                if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total4 + ptax_total)
                                        cmt_entry10.insert(0,float(cmt_entry8.get()) + float(float(cmt_entry9.get())))
                                    else:
                                        pass
                                # except:
                                #     pass

                            cmt_entry4 = Spinbox(sr_Canvas_1,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            cmt_entry4.bind("<Key>",lambda event,sp = 1:cmt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry4,tags=("entry20"))

                            cmt_entry5 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry5,tags=("entry21"))

                            cmt_entry6 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            cmt_entry6.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry6,tags=("entry22"))

                            cmt_entry7 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                            cmt_entry7["values"] = cplace_gstlist
                            cmt_entry7.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry7,tags=("combo6"))                      

                            cmt_button1 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b1 = 1:view_bundleitems(b1))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button1,tags=("button12"))

                            cm_label28 = Label(sr_Canvas_1,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label28,tags=('label64'))

                            def cm_fetch_proDetails2(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (cmt_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (cmt_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                    get_pro_val2 = (cmt_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                    get_pro_data2 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (cmt_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #----------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry42",state='normal')
                                        sr_Canvas_1.itemconfig("entry43",state='normal')
                                        sr_Canvas_1.itemconfig("combo15",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label68",state='normal')
                                        cm_label32.config(text="Available Qty : " + get_pro_data[7])
                                        cmt_entry12.delete(0,END)
                                        cmt_entry12.insert(0,get_pro_data[4])
                                        cmt_entry13.delete(0,END)
                                        cmt_entry13.insert(0,get_pro_data[11])
                                        cmt_entry15.delete(0,END)
                                        cmt_entry15.insert(0,get_pro_data[12])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry42",state='normal')
                                        sr_Canvas_1.itemconfig("entry43",state='normal')
                                        sr_Canvas_1.itemconfig("combo15",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label68",state='normal')
                                        cm_label32.config(text="Available Qty : " + get_pro_data1[17])
                                        cmt_entry12.delete(0,END)
                                        cmt_entry12.insert(0,get_pro_data1[4])
                                        cmt_entry13.delete(0,END)
                                        cmt_entry13.insert(0,get_pro_data1[7])
                                        cmt_entry15.delete(0,END)
                                        cmt_entry15.insert(0,get_pro_data1[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data2 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry42",state='normal')
                                        sr_Canvas_1.itemconfig("entry43",state='normal')
                                        sr_Canvas_1.itemconfig("combo15",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                        sr_Canvas_1.itemconfig("label68",state='hidden')
                                    except:
                                        pass
                                    try:
                                        cmt_entry12.delete(0,END)
                                        cmt_entry12.insert(0,get_pro_data2[4])
                                        cmt_entry13.delete(0,END)
                                        cmt_entry13.insert(0,get_pro_data2[7])
                                        cmt_entry15.delete(0,END)
                                        cmt_entry15.insert(0,get_pro_data2[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry17.delete(0,END)
                                            cmt_entry17.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                else:
                                    try:
                                        cmt_entry12.delete(0,END)
                                        cmt_entry12.insert(0,get_pro_data3[3])
                                        cmt_entry13.delete(0,END)
                                        cmt_entry13.insert(0,get_pro_data3[4])
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry42",state='hidden')
                                        sr_Canvas_1.itemconfig("entry43",state='hidden')
                                        sr_Canvas_1.itemconfig("combo15",state='hidden')
                                        sr_Canvas_1.itemconfig("button13",state='normal')
                                        sr_Canvas_1.itemconfig("label68",state='hidden')
                                    except:
                                        pass

                                    view_bundleitems(b=2)

                            cmt_entry11 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry11["values"] = product_list
                            cmt_entry11.current(0)
                            cmt_entry11.bind("<<ComboboxSelected>>",cm_fetch_proDetails2)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry11,tags=("combo14"))

                            cmt_entry12 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry12,tags=("entry39"))

                            cmt_entry13 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry13,tags=("entry40")) 

                            cmt_entry14 = Spinbox(sr_Canvas_1,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            cmt_entry14.bind("<Key>",lambda event,sp = 2:cmt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry14,tags=("entry41"))

                            cmt_entry15 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry15,tags=("entry42"))

                            cmt_entry16 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            cmt_entry16.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry16,tags=("entry43"))

                            cmt_entry17 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry17["values"] = cplace_gstlist
                            cmt_entry17.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry17,tags=("combo15"))

                            cmt_button2 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b2 = 2:view_bundleitems(b2))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button2,tags=("button13"))

                            cm_label29 = Label(sr_Canvas_1,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label29,tags=('label65'))

                            def cm_fetch_proDetails3(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (cmt_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (cmt_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                    get_pro_val2 = (cmt_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                    get_pro_data2 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (cmt_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry47",state='normal')
                                        sr_Canvas_1.itemconfig("entry48",state='normal')
                                        sr_Canvas_1.itemconfig("combo17",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label69",state='normal')
                                        cm_label33.config(text="Available Qty : " + get_pro_data[7])
                                        cmt_entry19.delete(0,END)
                                        cmt_entry19.insert(0,get_pro_data[4])
                                        cmt_entry20.delete(0,END)
                                        cmt_entry20.insert(0,get_pro_data[11])
                                        cmt_entry22.delete(0,END)
                                        cmt_entry22.insert(0,get_pro_data[12])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry47",state='normal')
                                        sr_Canvas_1.itemconfig("entry48",state='normal')
                                        sr_Canvas_1.itemconfig("combo17",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("label69",state='normal')
                                        cm_label33.config(text="Available Qty : " + get_pro_data1[17])
                                        cmt_entry19.delete(0,END)
                                        cmt_entry19.insert(0,get_pro_data1[4])
                                        cmt_entry20.delete(0,END)
                                        cmt_entry20.insert(0,get_pro_data1[7])
                                        cmt_entry22.delete(0,END)
                                        cmt_entry22.insert(0,get_pro_data1[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data2 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry47",state='normal')
                                        sr_Canvas_1.itemconfig("entry48",state='normal')
                                        sr_Canvas_1.itemconfig("combo17",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                        sr_Canvas_1.itemconfig("label69",state='hidden')
                                    except:
                                        pass

                                    try:
                                        cmt_entry19.delete(0,END)
                                        cmt_entry19.insert(0,get_pro_data2[4])
                                        cmt_entry20.delete(0,END)
                                        cmt_entry20.insert(0,get_pro_data2[7])
                                        cmt_entry22.delete(0,END)
                                        cmt_entry22.insert(0,get_pro_data2[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry24.delete(0,END)
                                            cmt_entry24.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                else:
                                    try:
                                        cmt_entry19.delete(0,END)
                                        cmt_entry19.insert(0,get_pro_data3[3])
                                        cmt_entry20.delete(0,END)
                                        cmt_entry20.insert(0,get_pro_data3[4])
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry47",state='hidden')
                                        sr_Canvas_1.itemconfig("entry48",state='hidden')
                                        sr_Canvas_1.itemconfig("combo17",state='hidden')
                                        sr_Canvas_1.itemconfig("button14",state='normal')
                                        sr_Canvas_1.itemconfig("label69",state='hidden')
                                    except:
                                        pass

                                    view_bundleitems(b=3)

                            cmt_entry18 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry18["values"] = product_list
                            cmt_entry18.current(0)
                            cmt_entry18.bind("<<ComboboxSelected>>",cm_fetch_proDetails3)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry18,tags=("combo16"))

                            cmt_entry19 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry19,tags=("entry44"))

                            cmt_entry20 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry20,tags=("entry45"))

                            cmt_entry21 = Spinbox(sr_Canvas_1,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            cmt_entry21.bind("<Key>",lambda event,sp = 3:cmt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry21,tags=("entry46"))

                            cmt_entry22 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry22,tags=("entry47"))

                            cmt_entry23 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            cmt_entry23.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry23,tags=("entry48"))

                            cmt_entry24 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry24['values'] = cplace_gstlist
                            cmt_entry24.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry24,tags=("combo17"))

                            cmt_button3 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b3 = 3:view_bundleitems(b3))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button3,tags=("button14"))

                            cm_label30 = Label(sr_Canvas_1,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label30,tags=('label66'))

                            def cm_fetch_proDetails4(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (cmt_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (cmt_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                    get_pro_val2 = (cmt_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                    get_pro_data2 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (cmt_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry52",state='normal')
                                        sr_Canvas_1.itemconfig("entry53",state='normal')
                                        sr_Canvas_1.itemconfig("combo19",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    try:
                                        sr_Canvas_1.itemconfig("label70",state='normal')
                                        cm_label34.config(text="Available Qty : " + get_pro_data[7])
                                        cmt_entry26.delete(0,END)
                                        cmt_entry26.insert(0,get_pro_data[4])
                                        cmt_entry27.delete(0,END)
                                        cmt_entry27.insert(0,get_pro_data[11])
                                        cmt_entry29.delete(0,END)
                                        cmt_entry29.insert(0,get_pro_data[12])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry52",state='normal')
                                        sr_Canvas_1.itemconfig("entry53",state='normal')
                                        sr_Canvas_1.itemconfig("combo19",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("label70",state='normal')
                                        cm_label34.config(text="Available Qty : " + get_pro_data1[17])
                                        cmt_entry26.delete(0,END)
                                        cmt_entry26.insert(0,get_pro_data1[4])
                                        cmt_entry27.delete(0,END)
                                        cmt_entry27.insert(0,get_pro_data1[7])
                                        cmt_entry29.delete(0,END)
                                        cmt_entry29.insert(0,get_pro_data1[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                elif get_pro_data2 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("entry52",state='normal')
                                        sr_Canvas_1.itemconfig("entry53",state='normal')
                                        sr_Canvas_1.itemconfig("combo19",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                        sr_Canvas_1.itemconfig("label70",state='hidden')
                                    except:
                                        pass

                                    try:
                                        cmt_entry26.delete(0,END)
                                        cmt_entry26.insert(0,get_pro_data2[4])
                                        cmt_entry27.delete(0,END)
                                        cmt_entry27.insert(0,get_pro_data2[7])
                                        cmt_entry29.delete(0,END)
                                        cmt_entry29.insert(0,get_pro_data2[8])
                                        if comp_data[4] == cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                        elif comp_data[4] != cm_pofsupply.get():
                                            cmt_entry31.delete(0,END)
                                            cmt_entry31.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                        else:
                                            pass
                                    except:
                                        pass
                                else:
                                    try:
                                        cmt_entry26.delete(0,END)
                                        cmt_entry26.insert(0,get_pro_data3[3])
                                        cmt_entry27.delete(0,END)
                                        cmt_entry27.insert(0,get_pro_data3[4])
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry52",state='hidden')
                                        sr_Canvas_1.itemconfig("entry53",state='hidden')
                                        sr_Canvas_1.itemconfig("combo19",state='hidden')
                                        sr_Canvas_1.itemconfig("button15",state='normal')
                                        sr_Canvas_1.itemconfig("label70",state='hidden')
                                    except:
                                        pass

                                    view_bundleitems(b=4)

                            cmt_entry25 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry25["values"] = product_list
                            cmt_entry25.current(0)
                            cmt_entry25.bind("<<ComboboxSelected>>",cm_fetch_proDetails4)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry25,tags=("combo18"))

                            cmt_entry26 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry26,tags=("entry49"))

                            cmt_entry27 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry27,tags=("entry50"))

                            cmt_entry28 = Spinbox(sr_Canvas_1,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            cmt_entry28.bind("<Key>",lambda event,sp = 4:cmt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry28,tags=("entry51"))

                            cmt_entry29 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry29,tags=("entry52"))

                            cmt_entry30 = Entry(sr_Canvas_1,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                            cmt_entry30.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry30,tags=("entry53"))

                            cmt_entry31 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cmt_entry31['values'] = cplace_gstlist
                            cmt_entry31.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cmt_entry31,tags=("combo19"))

                            cmt_button4 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b4 = 4:view_bundleitems(b4))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button4,tags=("button15"))

                            cm_label31 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label31,state=HIDDEN,tags=('label67'))

                            cm_label32 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label32,state=HIDDEN,tags=('label68'))

                            cm_label33 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label33,state=HIDDEN,tags=('label69'))

                            cm_label34 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label34,state=HIDDEN,tags=('label70'))

                            cm_label25 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label25,tags=('label40'))

                            cm_label26 = Label(sr_Canvas_1,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label26,tags=('label41'))

                            cm_label27 = Label(sr_Canvas_1,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label27,tags=('label42'))

                            cmt_entry8 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry8,tags=("entry23"))

                            cmt_entry9 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry9,tags=("entry24"))

                            cmt_entry10 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cmt_entry10,tags=("entry25"))

                            def save_salesreceipt():
                                
                                get_sales_sql = "SELECT * FROM app1_salesrecpts ORDER BY salesrecptsid DESC LIMIT 1"
                                fbcursor.execute(get_sales_sql)
                                get_sales_data = fbcursor.fetchone()

                                def split_gst(string):
                                    pattern1 = r'\(+'
                                    pattern2 = r'\%+'
                                    split1 = re.split(pattern1,string)
                                    split2 = re.split(pattern2,split1[1])
                                    return split2[0]

                                if not get_sales_data:
                                    saleno = "1001"
                                else:
                                    saleno = int(get_sales_data[5]) + 1
                                
                                salename = cm_custCombo.get()
                                saleemail = cm_email.get()
                                saleaddress = cm_baddress.get("1.0","end-1c")
                                saledate = cm_srdate.get_date()
                                salepay = cm_pmethod.get()
                                salerefno = cm_ref.get()
                                saledeposit = cm_depto.get()
                                if cmt_entry1.get() == "Select Product":
                                    salepro = ''
                                else:
                                    salepro = cmt_entry1.get()
                                salesplace = cm_pofsupply.get()
                                salehsn = cmt_entry2.get()
                                saledescription = cmt_entry3.get()
                                saleqty = cmt_entry4.get()
                                saleprice = cmt_entry5.get()
                                saaletotal = cmt_entry6.get()
                                try:
                                    tax = split_gst(cmt_entry7.get())
                                except:
                                    tax = 0
                                salesubtotal = cmt_entry8.get()
                                saletaxamount = cmt_entry9.get()
                                salegrandtotal = cmt_entry10.get()
                                if cmt_entry11.get() == "Select Product":
                                    category2 = ''
                                else:
                                    category2 = cmt_entry11.get()
                                categoryhsn2 = cmt_entry12.get()
                                descrptin2 = cmt_entry13.get()
                                catqty2 = cmt_entry14.get()
                                catprice2 = cmt_entry15.get()
                                cattotal2 = cmt_entry16.get()
                                try:
                                    tax1 = split_gst(cmt_entry17.get())
                                except:
                                    tax1 = 0
                                if cmt_entry18.get() == "Select Product":
                                    category3 = ''
                                else:
                                    category3 = cmt_entry18.get()
                                categoryhsn3 = cmt_entry19.get()
                                descrptin3 = cmt_entry20.get()
                                catqty3 = cmt_entry21.get()
                                catprice3 = cmt_entry22.get()
                                cattotal3 = cmt_entry23.get()
                                try:
                                    tax2 = split_gst(cmt_entry24.get())
                                except:
                                    tax2 = 0
                                if cmt_entry25.get() == "Select Product":
                                    category4 = ''
                                else:
                                    category4 = cmt_entry25.get()
                                categoryhsn4 = cmt_entry26.get()
                                descrptin4 = cmt_entry27.get()
                                catqty4 = cmt_entry28.get()
                                catprice4 = cmt_entry29.get()
                                cattotal4 = cmt_entry30.get()
                                try:
                                    tax3 = split_gst(cmt_entry31.get())
                                except:
                                    tax3 = 0
                                cid_id = comp_data[0]

                                

                                if salename == "Select Customer" or salename == '' or salesplace == '' or salepay == '' or salerefno == '':
                                    
                                    pass
                                else:
                                    
                                    ins_salesr_sql = "INSERT INTO app1_salesrecpts(saleno,salename,saleemail,saleaddress,saledate,salepay,salerefno,saledeposit,salepro,salesplace,salehsn,saledescription,saleqty,saleprice,saaletotal,tax,salesubtotal,saletaxamount,salegrandtotal,category2,categoryhsn2,descrptin2,catqty2,catprice2,cattotal2,tax1,category3,categoryhsn3,descrptin3,catqty3,catprice3,cattotal3,tax2,category4,categoryhsn4,descrptin4,catqty4,catprice4,cattotal4,tax3,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_salesr_val = (saleno,salename,saleemail,saleaddress,saledate,salepay,salerefno,saledeposit,salepro,salesplace,salehsn,saledescription,saleqty,saleprice,saaletotal,tax,salesubtotal,saletaxamount,salegrandtotal,category2,categoryhsn2,descrptin2,catqty2,catprice2,cattotal2,tax1,category3,categoryhsn3,descrptin3,catqty3,catprice3,cattotal3,tax2,category4,categoryhsn4,descrptin4,catqty4,catprice4,cattotal4,tax3,cid_id)
                                    fbcursor.execute(ins_salesr_sql,ins_salesr_val)
                                    finsysdb.commit()

                                    get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                    get_accts1_val = (saledeposit,comp_data[0])
                                    fbcursor.execute(get_accts1_sql,get_accts1_val)
                                    get_accts1_data = fbcursor.fetchone()

                                    if not get_accts1_data:
                                        pass
                                    else:
                                        if salegrandtotal != 0:
                                            upd_bal = get_accts1_data[0] + float(salegrandtotal)
                                            upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                            upd_accts1_val = (upd_bal,saledeposit,comp_data[0])
                                            fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                            finsysdb.commit()
                                        else:
                                            pass

                                    get_accts_sql = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                    get_accts_val = (saledeposit,comp_data[0])
                                    fbcursor.execute(get_accts_sql,get_accts_val)
                                    get_accts_data = fbcursor.fetchone()

                                    if not get_accts_data:
                                        pass
                                    else:
                                        if salegrandtotal != 0:
                                            upd_bal = get_accts_data[0] + float(salegrandtotal)
                                            upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                            upd_accts_val = (upd_bal,saledeposit,comp_data[0])
                                            fbcursor.execute(upd_accts_sql,upd_accts_val)
                                            finsysdb.commit()
                                        else:
                                            pass
                                    try:
                                        lth=tax_tot1
                                    except:
                                        lth=0.0

                                    try:
                                        lth1=tax_tot2
                                    except:
                                        lth1=0.0

                                    try:
                                        lth2=tax_tot3
                                    except:
                                        lth2=0.0
                                    try:
                                        lth3=tax_tot4
                                    except:
                                        lth3=0.0

                                    
                                    tax_amounts = [lth,lth1,lth2,lth3]
                                    quantities = [saleqty,catqty2,catqty3,catqty4]
                                    totals = [saaletotal,cattotal2,cattotal3,cattotal4]
                                    products = [salepro,category2,category3,category4]
                                    

                                    for (p,q,t,tx) in zip(products,quantities,totals,tax_amounts):
                                        try:
                                            get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_invent_val = (p,comp_data[0])
                                            fbcursor.execute(get_invent_sql,get_invent_val)
                                            get_invent_data = fbcursor.fetchone()

                                            if not get_invent_data:
                                                pass
                                            else:
                                                initial_qty = int(get_invent_data[7]) - int(q)

                                                upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                upd_invent_val = (initial_qty,p,comp_data[0])
                                                fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                finsysdb.commit()

                                                cxq = float(get_invent_data[16]) * float(q)

                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                get_accts1_data1 = fbcursor.fetchone()

                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                get_accts_data1 = fbcursor.fetchone()

                                                if not get_accts_data1 and not get_accts1_data1:
                                                    pass
                                                elif get_accts1_data1:
                                                    upd_bal1 = get_accts1_data1[0] - float(cxq)
                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                    finsysdb.commit()
                                                elif get_accts_data1:
                                                    upd_bal1 = get_accts_data1[0] - float(cxq)
                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                #----------------------------------------------------------
                                                get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                get_accts1_data2 = fbcursor.fetchone()

                                                get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                get_accts_data2 = fbcursor.fetchone()

                                                if not get_accts_data2 and not get_accts1_data2:
                                                    pass
                                                elif get_accts1_data2:
                                                    upd_bal2 = get_accts1_data2[0] + float(t)
                                                    upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                    finsysdb.commit()
                                                elif get_accts_data2:
                                                    upd_bal2 = get_accts_data2[0] + float(t)
                                                    upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                #---------------------------------------------------
                                                get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                get_accts1_data3 = fbcursor.fetchone()

                                                get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                get_accts_data3= fbcursor.fetchone()

                                                if not get_accts_data3 and not get_accts1_data3:
                                                    pass
                                                elif get_accts1_data3:
                                                    upd_bal3 = get_accts1_data3[0] + float(cxq)
                                                    upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                    finsysdb.commit()
                                                elif get_accts_data3:
                                                    upd_bal3 = get_accts_data3[0] + float(cxq)
                                                    upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                try:
                                                    if salesplace == comp_data[4]:
                                                        tax = tx/2
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] + tax
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()

                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                        get_accts1_data5 = fbcursor.fetchone()

                                                        upd_bal5 = get_accts1_data5[0] + tax
                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                        finsysdb.commit()
                                                    else:
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] + tx
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()
                                                except:
                                                    pass
                                        except:
                                            pass

                                        try:
                                            get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_noninvent_val = (p,comp_data[0])
                                            fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                            get_noninvent_data = fbcursor.fetchone()

                                            if not get_noninvent_data:
                                                pass
                                            else:
                                                qty = int(get_noninvent_data[17]) - int(q)

                                                upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                upd_noninvent_val = (qty,p,comp_data[0])
                                                fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                finsysdb.commit()

                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                get_accts1_data1 = fbcursor.fetchone()

                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                get_accts_data1 = fbcursor.fetchone()

                                                if not get_accts_data1 and not get_accts1_data1:
                                                    pass
                                                elif get_accts1_data1:
                                                    upd_bal1 = get_accts1_data1[0] + float(t)
                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                    finsysdb.commit()
                                                elif get_accts_data1:
                                                    upd_bal1 = get_accts_data1[0] + float(t)
                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                try:
                                                    if salesplace == comp_data[4]:
                                                        tax = tx/2
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] + tax
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()

                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                        get_accts1_data5 = fbcursor.fetchone()

                                                        upd_bal5 = get_accts1_data5[0] + tax
                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                        finsysdb.commit()
                                                    else:
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] + tx
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()
                                                except:
                                                    pass

                                        except:
                                            pass

                                    #-------------------------------------------------------------
                                    
                                    try:
                                        get_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val1 = (cmt_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql1,get_bun_val1)
                                        get_bun_data1 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val2 = (cmt_entry11.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql2,get_bun_val2)
                                        get_bun_data2 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val3 = (cmt_entry18.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql3,get_bun_val3)
                                        get_bun_data3 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val4 = (cmt_entry25.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql4,get_bun_val4)
                                        get_bun_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get(),]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get(),]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get(),]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    else:
                                        pass
                                    
                                    try:
                                        for (p,q,t,tx) in zip(bproducts,bqty,btotals,btax_amount):
                                            try:
                                                get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                get_invent_val = (p,comp_data[0])
                                                fbcursor.execute(get_invent_sql,get_invent_val)
                                                get_invent_data = fbcursor.fetchone()

                                                if not get_invent_data:
                                                    pass
                                                else:
                                                    initial_qty = int(get_invent_data[7]) - int(q)

                                                    upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                    upd_invent_val = (initial_qty,p,comp_data[0])
                                                    fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                    finsysdb.commit()

                                                    cxq = float(get_invent_data[16]) * float(q)

                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                    get_accts1_data1 = fbcursor.fetchone()

                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                    get_accts_data1 = fbcursor.fetchone()

                                                    if not get_accts_data1 and not get_accts1_data1:
                                                        pass
                                                    elif get_accts1_data1:
                                                        upd_bal1 = get_accts1_data1[0] - float(cxq)
                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                        finsysdb.commit()
                                                    elif get_accts_data1:
                                                        upd_bal1 = get_accts_data1[0] - float(cxq)
                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    #----------------------------------------------------------
                                                    get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                    get_accts1_data2 = fbcursor.fetchone()

                                                    get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                    get_accts_data2 = fbcursor.fetchone()

                                                    if not get_accts_data2 and not get_accts1_data2:
                                                        pass
                                                    elif get_accts1_data2:
                                                        upd_bal2 = get_accts1_data2[0] + float(t)
                                                        upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                        finsysdb.commit()
                                                    elif get_accts_data2:
                                                        upd_bal2 = get_accts_data2[0] + float(t)
                                                        upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    #---------------------------------------------------
                                                    get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                    get_accts1_data3 = fbcursor.fetchone()

                                                    get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                    get_accts_data3= fbcursor.fetchone()

                                                    if not get_accts_data3 and not get_accts1_data3:
                                                        pass
                                                    elif get_accts1_data3:
                                                        upd_bal3 = get_accts1_data3[0] + float(cxq)
                                                        upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                        finsysdb.commit()
                                                    elif get_accts_data3:
                                                        upd_bal3 = get_accts_data3[0] + float(cxq)
                                                        upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    try:
                                                        if salesplace == comp_data[4]:
                                                            tax = tx/2
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] + tax
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()

                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                            get_accts1_data5 = fbcursor.fetchone()

                                                            upd_bal5 = get_accts1_data5[0] + tax
                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                            finsysdb.commit()
                                                        else:
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] + tx
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()
                                                    except:
                                                        pass
                                            except:
                                                pass

                                            try:
                                                get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                get_noninvent_val = (p,comp_data[0])
                                                fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                get_noninvent_data = fbcursor.fetchone()

                                                if not get_noninvent_data:
                                                    pass
                                                else:
                                                    qty = int(get_noninvent_data[17]) - int(q)

                                                    upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                    upd_noninvent_val = (qty,p,comp_data[0])
                                                    fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                    finsysdb.commit()

                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                    get_accts1_data1 = fbcursor.fetchone()

                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                    get_accts_data1 = fbcursor.fetchone()

                                                    if not get_accts_data1 and not get_accts1_data1:
                                                        pass
                                                    elif get_accts1_data1:
                                                        upd_bal1 = get_accts1_data1[0] + float(t)
                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                        finsysdb.commit()
                                                    elif get_accts_data1:
                                                        upd_bal1 = get_accts_data1[0] + float(t)
                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    try:
                                                        if salesplace == comp_data[4]:
                                                            tax = tx/2
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] + tax
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()

                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                            get_accts1_data5 = fbcursor.fetchone()

                                                            upd_bal5 = get_accts1_data5[0] + tax
                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                            finsysdb.commit()
                                                        else:
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] + tx
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()
                                                    except:
                                                        pass

                                            except:
                                                pass
                                    except:
                                        pass
                                    

                                    sr_Frame_1.destroy()
                                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    show_sr_treeData()

                            save_btn = Button(sr_Canvas_1,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=save_salesreceipt)
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button7")) 

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3"))
                            #--------------
                            cm_label6 = Label(sr_Canvas_1,width=20,height=1,text="Sales receipt date:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cm_label6,tags=('label24'))

                            cwidth = root.winfo_screenwidth()

                            cm_srdate = DateEntry(sr_Canvas_1,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')
                            if cwidth > 1280:
                                sr_Canvas_1.create_window(495,442,anchor='nw',window=cm_srdate,tags=("date"))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(370,455,anchor='nw',window=cm_srdate,tags=("date"))
                            else:
                                sr_Canvas_1.create_window(465,407,anchor='nw',window=cm_srdate,tags=("date"))
                        
                        elif sr_transCombo.get() == 'Credit Note': 
                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            cn_label1 = Label(sr_Canvas_1,width=18,height=1,text="CREDIT NOTE",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=cn_label1,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))   

                            cn_label2 = Label(sr_Canvas_1,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=cn_label2,tags=("label2"))

                            cn_label3 = Label(sr_Canvas_1,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=cn_label3,tags=("label21"))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            def cn_fetch_custDetails(event):
                                cust_name = cn_custCombo.get()
                                cust_fname = cust_name.split(" ")[0]
                                cust_lname = cust_name.split(" ")[1]

                                cust_sql = "SELECT * FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                cust_val = (cust_fname,cust_lname,comp_data[0])
                                fbcursor.execute(cust_sql,cust_val)
                                cust_data = fbcursor.fetchone()

                                inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                inv_val = (cust_name,comp_data[0])
                                fbcursor.execute(inv_sql,inv_val)
                                inv_data = fbcursor.fetchall()

                                if not cust_data:
                                    pass
                                else:
                                    cn_email.delete(0,END)
                                    cn_email.insert(0,cust_data[9])
                                    cn_baddress.delete("1.0","end-1c")
                                    cn_baddress.insert("1.0",cust_data[2] + " " + cust_data[3] + "\n" + cust_data[4] + "\n" + cust_data[12] + "\n" + cust_data[13] + "\n" + cust_data[14] + "\n" + cust_data[15] + "\n" + cust_data[16])

                                # if not inv_data:
                                #     pass
                                # else:
                                #     count = 1
                                #     for i in inv_data:
                                #         rp_tree.insert(parent='',index='end',iid=i,text='',values=(count,str(i[3]) + " " + i[5],i[6],i[17],i[41],0))

                            cn_custCombo = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'))
                            cn_custCombo["values"] = cust_list
                            cn_custCombo.current(0)
                            cn_custCombo.bind("<<ComboboxSelected>>",cn_fetch_custDetails)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_custCombo,tags=("combo3"))

                            def sr_addCustomer_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        cn_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        cn_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def cn_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:cn_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            cn_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer_1())
                            sr_Canvas_1.create_window(0,0,window=cn_plus,tags=("button5"))

                            cn_label4 = Label(sr_Canvas_1,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label4,tags=('label22'))

                            cn_email = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_email,tags=("entry13"))

                            cn_label5 = Label(sr_Canvas_1,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label5,tags=('label23'))

                            cn_baddress = Text(sr_Canvas_1,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_baddress,tags=("entry14"))

                            cn_label7 = Label(sr_Canvas_1,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label7,tags=('label25'))

                            def cn_gst_selection(event):
                                cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']

                                ncplace_gstlist = ['Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']

                                if not comp_data:
                                    pass
                                elif comp_data[4] == cn_pofsupply.get():
                                    cnt_entry6["values"] = cplace_gstlist
                                    cnt_entry15["values"] = cplace_gstlist
                                    cnt_entry21["values"] = cplace_gstlist
                                    cnt_entry27["values"] = cplace_gstlist
                                else:
                                    cnt_entry6["values"] = ncplace_gstlist
                                    cnt_entry15["values"] = ncplace_gstlist
                                    cnt_entry21["values"] = ncplace_gstlist
                                    cnt_entry27["values"] = ncplace_gstlist

                            cn_pofsupply = ttk.Combobox(sr_Canvas_1,width=19,font=('arial 15'),background='#2f516f')
                            cn_pofsupply_list = ['Kerala','Andaman and Nicobar Islads','Andhra Predhesh','Arunachal Predesh',
                            'Assam','Bihar','Chandigarh','Chhattisgarh','Dadra and Nagar Haveli','Damn anad Diu','Delhi',
                            'Goa','Gujarat','Haryana','Himachal Predesh','Jammu and Kashmir','Jharkhand','Karnataka','Ladakh',
                            'Lakshadweep','Madhya Predesh','Maharashtra','Manipur','Meghalaya','Mizoram','Nagaland','Odisha',
                            'Puducherry','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura','Uttar Predesh','Uttarakhand',
                            'West Bengal','Other Territory',]
                            cn_pofsupply["values"] = cn_pofsupply_list
                            cn_pofsupply.bind("<<ComboboxSelected>>",cn_gst_selection)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_pofsupply,tags=("entry15"))

                            cn_label8 = Label(sr_Canvas_1,width=20,height=1,text="Invoice Period",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label8,tags=('label26'))

                            today = datetime.today()
                            current_year = today.strftime("%Y")
                            previous_year = int(current_year) - 1

                            cn_invperiod = ttk.Combobox(sr_Canvas_1,width=19,font=('arial 15'),background='#2f516f')
                            cn_invperiod['values'] = [f'October {current_year} - December {current_year}',
                            f'July {current_year} - September {current_year}',
                            f'April {current_year} - June {current_year}',
                            f'January {current_year} - March {current_year}',
                            f'October {previous_year} - December {previous_year}',
                            f'July {previous_year} - September {previous_year}',
                            f'April {previous_year} - June {previous_year}',
                            f'January {previous_year} - March {previous_year}']
                            cn_invperiod.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_invperiod,tags=("entry16"))

                            cn_label9 = Label(sr_Canvas_1,width=20,height=1,text="Invoice No.",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label9,tags=('label27'))

                            inv_sql = "SELECT * FROM app1_invoice WHERE cid_id=%s"
                            inv_val = (comp_data[0],)
                            fbcursor.execute(inv_sql,inv_val)
                            inv_data = fbcursor.fetchall()

                            inv_list = []
                            if not inv_data:
                                pass
                            else:
                                for i in inv_data:
                                    inv_list.append(str( i[3]) + " - " + i[1])

                            inv_list.insert(0,"Select Invoice No")

                            def cn_fetchInvoDetails(event):
                                inv_no = (cn_invoiceno.get()).split(' - ')[0]

                                get_inv_sql = "SELECT * FROM app1_invoice WHERE cid_id=%s AND invoiceno=%s"
                                get_inv_val = (comp_data[0],inv_no)
                                fbcursor.execute(get_inv_sql,get_inv_val)
                                get_inv_data = fbcursor.fetchone()

                                try:
                                    get_bundle1_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_bundle1_val = (get_inv_data[9],comp_data[0])
                                    fbcursor.execute(get_bundle1_sql,get_bundle1_val)
                                    get_bundle1_data = fbcursor.fetchone()
                                except:
                                    pass
                                try:
                                    get_bundle2_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_bundle2_val = (get_inv_data[18],comp_data[0])
                                    fbcursor.execute(get_bundle2_sql,get_bundle2_val)
                                    get_bundle2_data = fbcursor.fetchone()
                                except:
                                    pass
                                try:
                                    get_bundle3_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_bundle3_val = (get_inv_data[25],comp_data[0])
                                    fbcursor.execute(get_bundle3_sql,get_bundle3_val)
                                    get_bundle3_data = fbcursor.fetchone()
                                except:
                                    pass
                                try:
                                    get_bundle4_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_bundle4_val = (get_inv_data[32],comp_data[0])
                                    fbcursor.execute(get_bundle4_sql,get_bundle4_val)
                                    get_bundle4_data = fbcursor.fetchone()
                                except:
                                    pass

                                if not get_bundle1_data and not get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry71",state='normal')
                                        sr_Canvas_1.itemconfig("entry72",state='normal')
                                        sr_Canvas_1.itemconfig("combo27",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        if get_inv_data[18] is None:
                                            pass
                                        else:
                                            
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        if get_inv_data[25] is None:
                                            pass
                                        else:
                                            
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        if get_inv_data[32] is None:
                                            pass
                                        else:
                                            
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and not get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry71",state='normal')
                                        sr_Canvas_1.itemconfig("entry72",state='normal')
                                        sr_Canvas_1.itemconfig("combo27",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry71",state='normal')
                                        sr_Canvas_1.itemconfig("entry72",state='normal')
                                        sr_Canvas_1.itemconfig("combo27",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and not get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry71",state='normal')
                                        sr_Canvas_1.itemconfig("entry72",state='normal')
                                        sr_Canvas_1.itemconfig("combo27",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and not get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                                                
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry71",state='normal')
                                        sr_Canvas_1.itemconfig("entry72",state='normal')
                                        sr_Canvas_1.itemconfig("combo27",state='normal')
                                        sr_Canvas_1.itemconfig("button15",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])
                                            cnt_entry25.delete(0,END)
                                            cnt_entry25.insert(0,get_inv_data[36])
                                            cnt_entry26.delete(0,END)
                                            cnt_entry26.insert(0,get_inv_data[37])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry27.delete(0,END)
                                                cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                            else:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and not get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and not get_bundle2_data and get_bundle3_data and get_bundle4_data:                                
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])

                                            try:
                                                sr_Canvas_1.itemconfig("entry67",state='hidden')
                                                sr_Canvas_1.itemconfig("entry68",state='hidden')
                                                sr_Canvas_1.itemconfig("combo25",state='hidden')
                                                sr_Canvas_1.itemconfig("button14",state='normal')
                                                sr_Canvas_1.itemconfig("label84",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif not get_bundle1_data and not get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry59",state='normal')
                                        sr_Canvas_1.itemconfig("entry60",state='normal')
                                        sr_Canvas_1.itemconfig("combo21",state='normal')
                                        sr_Canvas_1.itemconfig("button12",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])
                                            cnt_entry4.delete(0,END)
                                            cnt_entry4.insert(0,get_inv_data[13])
                                            cnt_entry5.delete(0,END)
                                            cnt_entry5.insert(0,get_inv_data[14])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry6.delete(0,END)
                                                cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and not get_bundle2_data and not get_bundle3_data and get_bundle4_data:                                
                                    try:
                                        sr_Canvas_1.itemconfig("entry63",state='normal')
                                        sr_Canvas_1.itemconfig("entry64",state='normal')
                                        sr_Canvas_1.itemconfig("combo23",state='normal')
                                        sr_Canvas_1.itemconfig("button13",state='hidden')
                                    except:
                                        pass

                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])
                                            cnt_entry13.delete(0,END)
                                            cnt_entry13.insert(0,get_inv_data[22])
                                            cnt_entry14.delete(0,END)
                                            cnt_entry14.insert(0,get_inv_data[23])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry15.delete(0,END)
                                                cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                elif get_bundle1_data and get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                    try:
                                        sr_Canvas_1.itemconfig("entry67",state='normal')
                                        sr_Canvas_1.itemconfig("entry68",state='normal')
                                        sr_Canvas_1.itemconfig("combo25",state='normal')
                                        sr_Canvas_1.itemconfig("button14",state='hidden')
                                    except:
                                        pass
                                    
                                    try:
                                        if get_inv_data[9] == '' or get_inv_data[9] is None:
                                            pass
                                        else:
                                            cnt_entry1.delete(0,END)
                                            cnt_entry1.insert(0,get_inv_data[9])
                                            cnt_entry2.delete(0,END)
                                            cnt_entry2.insert(0,get_inv_data[11])
                                            cnt_entry3.delete(0,END)
                                            cnt_entry3.insert(0,get_inv_data[12])

                                            try:
                                                sr_Canvas_1.itemconfig("entry59",state='hidden')
                                                sr_Canvas_1.itemconfig("entry60",state='hidden')
                                                sr_Canvas_1.itemconfig("combo21",state='hidden')
                                                sr_Canvas_1.itemconfig("button12",state='normal')
                                                sr_Canvas_1.itemconfig("label82",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[18] == '' or get_inv_data[18] is None:
                                            pass
                                        else:
                                            cnt_entry10.delete(0,END)
                                            cnt_entry10.insert(0,get_inv_data[18])
                                            cnt_entry11.delete(0,END)
                                            cnt_entry11.insert(0,get_inv_data[20])
                                            cnt_entry12.delete(0,END)
                                            cnt_entry12.insert(0,get_inv_data[21])

                                            try:
                                                sr_Canvas_1.itemconfig("entry63",state='hidden')
                                                sr_Canvas_1.itemconfig("entry64",state='hidden')
                                                sr_Canvas_1.itemconfig("combo23",state='hidden')
                                                sr_Canvas_1.itemconfig("button13",state='normal')
                                                sr_Canvas_1.itemconfig("label83",state='hidden')
                                            except:
                                                pass
                                        
                                        if get_inv_data[25] == '' or get_inv_data[25] is None:
                                            pass
                                        else:
                                            cnt_entry16.delete(0,END)
                                            cnt_entry16.insert(0,get_inv_data[25])
                                            cnt_entry17.delete(0,END)
                                            cnt_entry17.insert(0,get_inv_data[27])
                                            cnt_entry18.delete(0,END)
                                            cnt_entry18.insert(0,get_inv_data[28])
                                            cnt_entry19.delete(0,END)
                                            cnt_entry19.insert(0,get_inv_data[29])
                                            cnt_entry20.delete(0,END)
                                            cnt_entry20.insert(0,get_inv_data[30])
                                            if comp_data[4] == cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                            elif comp_data[4] != cn_pofsupply.get():
                                                cnt_entry21.delete(0,END)
                                                cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                            else:
                                                pass
                                        
                                        if get_inv_data[32] == '' or get_inv_data[32] is None:
                                            pass
                                        else:
                                            cnt_entry22.delete(0,END)
                                            cnt_entry22.insert(0,get_inv_data[32])
                                            cnt_entry23.delete(0,END)
                                            cnt_entry23.insert(0,get_inv_data[34])
                                            cnt_entry24.delete(0,END)
                                            cnt_entry24.insert(0,get_inv_data[35])

                                            try:
                                                sr_Canvas_1.itemconfig("entry71",state='normal')
                                                sr_Canvas_1.itemconfig("entry72",state='normal')
                                                sr_Canvas_1.itemconfig("combo27",state='normal')
                                                sr_Canvas_1.itemconfig("button15",state='hidden')
                                                sr_Canvas_1.itemconfig("label85",state='hidden')
                                            except:
                                                pass
                                    except:
                                        pass
                                else:
                                    pass

                                cnt_entry7.delete(0,END)
                                cnt_entry7.insert(0,get_inv_data[16])
                                cnt_entry8.delete(0,END)
                                cnt_entry8.insert(0,get_inv_data[40])
                                cnt_entry9.delete(0,END)
                                cnt_entry9.insert(0,get_inv_data[17])
                                

                            cn_invoiceno = ttk.Combobox(sr_Canvas_1,width=19,font=('arial 15'),background='#2f516f',foreground='black')
                            cn_invoiceno['values'] = inv_list
                            cn_invoiceno.current(0)
                            cn_invoiceno.bind("<<ComboboxSelected>>",cn_fetchInvoDetails)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cn_invoiceno,tags=("entry17"))

                            

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line59"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line60"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line61"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line62"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line63"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line64"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line65"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line66"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line67"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line68"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line69"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line70"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line71"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line72"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line73"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line74"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line75"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line76"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line77"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line78"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line79"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line80"))

                            cn_label13 = Label(sr_Canvas_1,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label13,tags=('label71'))

                            cn_label14 = Label(sr_Canvas_1,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label14,tags=('label72'))

                            cn_label28 = Label(sr_Canvas_1,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label28,tags=('label73'))

                            cn_label29 = Label(sr_Canvas_1,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label29,tags=('label74'))

                            cn_label30 = Label(sr_Canvas_1,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label30,tags=('label75'))

                            cn_label18 = Label(sr_Canvas_1,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label18,tags=('label76'))

                            cn_label20 = Label(sr_Canvas_1,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label20,tags=('label77'))

                            cn_label21 = Label(sr_Canvas_1,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label21,tags=('label78'))

                            cn_label22 = Label(sr_Canvas_1,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label22,tags=('label79'))

                            cn_label23 = Label(sr_Canvas_1,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label23,tags=('label80'))

                            cn_label24 = Label(sr_Canvas_1,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label24,tags=('label81'))

                            get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                            get_inventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_inventory_sql,get_inventory_val)
                            get_inventory_data = fbcursor.fetchall()

                            get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                            get_noninventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                            get_noninventory_data = fbcursor.fetchall()

                            get_service_sql = "SELECT * FROM app1_service WHERE cid_id=%s" 
                            get_service_val = (comp_data[0],)                      
                            fbcursor.execute(get_service_sql,get_service_val)
                            get_service_data = fbcursor.fetchall()

                            get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                            get_bundle_val = (comp_data[0],)                      
                            fbcursor.execute(get_bundle_sql,get_bundle_val)
                            get_bundle_data = fbcursor.fetchall()

                            cn_product_list = []

                            if not get_inventory_data:
                                pass
                            else:
                                for i in get_inventory_data:
                                    cn_product_list.append(i[2])

                            if not get_noninventory_data:
                                pass
                            else:
                                for n in get_noninventory_data:
                                    cn_product_list.append(n[2])

                            if not get_bundle_data:
                                pass
                            else:
                                for b in get_bundle_data:
                                    cn_product_list.append(b[2])


                            def cn_view_bundleitems(b):
                                sr_Frame_1.grid_forget()
                                sr_Frame_4 = Frame(tab3_1,)
                                sr_Frame_4.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets3(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget

                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.9


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)

                                    dcanvas.coords("line1",dwidth/13,dheight/2.2,dwidth/1.09,dheight/2.2)
                                    dcanvas.coords("line2",dwidth/13,dheight/1.65,dwidth/1.09,dheight/1.65)
                                    dcanvas.coords("line3",dwidth/13,dheight/1.32,dwidth/1.09,dheight/1.32)
                                    dcanvas.coords("line4",dwidth/13,dheight/1.1,dwidth/1.09,dheight/1.1)
                                    dcanvas.coords("line5",dwidth/13,dheight/0.945,dwidth/1.09,dheight/0.945)
                                    dcanvas.coords("line6",dwidth/13,dheight/2.2,dwidth/13,dheight/0.945)
                                    dcanvas.coords("line7",dwidth/1.09,dheight/2.2,dwidth/1.09,dheight/0.945)
                                    dcanvas.coords("line8",dwidth/5.35,dheight/2.2,dwidth/5.35,dheight/0.945)
                                    dcanvas.coords("line9",dwidth/3.5,dheight/2.2,dwidth/3.5,dheight/0.945)
                                    dcanvas.coords("line10",dwidth/2.28,dheight/2.2,dwidth/2.28,dheight/0.945)
                                    dcanvas.coords("line11",dwidth/1.84,dheight/2.2,dwidth/1.84,dheight/0.945)
                                    dcanvas.coords("line12",dwidth/1.49,dheight/2.2,dwidth/1.49,dheight/0.945)
                                    dcanvas.coords("line13",dwidth/1.25,dheight/2.2,dwidth/1.25,dheight/0.945)

                                    dcanvas.coords("entry1",dwidth/11.5,dheight/1.99)
                                    dcanvas.coords("entry2",dwidth/5.1,dheight/1.99)
                                    dcanvas.coords("entry3",dwidth/3.38,dheight/1.99)
                                    dcanvas.coords("entry4",dwidth/2.249,dheight/1.99)
                                    dcanvas.coords("entry5",dwidth/1.81,dheight/1.99)
                                    dcanvas.coords("entry6",dwidth/1.465,dheight/1.99)

                                    dcanvas.coords("entry7",dwidth/11.5,dheight/1.525)
                                    dcanvas.coords("entry8",dwidth/5.1,dheight/1.525)
                                    dcanvas.coords("entry9",dwidth/3.38,dheight/1.525)
                                    dcanvas.coords("entry10",dwidth/2.249,dheight/1.525)
                                    dcanvas.coords("entry11",dwidth/1.81,dheight/1.525)
                                    dcanvas.coords("entry12",dwidth/1.465,dheight/1.525)

                                    dcanvas.coords("entry13",dwidth/11.5,dheight/1.24)
                                    dcanvas.coords("entry14",dwidth/5.1,dheight/1.24)
                                    dcanvas.coords("entry15",dwidth/3.38,dheight/1.24)
                                    dcanvas.coords("entry16",dwidth/2.249,dheight/1.24)
                                    dcanvas.coords("entry17",dwidth/1.81,dheight/1.24)
                                    dcanvas.coords("entry18",dwidth/1.465,dheight/1.24)

                                    dcanvas.coords("entry19",dwidth/11.5,dheight/1.045)
                                    dcanvas.coords("entry20",dwidth/5.1,dheight/1.045)
                                    dcanvas.coords("entry21",dwidth/3.38,dheight/1.045)
                                    dcanvas.coords("entry22",dwidth/2.249,dheight/1.045)
                                    dcanvas.coords("entry23",dwidth/1.81,dheight/1.045)
                                    dcanvas.coords("entry24",dwidth/1.465,dheight/1.045)

                                    dcanvas.coords("combo1",dwidth/1.165,dheight/1.88)
                                    dcanvas.coords("combo2",dwidth/1.165,dheight/1.46)
                                    dcanvas.coords("combo3",dwidth/1.165,dheight/1.2)
                                    dcanvas.coords("combo4",dwidth/1.165,dheight/1.019)

                                    dcanvas.coords("button2",dwidth/27,dheight/3)
                                
                                sr_Canvas_4 = Canvas(sr_Frame_4,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_4.grid_columnconfigure(0,weight=1)
                                sr_Frame_4.grid_rowconfigure(0,weight=1)

                                sr_Scroll_3 = Scrollbar(sr_Frame_4,orient=VERTICAL)
                                sr_Scroll_3.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_3.config(command=sr_Canvas_4.yview)
                                sr_Canvas_4.bind("<Configure>", responsive_widgets3)
                                sr_Canvas_4.config(yscrollcommand=sr_Scroll_3.set)
                                sr_Canvas_4.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                sr_Canvas_4.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line1"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line2"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line3"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line4"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line5"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line6"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line7"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line8"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line9"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line10"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line11"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line12"))
                                sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line13"))

                                def bt_goBack():
                                    sr_Frame_4.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_4,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:bt_goBack())
                                sr_Canvas_4.create_window(0,0,window=back_btn,tags=("button2"))

                                global bt1_entry1,bt1_entry4,bt1_entry6,bt1_entry7,bt1_entry8,bt1_entry11,bt1_entry13,bt1_entry14,bt1_entry15,bt1_entry18,bt1_entry20,bt1_entry21,bt1_entry22,bt1_entry25,bt1_entry27,bt1_entry28
                                global bt2_entry1,bt2_entry4,bt2_entry6,bt2_entry7,bt2_entry8,bt2_entry11,bt2_entry13,bt2_entry14,bt2_entry15,bt2_entry18,bt2_entry20,bt2_entry21,bt2_entry22,bt2_entry25,bt2_entry27,bt2_entry28
                                global bt3_entry1,bt3_entry4,bt3_entry6,bt3_entry7,bt3_entry8,bt3_entry11,bt3_entry13,bt3_entry14,bt3_entry15,bt3_entry18,bt3_entry20,bt3_entry21,bt3_entry22,bt3_entry25,bt3_entry27,bt3_entry28
                                global bt4_entry1,bt4_entry4,bt4_entry6,bt4_entry7,bt4_entry8,bt4_entry11,bt4_entry13,bt4_entry14,bt4_entry15,bt4_entry18,bt4_entry20,bt4_entry21,bt4_entry22,bt4_entry25,bt4_entry27,bt4_entry28

                                if b == 1:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry1.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt1_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry1,tags=("entry1"))

                                    bt1_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry2,tags=("entry2"))

                                    bt1_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry3,tags=("entry3"))

                                    bt1_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry4,tags=("entry4"))

                                    bt1_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry5,tags=("entry5"))

                                    bt1_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry6,tags=("entry6"))

                                    bt1_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry7,tags=("combo1"))

                                    bt1_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry8,tags=("entry7"))

                                    bt1_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry9,tags=("entry8"))

                                    bt1_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry10,tags=("entry9"))

                                    bt1_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry11,tags=("entry10"))

                                    bt1_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry12,tags=("entry11"))

                                    bt1_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry13,tags=("entry12"))

                                    bt1_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry14,tags=("combo2"))

                                    bt1_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry15,tags=("entry13"))

                                    bt1_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry16,tags=("entry14"))

                                    bt1_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry17,tags=("entry15"))

                                    bt1_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry18,tags=("entry16"))

                                    bt1_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry19,tags=("entry17"))

                                    bt1_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry20,tags=("entry18"))

                                    bt1_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry21,tags=("combo3"))

                                    bt1_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry22,tags=("entry19"))

                                    bt1_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry23,tags=("entry20"))

                                    bt1_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry24,tags=("entry21"))

                                    bt1_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry25,tags=("entry22"))

                                    bt1_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry26,tags=("entry23"))

                                    bt1_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry27,tags=("entry24"))

                                    bt1_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt1_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt1_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val1 = (cnt_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql1,get_bundle_val1)
                                        get_bundle_data1 = fbcursor.fetchone()
                                    except:
                                        pass 
                                    try:
                                        bt1_entry1.delete(0,END)
                                        bt1_entry1.insert(0,get_bundle_data1[5])
                                        bt1_entry2.delete(0,END)
                                        bt1_entry2.insert(0,get_bundle_data1[9])
                                        bt1_entry3.delete(0,END)
                                        bt1_entry3.insert(0,get_bundle_data1[13])
                                        bt1_entry4.delete(0,END)
                                        bt1_entry5.delete(0,END)
                                        bt1_entry6.delete(0,END)
                                        if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                            bt1_entry4.insert(0,0)
                                        else:
                                            bt1_entry4.insert(0,get_bundle_data1[17])
                                        if get_bundle_data1[21] == '' or get_bundle_data1[21] is None or get_bundle_data1[21] == NULL:
                                            bt1_entry5.insert(0,0)
                                        else:
                                            bt1_entry5.insert(0,get_bundle_data1[21])
                                        if get_bundle_data1[25] == '' or get_bundle_data1[25] is None or get_bundle_data1[25] == NULL:
                                            bt1_entry6.insert(0,0)
                                        else:
                                            bt1_entry6.insert(0,get_bundle_data1[25])
                                        
                                        bt1_entry7.delete(0,END)
                                        bt1_entry8.delete(0,END)
                                        bt1_entry8.insert(0,get_bundle_data1[6])
                                        bt1_entry9.delete(0,END)
                                        bt1_entry9.insert(0,get_bundle_data1[10])
                                        bt1_entry10.delete(0,END)
                                        bt1_entry10.insert(0,get_bundle_data1[14])
                                        bt1_entry11.delete(0,END)
                                        bt1_entry12.delete(0,END)
                                        bt1_entry13.delete(0,END)
                                        if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[22] == NULL:
                                            bt1_entry11.insert(0,0)
                                        else:
                                            bt1_entry11.insert(0,get_bundle_data1[18])
                                        if get_bundle_data1[22] == '' or get_bundle_data1[22] is None or get_bundle_data1[22] == NULL:
                                            bt1_entry12.insert(0,0)
                                        else:
                                            bt1_entry12.insert(0,get_bundle_data1[22])
                                        if get_bundle_data1[26] == '' or get_bundle_data1[26] is None or get_bundle_data1[26] == NULL:
                                            bt1_entry13.insert(0,0)
                                        else:
                                            bt1_entry13.insert(0,get_bundle_data1[26])

                                        bt1_entry14.delete(0,END)
                                        bt1_entry15.delete(0,END)
                                        bt1_entry15.insert(0,get_bundle_data1[7])
                                        bt1_entry16.delete(0,END)
                                        bt1_entry16.insert(0,get_bundle_data1[11])
                                        bt1_entry17.delete(0,END)
                                        bt1_entry17.insert(0,get_bundle_data1[15])
                                        bt1_entry18.delete(0,END)
                                        bt1_entry19.delete(0,END)
                                        bt1_entry20.delete(0,END)
                                        if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                            bt1_entry18.insert(0,0)
                                        else:
                                            bt1_entry18.insert(0,get_bundle_data1[19])
                                        if get_bundle_data1[23] == '' or get_bundle_data1[23] is None or get_bundle_data1[23] == NULL:
                                            bt1_entry19.insert(0,0)
                                        else:
                                            bt1_entry19.insert(0,get_bundle_data1[23])
                                        if get_bundle_data1[27] == '' or get_bundle_data1[27] is None or get_bundle_data1[27] == NULL:
                                            bt1_entry20.insert(0,0)
                                        else:
                                            bt1_entry20.insert(0,get_bundle_data1[27])
                                        
                                        bt1_entry21.delete(0,END)
                                        bt1_entry22.delete(0,END)
                                        bt1_entry22.insert(0,get_bundle_data1[8])
                                        bt1_entry23.delete(0,END)
                                        bt1_entry23.insert(0,get_bundle_data1[12])
                                        bt1_entry24.delete(0,END)
                                        bt1_entry24.insert(0,get_bundle_data1[16])
                                        bt1_entry25.delete(0,END)
                                        bt1_entry26.delete(0,END)
                                        bt1_entry27.delete(0,END)
                                        bt1_entry28.delete(0,END)
                                        if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                            bt1_entry25.insert(0,0)
                                        else:
                                            bt1_entry25.insert(0,get_bundle_data1[20])
                                        if get_bundle_data1[24] == '' or get_bundle_data1[24] is None or get_bundle_data1[24] == NULL:
                                            bt1_entry26.insert(0,0)
                                        else:
                                            bt1_entry26.insert(0,get_bundle_data1[24])
                                        if get_bundle_data1[28] == '' or get_bundle_data1[28] is None or get_bundle_data1[28] == NULL:
                                            bt1_entry27.insert(0,0)
                                        else:
                                            bt1_entry27.insert(0,get_bundle_data1[28])
                                        
                                        if comp_data[4] == cn_pofsupply.get():
                                            if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                bt1_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry7.insert(0,f'{get_bundle_data1[29]}% GST({get_bundle_data1[29]}%)')
                                            if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                bt1_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry14.insert(0,f'{get_bundle_data1[30]}% GST({get_bundle_data1[30]}%)')
                                            if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                bt1_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry21.insert(0,f'{get_bundle_data1[31]}% GST({get_bundle_data1[31]}%)')
                                            if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                bt1_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt1_entry28.insert(0,f'{get_bundle_data1[32]}% GST({get_bundle_data1[32]}%)')
                                        elif comp_data[4] != cn_pofsupply.get():
                                            if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                bt1_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry7.insert(0,f'{get_bundle_data1[29]}% IGST({get_bundle_data1[29]}%)')
                                            if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                bt1_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry14.insert(0,f'{get_bundle_data1[30]}% IGST({get_bundle_data1[30]}%)')
                                            if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                bt1_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry21.insert(0,f'{get_bundle_data1[31]}% IGST({get_bundle_data1[31]}%)')
                                            if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                bt1_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt1_entry28.insert(0,f'{get_bundle_data1[32]}% IGST({get_bundle_data1[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data1[17]) * int(cnt_entry3.get())
                                        if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data1[18]) * int(cnt_entry3.get())
                                        if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data1[19]) * int(cnt_entry3.get())
                                        if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data1[20]) * int(cnt_entry3.get())
                                        
                                    except:
                                        pass

                                    
                                    bt1_entry4.delete(0,END)
                                    bt1_entry4.insert(0,qty1)
                                    bt1_entry11.delete(0,END)
                                    bt1_entry11.insert(0,qty2)
                                    bt1_entry18.delete(0,END)
                                    bt1_entry18.insert(0,qty3)
                                    bt1_entry25.delete(0,END)
                                    bt1_entry25.insert(0,qty4)

                                    tot1 = int(bt1_entry4.get()) * int(float(bt1_entry5.get()))
                                    tot2 = int(bt1_entry11.get()) * int(float(bt1_entry12.get()))
                                    tot3 = int(bt1_entry18.get()) * int(float(bt1_entry19.get()))
                                    tot4 = int(bt1_entry25.get()) * int(float(bt1_entry26.get()))

                                    bt1_entry6.delete(0,END)
                                    bt1_entry6.insert(0,tot1)
                                    bt1_entry13.delete(0,END)
                                    bt1_entry13.insert(0,tot2)
                                    bt1_entry20.delete(0,END)
                                    bt1_entry20.insert(0,tot3)
                                    bt1_entry27.delete(0,END)
                                    bt1_entry27.insert(0,tot4)
                                elif b == 2:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry10.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt2_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry1,tags=("entry1"))

                                    bt2_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry2,tags=("entry2"))

                                    bt2_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry3,tags=("entry3"))

                                    bt2_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry4,tags=("entry4"))

                                    bt2_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry5,tags=("entry5"))

                                    bt2_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry6,tags=("entry6"))

                                    bt2_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry7,tags=("combo1"))

                                    bt2_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry8,tags=("entry7"))

                                    bt2_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry9,tags=("entry8"))

                                    bt2_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry10,tags=("entry9"))

                                    bt2_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry11,tags=("entry10"))

                                    bt2_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry12,tags=("entry11"))

                                    bt2_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry13,tags=("entry12"))

                                    bt2_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry14,tags=("combo2"))

                                    bt2_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry15,tags=("entry13"))

                                    bt2_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry16,tags=("entry14"))

                                    bt2_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry17,tags=("entry15"))

                                    bt2_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry18,tags=("entry16"))

                                    bt2_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry19,tags=("entry17"))

                                    bt2_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry20,tags=("entry18"))

                                    bt2_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry21,tags=("combo3"))

                                    bt2_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry22,tags=("entry19"))

                                    bt2_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry23,tags=("entry20"))

                                    bt2_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry24,tags=("entry21"))

                                    bt2_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry25,tags=("entry22"))

                                    bt2_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry26,tags=("entry23"))

                                    bt2_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry27,tags=("entry24"))

                                    bt2_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt2_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt2_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val2 = (cnt_entry10.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql2,get_bundle_val2)
                                        get_bundle_data2 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt2_entry1.delete(0,END)
                                        bt2_entry1.insert(0,get_bundle_data2[5])
                                        bt2_entry2.delete(0,END)
                                        bt2_entry2.insert(0,get_bundle_data2[9])
                                        bt2_entry3.delete(0,END)
                                        bt2_entry3.insert(0,get_bundle_data2[13])
                                        bt2_entry4.delete(0,END)
                                        bt2_entry5.delete(0,END)
                                        bt2_entry6.delete(0,END)
                                        if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                            bt2_entry4.insert(0,0)
                                        else:
                                            bt2_entry4.insert(0,get_bundle_data2[17])
                                        if get_bundle_data2[21] == '' or get_bundle_data2[21] is None or get_bundle_data2[21] == NULL:
                                            bt2_entry5.insert(0,0)
                                        else:
                                            bt2_entry5.insert(0,get_bundle_data2[21])
                                        if get_bundle_data2[25] == '' or get_bundle_data2[25] is None or get_bundle_data2[25] == NULL:
                                            bt2_entry6.insert(0,0)
                                        else:
                                            bt2_entry6.insert(0,get_bundle_data2[25])

                                        bt2_entry7.delete(0,END)
                                        bt2_entry8.delete(0,END)
                                        bt2_entry8.insert(0,get_bundle_data2[6])
                                        bt2_entry9.delete(0,END)
                                        bt2_entry9.insert(0,get_bundle_data2[10])
                                        bt2_entry10.delete(0,END)
                                        bt2_entry10.insert(0,get_bundle_data2[14])
                                        bt2_entry11.delete(0,END)
                                        bt2_entry12.delete(0,END)
                                        bt2_entry13.delete(0,END)
                                        if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[22] == NULL:
                                            bt2_entry11.insert(0,0)
                                        else:
                                            bt2_entry11.insert(0,get_bundle_data2[18])
                                        if get_bundle_data2[22] == '' or get_bundle_data2[22] is None or get_bundle_data2[22] == NULL:
                                            bt2_entry12.insert(0,0)
                                        else:
                                            bt2_entry12.insert(0,get_bundle_data2[22])
                                        if get_bundle_data2[26] == '' or get_bundle_data2[26] is None or get_bundle_data2[26] == NULL:
                                            bt2_entry13.insert(0,0)
                                        else:
                                            bt2_entry13.insert(0,get_bundle_data2[26])

                                        bt2_entry14.delete(0,END)
                                        bt2_entry15.delete(0,END)
                                        bt2_entry15.insert(0,get_bundle_data2[7])
                                        bt2_entry16.delete(0,END)
                                        bt2_entry16.insert(0,get_bundle_data2[11])
                                        bt2_entry17.delete(0,END)
                                        bt2_entry17.insert(0,get_bundle_data2[15])
                                        bt2_entry18.delete(0,END)
                                        bt2_entry19.delete(0,END)
                                        bt2_entry20.delete(0,END)
                                        if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                            bt2_entry18.insert(0,0)
                                        else:
                                            bt2_entry18.insert(0,get_bundle_data2[19])
                                        if get_bundle_data2[23] == '' or get_bundle_data2[23] is None or get_bundle_data2[23] == NULL:
                                            bt2_entry19.insert(0,0)
                                        else:
                                            bt2_entry19.insert(0,get_bundle_data2[23])
                                        if get_bundle_data2[27] == '' or get_bundle_data2[27] is None or get_bundle_data2[27] == NULL:
                                            bt2_entry20.insert(0,0)
                                        else:
                                            bt2_entry20.insert(0,get_bundle_data2[27])
                                        bt2_entry21.delete(0,END)
                                        bt2_entry22.delete(0,END)
                                        bt2_entry22.insert(0,get_bundle_data2[8])
                                        bt2_entry23.delete(0,END)
                                        bt2_entry23.insert(0,get_bundle_data2[12])
                                        bt2_entry24.delete(0,END)
                                        bt2_entry24.insert(0,get_bundle_data2[16])
                                        bt2_entry25.delete(0,END)
                                        bt2_entry26.delete(0,END)
                                        bt2_entry27.delete(0,END)
                                        bt2_entry28.delete(0,END)
                                        if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                            bt2_entry25.insert(0,0)
                                        else:
                                            bt2_entry25.insert(0,get_bundle_data2[20])
                                        if get_bundle_data2[24] == '' or get_bundle_data2[24] is None or get_bundle_data2[24] == NULL:
                                            bt2_entry26.insert(0,0)
                                        else:
                                            bt2_entry26.insert(0,get_bundle_data2[24])
                                        if get_bundle_data2[28] == '' or get_bundle_data2[28] is None or get_bundle_data2[28] == NULL:
                                            bt2_entry27.insert(0,0)
                                        else:
                                            bt2_entry27.insert(0,get_bundle_data2[28])

                                        if comp_data[4] == cn_pofsupply.get():
                                            if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                bt2_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry7.insert(0,f'{get_bundle_data2[29]}% GST({get_bundle_data2[29]}%)')
                                            if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                bt2_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry14.insert(0,f'{get_bundle_data2[30]}% GST({get_bundle_data2[30]}%)')
                                            if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                bt2_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry21.insert(0,f'{get_bundle_data2[31]}% GST({get_bundle_data2[31]}%)')
                                            if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                bt2_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt2_entry28.insert(0,f'{get_bundle_data2[32]}% GST({get_bundle_data2[32]}%)')
                                        elif comp_data[4] != cn_pofsupply.get():
                                            if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                bt2_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry7.insert(0,f'{get_bundle_data2[29]}% IGST({get_bundle_data2[29]}%)')
                                            if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                bt2_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry14.insert(0,f'{get_bundle_data2[30]}% IGST({get_bundle_data2[30]}%)')
                                            if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                bt2_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry21.insert(0,f'{get_bundle_data2[31]}% IGST({get_bundle_data2[31]}%)')
                                            if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                bt2_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt2_entry28.insert(0,f'{get_bundle_data2[32]}% IGST({get_bundle_data2[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data2[17]) * int(cnt_entry12.get())
                                        if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data2[18]) * int(cnt_entry12.get())
                                        if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data2[19]) * int(cnt_entry12.get())
                                        if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data2[20]) * int(cnt_entry12.get())
                                        
                                    except:
                                        pass

                                    
                                    bt2_entry4.delete(0,END)
                                    bt2_entry4.insert(0,qty1)
                                    bt2_entry11.delete(0,END)
                                    bt2_entry11.insert(0,qty2)
                                    bt2_entry18.delete(0,END)
                                    bt2_entry18.insert(0,qty3)
                                    bt2_entry25.delete(0,END)
                                    bt2_entry25.insert(0,qty4)

                                    tot1 = int(bt2_entry4.get()) * int(float(bt2_entry5.get()))
                                    tot2 = int(bt2_entry11.get()) * int(float(bt2_entry12.get()))
                                    tot3 = int(bt2_entry18.get()) * int(float(bt2_entry19.get()))
                                    tot4 = int(bt2_entry25.get()) * int(float(bt2_entry26.get()))

                                    bt2_entry6.delete(0,END)
                                    bt2_entry6.insert(0,tot1)
                                    bt2_entry13.delete(0,END)
                                    bt2_entry13.insert(0,tot2)
                                    bt2_entry20.delete(0,END)
                                    bt2_entry20.insert(0,tot3)
                                    bt2_entry27.delete(0,END)
                                    bt2_entry27.insert(0,tot4)
                                elif b == 3:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry16.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt3_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry1,tags=("entry1"))

                                    bt3_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry2,tags=("entry2"))

                                    bt3_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry3,tags=("entry3"))

                                    bt3_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry4,tags=("entry4"))

                                    bt3_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry5,tags=("entry5"))

                                    bt3_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry6,tags=("entry6"))

                                    bt3_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry7,tags=("combo1"))

                                    bt3_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry8,tags=("entry7"))

                                    bt3_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry9,tags=("entry8"))

                                    bt3_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry10,tags=("entry9"))

                                    bt3_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry11,tags=("entry10"))

                                    bt3_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry12,tags=("entry11"))

                                    bt3_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry13,tags=("entry12"))

                                    bt3_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry14,tags=("combo2"))

                                    bt3_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry15,tags=("entry13"))

                                    bt3_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry16,tags=("entry14"))

                                    bt3_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry17,tags=("entry15"))

                                    bt3_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry18,tags=("entry16"))

                                    bt3_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry19,tags=("entry17"))

                                    bt3_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry20,tags=("entry18"))

                                    bt3_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry21,tags=("combo3"))

                                    bt3_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry22,tags=("entry19"))

                                    bt3_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry23,tags=("entry20"))

                                    bt3_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry24,tags=("entry21"))

                                    bt3_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry25,tags=("entry22"))

                                    bt3_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry26,tags=("entry23"))

                                    bt3_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry27,tags=("entry24"))

                                    bt3_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt3_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt3_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val3 = (cnt_entry16.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql3,get_bundle_val3)
                                        get_bundle_data3 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt3_entry1.delete(0,END)
                                        bt3_entry1.insert(0,get_bundle_data3[5])
                                        bt3_entry2.delete(0,END)
                                        bt3_entry2.insert(0,get_bundle_data3[9])
                                        bt3_entry3.delete(0,END)
                                        bt3_entry3.insert(0,get_bundle_data3[13])
                                        bt3_entry4.delete(0,END)
                                        bt3_entry5.delete(0,END)
                                        bt3_entry6.delete(0,END)
                                        if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                            bt3_entry4.insert(0,0)
                                        else:
                                            bt3_entry4.insert(0,get_bundle_data3[17])
                                        if get_bundle_data3[21] == '' or get_bundle_data3[21] is None or get_bundle_data3[21] == NULL:
                                            bt3_entry5.insert(0,0)
                                        else:
                                            bt3_entry5.insert(0,get_bundle_data3[21])
                                        if get_bundle_data3[25] == '' or get_bundle_data3[25] is None or get_bundle_data3[25] == NULL:
                                            bt3_entry6.insert(0,0)
                                        else:
                                            bt3_entry6.insert(0,get_bundle_data3[25])
                                        bt3_entry7.delete(0,END)
                                        bt3_entry8.delete(0,END)
                                        bt3_entry8.insert(0,get_bundle_data3[6])
                                        bt3_entry9.delete(0,END)
                                        bt3_entry9.insert(0,get_bundle_data3[10])
                                        bt3_entry10.delete(0,END)
                                        bt3_entry10.insert(0,get_bundle_data3[14])
                                        bt3_entry11.delete(0,END)
                                        bt3_entry12.delete(0,END)
                                        bt3_entry13.delete(0,END)
                                        if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[22] == NULL:
                                            bt3_entry11.insert(0,0)
                                        else:
                                            bt3_entry11.insert(0,get_bundle_data3[18])
                                        if get_bundle_data3[22] == '' or get_bundle_data3[22] is None or get_bundle_data3[22] == NULL:
                                            bt3_entry12.insert(0,0)
                                        else:
                                            bt3_entry12.insert(0,get_bundle_data3[22])
                                        if get_bundle_data3[26] == '' or get_bundle_data3[26] is None or get_bundle_data3[26] == NULL:
                                            bt3_entry13.insert(0,0)
                                        else:
                                            bt3_entry13.insert(0,get_bundle_data3[26])

                                        bt3_entry14.delete(0,END)
                                        bt3_entry15.delete(0,END)
                                        bt3_entry15.insert(0,get_bundle_data3[7])
                                        bt3_entry16.delete(0,END)
                                        bt3_entry16.insert(0,get_bundle_data3[11])
                                        bt3_entry17.delete(0,END)
                                        bt3_entry17.insert(0,get_bundle_data3[15])
                                        bt3_entry18.delete(0,END)
                                        bt3_entry19.delete(0,END)
                                        bt3_entry20.delete(0,END)
                                        if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                            bt3_entry18.insert(0,0)
                                        else:
                                            bt3_entry18.insert(0,get_bundle_data3[19])
                                        if get_bundle_data3[23] == '' or get_bundle_data3[23] is None or get_bundle_data3[23] == NULL:
                                            bt3_entry19.insert(0,0)
                                        else:
                                            bt3_entry19.insert(0,get_bundle_data3[23])
                                        if get_bundle_data3[27] == '' or get_bundle_data3[27] is None or get_bundle_data3[27] == NULL:
                                            bt3_entry20.insert(0,0)
                                        else:
                                            bt3_entry20.insert(0,get_bundle_data3[27])

                                        bt3_entry21.delete(0,END)
                                        bt3_entry22.delete(0,END)
                                        bt3_entry22.insert(0,get_bundle_data3[8])
                                        bt3_entry23.delete(0,END)
                                        bt3_entry23.insert(0,get_bundle_data3[12])
                                        bt3_entry24.delete(0,END)
                                        bt3_entry24.insert(0,get_bundle_data3[16])
                                        bt3_entry25.delete(0,END)
                                        bt3_entry26.delete(0,END)
                                        bt3_entry27.delete(0,END)
                                        bt3_entry28.delete(0,END)
                                        if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                            bt3_entry25.insert(0,0)
                                        else:
                                            bt3_entry25.insert(0,get_bundle_data3[20])
                                        if get_bundle_data3[24] == '' or get_bundle_data3[24] is None or get_bundle_data3[24] == NULL:
                                            bt3_entry26.insert(0,0)
                                        else:
                                            bt3_entry26.insert(0,get_bundle_data3[24])
                                        if get_bundle_data3[28] == '' or get_bundle_data3[28] is None or get_bundle_data3[28] == NULL:
                                            bt3_entry27.insert(0,0)
                                        else:
                                            bt3_entry27.insert(0,get_bundle_data3[28])


                                        if comp_data[4] == cn_pofsupply.get():
                                            if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                bt3_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry7.insert(0,f'{get_bundle_data3[29]}% GST({get_bundle_data3[29]}%)')
                                            if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                bt3_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry14.insert(0,f'{get_bundle_data3[30]}% GST({get_bundle_data3[30]}%)')
                                            if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                bt3_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry21.insert(0,f'{get_bundle_data3[31]}% GST({get_bundle_data3[31]}%)')
                                            if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                bt3_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt3_entry28.insert(0,f'{get_bundle_data3[32]}% GST({get_bundle_data3[32]}%)')
                                        elif comp_data[4] != cn_pofsupply.get():
                                            if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                bt3_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry7.insert(0,f'{get_bundle_data3[29]}% IGST({get_bundle_data3[29]}%)')
                                            if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                bt3_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry14.insert(0,f'{get_bundle_data3[30]}% IGST({get_bundle_data3[30]}%)')
                                            if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                bt3_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry21.insert(0,f'{get_bundle_data3[31]}% IGST({get_bundle_data3[31]}%)')
                                            if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                bt3_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt3_entry28.insert(0,f'{get_bundle_data3[32]}% IGST({get_bundle_data3[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data3[17]) * int(cnt_entry18.get())
                                        if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data3[18]) * int(cnt_entry18.get())
                                        if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data3[19]) * int(cnt_entry18.get())
                                        if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data3[20]) * int(cnt_entry18.get())
                                        
                                    except:
                                        pass
                                    
                                    bt3_entry4.delete(0,END)
                                    bt3_entry4.insert(0,qty1)
                                    bt3_entry11.delete(0,END)
                                    bt3_entry11.insert(0,qty2)
                                    bt3_entry18.delete(0,END)
                                    bt3_entry18.insert(0,qty3)
                                    bt3_entry25.delete(0,END)
                                    bt3_entry25.insert(0,qty4)

                                    tot1 = int(bt3_entry4.get()) * int(float(bt3_entry5.get()))
                                    tot2 = int(bt3_entry11.get()) * int(float(bt3_entry12.get()))
                                    tot3 = int(bt3_entry18.get()) * int(float(bt3_entry19.get()))
                                    tot4 = int(bt3_entry25.get()) * int(float(bt3_entry26.get()))

                                    bt3_entry6.delete(0,END)
                                    bt3_entry6.insert(0,tot1)
                                    bt3_entry13.delete(0,END)
                                    bt3_entry13.insert(0,tot2)
                                    bt3_entry20.delete(0,END)
                                    bt3_entry20.insert(0,tot3)
                                    bt3_entry27.delete(0,END)
                                    bt3_entry27.insert(0,tot4)
                                else:
                                    bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry22.get(),font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                    bt4_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry1,tags=("entry1"))

                                    bt4_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry2,tags=("entry2"))

                                    bt4_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry3,tags=("entry3"))

                                    bt4_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry4,tags=("entry4"))

                                    bt4_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry5,tags=("entry5"))

                                    bt4_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry6,tags=("entry6"))

                                    bt4_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry7.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry7,tags=("combo1"))

                                    bt4_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry8,tags=("entry7"))

                                    bt4_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry9,tags=("entry8"))

                                    bt4_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry10,tags=("entry9"))

                                    bt4_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry11,tags=("entry10"))

                                    bt4_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry12,tags=("entry11"))

                                    bt4_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry13,tags=("entry12"))

                                    bt4_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry14.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry14,tags=("combo2"))

                                    bt4_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry15,tags=("entry13"))

                                    bt4_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry16,tags=("entry14"))

                                    bt4_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry17,tags=("entry15"))

                                    bt4_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry18,tags=("entry16"))

                                    bt4_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry19,tags=("entry17"))

                                    bt4_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry20,tags=("entry18"))

                                    bt4_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry21.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry21,tags=("combo3"))

                                    bt4_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry22,tags=("entry19"))

                                    bt4_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry23,tags=("entry20"))

                                    bt4_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry24,tags=("entry21"))

                                    bt4_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry25,tags=("entry22"))

                                    bt4_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry26,tags=("entry23"))

                                    bt4_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry27,tags=("entry24"))

                                    bt4_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    bt4_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                    '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                    '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                    bt4_entry28.current(0)
                                    sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry28,tags=("combo4"))

                                    try:
                                        get_bundle_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bundle_val4 = (cnt_entry22.get(),comp_data[0])
                                        fbcursor.execute(get_bundle_sql4,get_bundle_val4)
                                        get_bundle_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        bt4_entry1.delete(0,END)
                                        bt4_entry1.insert(0,get_bundle_data4[5])
                                        bt4_entry2.delete(0,END)
                                        bt4_entry2.insert(0,get_bundle_data4[9])
                                        bt4_entry3.delete(0,END)
                                        bt4_entry3.insert(0,get_bundle_data4[13])
                                        bt4_entry4.delete(0,END)
                                        bt4_entry5.delete(0,END)
                                        bt4_entry6.delete(0,END)
                                        if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                            bt4_entry4.insert(0,0)
                                        else:
                                            bt4_entry4.insert(0,get_bundle_data4[17])
                                        if get_bundle_data4[21] == '' or get_bundle_data4[21] is None or get_bundle_data4[21] == NULL:
                                            bt4_entry5.insert(0,0)
                                        else:
                                            bt4_entry5.insert(0,get_bundle_data4[21])
                                        if get_bundle_data4[25] == '' or get_bundle_data4[25] is None or get_bundle_data4[25] == NULL:
                                            bt4_entry6.insert(0,0)
                                        else:
                                            bt4_entry6.insert(0,get_bundle_data4[25])
                                        bt4_entry7.delete(0,END)
                                        bt4_entry8.delete(0,END)
                                        bt4_entry8.insert(0,get_bundle_data4[6])
                                        bt4_entry9.delete(0,END)
                                        bt4_entry9.insert(0,get_bundle_data4[10])
                                        bt4_entry10.delete(0,END)
                                        bt4_entry10.insert(0,get_bundle_data4[14])
                                        bt4_entry11.delete(0,END)
                                        bt4_entry12.delete(0,END)
                                        bt4_entry13.delete(0,END)
                                        if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[22] == NULL:
                                            bt4_entry11.insert(0,0)
                                        else:
                                            bt4_entry11.insert(0,get_bundle_data4[18])
                                        if get_bundle_data4[22] == '' or get_bundle_data4[22] is None or get_bundle_data4[22] == NULL:
                                            bt4_entry12.insert(0,0)
                                        else:
                                            bt4_entry12.insert(0,get_bundle_data4[22])
                                        if get_bundle_data4[26] == '' or get_bundle_data4[26] is None or get_bundle_data4[26] == NULL:
                                            bt4_entry13.insert(0,0)
                                        else:
                                            bt4_entry13.insert(0,get_bundle_data4[26])
                                        bt4_entry14.delete(0,END)
                                        bt4_entry15.delete(0,END)
                                        bt4_entry15.insert(0,get_bundle_data4[7])
                                        bt4_entry16.delete(0,END)
                                        bt4_entry16.insert(0,get_bundle_data4[11])
                                        bt4_entry17.delete(0,END)
                                        bt4_entry17.insert(0,get_bundle_data4[15])
                                        bt4_entry18.delete(0,END)
                                        bt4_entry19.delete(0,END)
                                        bt4_entry20.delete(0,END)
                                        if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                            bt4_entry18.insert(0,0)
                                        else:
                                            bt4_entry18.insert(0,get_bundle_data4[19])
                                        if get_bundle_data4[23] == '' or get_bundle_data4[23] is None or get_bundle_data4[23] == NULL:
                                            bt4_entry19.insert(0,0)
                                        else:
                                            bt4_entry19.insert(0,get_bundle_data4[23])
                                        if get_bundle_data4[27] == '' or get_bundle_data4[27] is None or get_bundle_data4[27] == NULL:
                                            bt4_entry20.insert(0,0)
                                        else:
                                            bt4_entry20.insert(0,get_bundle_data4[27])
                                        bt4_entry21.delete(0,END)
                                        bt4_entry22.delete(0,END)
                                        bt4_entry22.insert(0,get_bundle_data4[8])
                                        bt4_entry23.delete(0,END)
                                        bt4_entry23.insert(0,get_bundle_data4[12])
                                        bt4_entry24.delete(0,END)
                                        bt4_entry24.insert(0,get_bundle_data4[16])
                                        bt4_entry25.delete(0,END)
                                        bt4_entry26.delete(0,END)
                                        bt4_entry27.delete(0,END)
                                        bt4_entry28.delete(0,END)
                                        if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                            bt4_entry25.insert(0,0)
                                        else:
                                            bt4_entry25.insert(0,get_bundle_data4[20])
                                        if get_bundle_data4[24] == '' or get_bundle_data4[24] is None or get_bundle_data4[24] == NULL:
                                            bt4_entry26.insert(0,0)
                                        else:
                                            bt4_entry26.insert(0,get_bundle_data4[24])
                                        if get_bundle_data4[28] == '' or get_bundle_data4[28] is None or get_bundle_data4[28] == NULL:
                                            bt4_entry27.insert(0,0)
                                        else:
                                            bt4_entry27.insert(0,get_bundle_data4[28])

                                        if comp_data[4] == cn_pofsupply.get():
                                            if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                bt4_entry7.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry7.insert(0,f'{get_bundle_data4[29]}% GST({get_bundle_data4[29]}%)')
                                            if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                bt4_entry14.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry14.insert(0,f'{get_bundle_data4[30]}% GST({get_bundle_data4[30]}%)')
                                            if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                bt4_entry21.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry21.insert(0,f'{get_bundle_data4[31]}% GST({get_bundle_data4[31]}%)')
                                            if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                bt4_entry28.insert(0,f'{0}% GST({0}%)')
                                            else:
                                                bt4_entry28.insert(0,f'{get_bundle_data4[32]}% GST({get_bundle_data4[32]}%)')
                                        elif comp_data[4] != cn_pofsupply.get():
                                            if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                bt4_entry7.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry7.insert(0,f'{get_bundle_data4[29]}% IGST({get_bundle_data4[29]}%)')
                                            if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                bt4_entry14.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry14.insert(0,f'{get_bundle_data4[30]}% IGST({get_bundle_data4[30]}%)')
                                            if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                bt4_entry21.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry21.insert(0,f'{get_bundle_data4[31]}% IGST({get_bundle_data4[31]}%)')
                                            if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                bt4_entry28.insert(0,f'{0}% IGST({0}%)')
                                            else:
                                                bt4_entry28.insert(0,f'{get_bundle_data4[32]}% IGST({get_bundle_data4[32]}%)')
                                        else:
                                            pass
                                    except:
                                        pass

                                    try:
                                        if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                            qty1 = 0
                                        else:
                                            qty1 = int(get_bundle_data4[17]) * int(cnt_entry24.get())
                                        if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[18] == NULL:
                                            qty2 = 0
                                        else:
                                            qty2 = int(get_bundle_data4[18]) * int(cnt_entry24.get())
                                        if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                            qty3 = 0
                                        else:
                                            qty3 = int(get_bundle_data4[19]) * int(cnt_entry24.get())
                                        if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                            qty4 = 0
                                        else:
                                            qty4 = int(get_bundle_data4[20]) * int(cnt_entry24.get())
                                        
                                    except:
                                        pass
                                    
                                    bt4_entry4.delete(0,END)
                                    bt4_entry4.insert(0,qty1)
                                    bt4_entry11.delete(0,END)
                                    bt4_entry11.insert(0,qty2)
                                    bt4_entry18.delete(0,END)
                                    bt4_entry18.insert(0,qty3)
                                    bt4_entry25.delete(0,END)
                                    bt4_entry25.insert(0,qty4)

                                    tot1 = int(bt4_entry4.get()) * int(float(bt4_entry5.get()))
                                    tot2 = int(bt4_entry11.get()) * int(float(bt4_entry12.get()))
                                    tot3 = int(bt4_entry18.get()) * int(float(bt4_entry19.get()))
                                    tot4 = int(bt4_entry25.get()) * int(float(bt4_entry26.get()))

                                    bt4_entry6.delete(0,END)
                                    bt4_entry6.insert(0,tot1)
                                    bt4_entry13.delete(0,END)
                                    bt4_entry13.insert(0,tot2)
                                    bt4_entry20.delete(0,END)
                                    bt4_entry20.insert(0,tot3)
                                    bt4_entry27.delete(0,END)
                                    bt4_entry27.insert(0,tot4)

                            cnt_entry1 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry1["values"] = cn_product_list
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry1,tags=("combo20"))

                            cnt_entry2 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry2,tags=("entry57"))

                            def cnt_calculateTotal1(event,s):
                                    
                                # try:
                                    if s == 1:
                                        name =  cnt_entry1.get()
                                        qty = cnt_entry3.get()
                                    elif s == 2:
                                        name = cnt_entry10.get()
                                        qty = cnt_entry12.get()
                                    elif s == 3:
                                        name = cnt_entry16.get()
                                        qty = cnt_entry18.get()
                                    elif s == 4:
                                        name = cnt_entry22.get()
                                        qty = cnt_entry24.get()


                                    if qty != 0:
                                        global tax_tot1,tax_tot2,tax_tot3,tax_tot4,b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4
                                        tax_tot1 = 0.0
                                        tax_tot2 = 0.0
                                        tax_tot3 = 0.0
                                        tax_tot4 = 0.0

                                        b1tax_tot1 = 0.0
                                        b1tax_tot2 = 0.0
                                        b1tax_tot3 = 0.0
                                        b1tax_tot4 = 0.0

                                        b2tax_tot1 = 0.0
                                        b2tax_tot2 = 0.0
                                        b2tax_tot3 = 0.0
                                        b2tax_tot4 = 0.0

                                        b3tax_tot1 = 0.0
                                        b3tax_tot2 = 0.0
                                        b3tax_tot3 = 0.0
                                        b3tax_tot4 = 0.0

                                        b4tax_tot1 = 0.0
                                        b4tax_tot2 = 0.0
                                        b4tax_tot3 = 0.0
                                        b4tax_tot4 = 0.0
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()

                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()

                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()

                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass
                                        if s == 1:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                cnt_entry5.delete(0,END)
                                                cnt_entry5.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                cnt_entry5.delete(0,END)
                                                cnt_entry5.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                cn_view_bundleitems(b=1)
                                        elif s == 2:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                cnt_entry14.delete(0,END)
                                                cnt_entry14.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                cnt_entry14.delete(0,END)
                                                cnt_entry14.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                cn_view_bundleitems(b=2)
                                        elif s == 3:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                cnt_entry20.delete(0,END)
                                                cnt_entry20.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                cnt_entry20.delete(0,END)
                                                cnt_entry20.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                cn_view_bundleitems(b=3)
                                        elif s == 4:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                cnt_entry26.delete(0,END)
                                                cnt_entry26.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                cnt_entry26.delete(0,END)
                                                cnt_entry26.insert(0,tot)
                                            elif get_pro_data2 is not None:
                                                pass
                                            else:
                                                cn_view_bundleitems(b=4)

                                        cnt_entry7.delete(0,END)
                                        cnt_entry8.delete(0,END)
                                        cnt_entry9.delete(0,END)

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2[0]

                                        #product gst -----------------------------
                                        try:
                                            gst_value1 = split_gst(cnt_entry6.get())
                                        except:
                                            pass
                                        try:
                                            gst_value2 = split_gst(cnt_entry15.get())
                                        except:
                                            pass
                                        try:
                                            gst_value3 = split_gst(cnt_entry21.get())
                                        except:
                                            pass
                                        try:
                                            gst_value4 = split_gst(cnt_entry27.get())
                                        except:
                                            pass

                                        #bundle gst ------------------------------ 
                                        try:
                                            bgst_value1 = split_gst(bt1_entry7.get())
                                            bgst_value2 = split_gst(bt1_entry14.get())
                                            bgst_value3 = split_gst(bt1_entry21.get())
                                            bgst_value4 = split_gst(bt1_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value5 = split_gst(bt2_entry7.get())
                                            bgst_value6 = split_gst(bt2_entry14.get())
                                            bgst_value7 = split_gst(bt2_entry21.get())
                                            bgst_value8 = split_gst(bt2_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value9 = split_gst(bt3_entry7.get())
                                            bgst_value10 = split_gst(bt3_entry14.get())
                                            bgst_value11 = split_gst(bt3_entry21.get())
                                            bgst_value12 = split_gst(bt3_entry28.get())
                                        except:
                                            pass
                                        try:
                                            bgst_value13 = split_gst(bt4_entry7.get())
                                            bgst_value14 = split_gst(bt4_entry14.get())
                                            bgst_value15 = split_gst(bt4_entry21.get())
                                            bgst_value16 = split_gst(bt4_entry28.get())
                                        except:
                                            pass

                                        get_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                        get_bun_val = (comp_data[0],)
                                        fbcursor.execute(get_bun_sql,get_bun_val)
                                        get_bun_data = fbcursor.fetchall()
                                        
                                        b_list = []
                                        for g in get_bun_data:
                                            b_list.append(g[0])

                                #=====================================================================================
                                        #Bundle1--------------------------------------------
                                        try:
                                            if bt1_entry7.get() == "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                pass
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                tax_total1 = b1tax_tot1
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() == "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                    b1tax_tot3 = 0
                                                else:
                                                    b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3
                                            elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() != "Choose":
                                                if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                    b1tax_tot1 = 0
                                                else:
                                                    b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                
                                                if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                    b1tax_tot2 = 0
                                                else:
                                                    b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                    b1tax_tot3 = 0
                                                else:
                                                    b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100

                                                if bgst_value4[0] == "0" or bt1_entry28.get() == "Exempt GST(0%)" or bt1_entry28.get() == "Out of Scope(0%)":
                                                    b1tax_tot4 = 0
                                                else:
                                                    b1tax_tot4 = (float(bt1_entry27.get()) * float(float((bgst_value4[0]))))/100
                                                tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3 + b1tax_tot4
                                        except:
                                            pass

                                        #Bundle2--------------------------------------------
                                        try:
                                            if bt2_entry7.get() == "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                pass
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                tax_total2 = b2tax_tot1
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() == "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                    b2tax_tot3 = 0
                                                else:
                                                    b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3
                                            elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() != "Choose":
                                                if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                    b2tax_tot1 = 0
                                                else:
                                                    b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                
                                                if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                    b2tax_tot2 = 0
                                                else:
                                                    b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                    b2tax_tot3 = 0
                                                else:
                                                    b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100

                                                if bgst_value8[0] == "0" or bt2_entry28.get() == "Exempt GST(0%)" or bt2_entry28.get() == "Out of Scope(0%)":
                                                    b2tax_tot4 = 0
                                                else:
                                                    b2tax_tot4 = (float(bt2_entry27.get()) * float(float((bgst_value8[0]))))/100
                                                tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3 + b2tax_tot4
                                        except:
                                            pass

                                        #Bundle3--------------------------------------------
                                        try:
                                            if bt3_entry7.get() == "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                pass
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                tax_total3 = b3tax_tot1
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() == "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                    b3tax_tot3 = 0
                                                else:
                                                    b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3
                                            elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() != "Choose":
                                                if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                    b3tax_tot1 = 0
                                                else:
                                                    b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                
                                                if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                    b3tax_tot2 = 0
                                                else:
                                                    b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                    b3tax_tot3 = 0
                                                else:
                                                    b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100

                                                if bgst_value12[0] == "0" or bt3_entry28.get() == "Exempt GST(0%)" or bt3_entry28.get() == "Out of Scope(0%)":
                                                    b3tax_tot4 = 0
                                                else:
                                                    b3tax_tot4 = (float(bt3_entry27.get()) * float(float((bgst_value12[0]))))/100
                                                tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3 + b3tax_tot4
                                        except:
                                            pass

                                        #Bundle4--------------------------------------------
                                        try:
                                            if bt4_entry7.get() == "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                pass
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                tax_total4 = b4tax_tot1
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() == "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                    b4tax_tot3 = 0
                                                else:
                                                    b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3
                                            elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() != "Choose":
                                                if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                    b4tax_tot1 = 0
                                                else:
                                                    b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                
                                                if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                    b4tax_tot2 = 0
                                                else:
                                                    b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                    b4tax_tot3 = 0
                                                else:
                                                    b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100

                                                if bgst_value16[0] == "0" or bt4_entry28.get() == "Exempt GST(0%)" or bt4_entry28.get() == "Out of Scope(0%)":
                                                    b4tax_tot4 = 0
                                                else:
                                                    b4tax_tot4 = (float(bt4_entry27.get()) * float(float((bgst_value16[0]))))/100
                                                tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3 + b4tax_tot4
                                        except:
                                            pass

                                #=============================================================================================

                                        #All products ----------------------------------------------------------------------------------------
                                        if cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + float(cnt_entry20.get()) + float(cnt_entry26.get()))
                                            if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                            cnt_entry8.insert(0,ptax_total)

                                        #All bundles -----------------------------------------------------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + b2_tot + b3_tot + b4_tot)

                                            cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total3 + tax_total4)

                                        #First row bundle-----------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                            #Rest products--------------------------------------
                                            if cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":                                               
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":                                              
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            cnt_entry8.insert(0,tax_total1 + ptax_total)

                                        #First and Second row Bundle -------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + b2_tot + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                            #Rest products--------------------------------------
                                            if cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4

                                            cnt_entry8.insert(0,tax_total1 + tax_total2 + ptax_total)

                                        #First,Second and Third row Bundle -------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + b2_tot + b3_tot + float(cnt_entry26.get()))

                                            #Rest products--------------------------------------
                                            if cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry27.get() != "Choose":
                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total3 + ptax_total)
                                        
                                        #Second row Bundle------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                            if cnt_entry6.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            cnt_entry8.insert(0,tax_total2 + ptax_total)

                                        #Second,Third row Bundle------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + b3_tot + float(cnt_entry26.get()))

                                            if cnt_entry6.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            cnt_entry8.insert(0,tax_total2 + tax_total3 + ptax_total)

                                        #Second,Fourth row Bundle------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + float(cnt_entry20.get()) + b4_tot)

                                            if cnt_entry6.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry21.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            cnt_entry8.insert(0,tax_total2 + tax_total4 + ptax_total)

                                        #Second,Third and Fourth row Bundle------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + b3_tot + b4_tot)

                                            if cnt_entry6.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            cnt_entry8.insert(0,tax_total2 + tax_total3 + tax_total4 + ptax_total)
                                        
                                        #Third row Bundle---------------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + b3_tot + float(cnt_entry26.get()))

                                            if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            
                                            cnt_entry8.insert(0,tax_total3 + ptax_total)

                                        #Third,first row Bundle---------------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + b3_tot + float(cnt_entry26.get()))

                                            if cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry15.get() != "Choose" and cnt_entry27.get() == "Choose":                                            
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cnt_entry15.get() != "Choose" and cnt_entry27.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            
                                            cnt_entry8.insert(0,tax_total1 + tax_total3 + ptax_total)

                                        #Third,fourth row Bundle---------------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + b3_tot + b4_tot)

                                            if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            
                                            cnt_entry8.insert(0,tax_total3 + tax_total4 + ptax_total)

                                        #Third,first and fourth row Bundle---------------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + b3_tot + b4_tot)

                                            if cnt_entry15.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry15.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            
                                            cnt_entry8.insert(0,tax_total1 + tax_total3 + tax_total4 + ptax_total)

                                        #Fourth row Bundle -----------------------------------------------------
                                        elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + float(cnt_entry20.get()) + b4_tot)

                                            if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose":
                                                if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            cnt_entry8.insert(0,tax_total4 + ptax_total)

                                        #Fourth,First row Bundle -----------------------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + float(cnt_entry20.get()) + b4_tot)

                                            if cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose":                                            
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose":                                            
                                                if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            cnt_entry8.insert(0,tax_total1 + tax_total4 + ptax_total)

                                        #Fourth,First and Second row Bundle -----------------------------------------------------
                                        elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                            b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                            b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                            b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                            cnt_entry7.insert(0,b1_tot + b2_tot + float(cnt_entry20.get()) + b4_tot)

                                            if cnt_entry21.get() == "Choose":
                                                ptax_total = 0
                                            elif cnt_entry21.get() != "Choose":
                                                if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total4 + ptax_total)
                                        cnt_entry9.insert(0,float(cnt_entry7.get()) + float(float(cnt_entry8.get())))
                                        print(tax_total1)
                                        print(tax_total2)
                                        print(tax_total4)
                                        print(ptax_total)

                                    else:
                                        pass

                                    

                                    
                                
                                # except:
                                #     pass
                            
                            cnt_entry3 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry3.bind("<Key>",lambda event,sp = 1:cnt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry3,tags=("entry58"))

                            cnt_entry4 = Entry(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry4,tags=("entry59"))

                            cnt_entry5 = Entry(sr_Canvas_1,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry5.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry5,tags=("entry60"))

                            cnt_entry6 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                            cnt_entry6["values"] = cplace_gstlist
                            cnt_entry6.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry6,tags=("combo21"))

                            cnt_button1 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b1 = 1:cn_view_bundleitems(b1))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button1,tags=("button12"))

                            cnt_entry10 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry10["values"] = cn_product_list
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry10,tags=("combo22"))

                            cnt_entry11 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry11,tags=("entry61"))

                            cnt_entry12 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry12.bind("<Key>",lambda event,sp = 2:cnt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry12,tags=("entry62"))

                            cnt_entry13 = Entry(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry13,tags=("entry63"))

                            cnt_entry14 = Entry(sr_Canvas_1,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry14.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry14,tags=("entry64"))

                            cnt_entry15 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry15["values"] = cplace_gstlist
                            cnt_entry15.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry15,tags=("combo23"))

                            cnt_button2 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b2 = 2:cn_view_bundleitems(b2))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button2,tags=("button13"))

                            cnt_entry16 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry16["values"] = cn_product_list
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry16,tags=("combo24"))

                            cnt_entry17 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry17,tags=("entry65"))

                            cnt_entry18 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry18.bind("<Key>",lambda event,sp = 3:cnt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry18,tags=("entry66"))

                            cnt_entry19 = Entry(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry19,tags=("entry67"))

                            cnt_entry20 = Entry(sr_Canvas_1,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry20.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry20,tags=("entry68"))

                            cnt_entry21 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry21["values"] = cplace_gstlist
                            cnt_entry21.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry21,tags=("combo25"))

                            cnt_button3 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b3 = 3:cn_view_bundleitems(b3))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button3,tags=("button14"))

                            cnt_entry22 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry22["values"] = cn_product_list
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry22,tags=("combo26"))

                            cnt_entry23 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry23,tags=("entry69"))

                            cnt_entry24 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry24.bind("<Key>",lambda event,sp = 4:cnt_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry24,tags=("entry70"))

                            cnt_entry25 = Entry(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry25,tags=("entry71"))

                            cnt_entry26 = Entry(sr_Canvas_1,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                            cnt_entry26.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry26,tags=("entry72"))

                            cnt_entry27 = ttk.Combobox(sr_Canvas_1,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                            cnt_entry27["values"] = cplace_gstlist
                            cnt_entry27.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=cnt_entry27,tags=("combo27"))

                            cnt_button4 = Button(sr_Canvas_1,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b4 = 4:cn_view_bundleitems(b4))
                            sr_Canvas_1.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button4,tags=("button15"))

                            # cn_label31 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            # sr_Canvas_1.create_window(0,0,window=cn_label31,state=HIDDEN,tags=('label82'))

                            # cn_label32 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            # sr_Canvas_1.create_window(0,0,window=cn_label32,state=HIDDEN,tags=('label83'))

                            # cn_label33 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            # sr_Canvas_1.create_window(0,0,window=cn_label33,state=HIDDEN,tags=('label84'))

                            # cn_label34 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            # sr_Canvas_1.create_window(0,0,window=cn_label34,state=HIDDEN,tags=('label85'))

                            cn_label25 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label25,tags=('label40'))

                            cn_label26 = Label(sr_Canvas_1,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label26,tags=('label41'))

                            cn_label27 = Label(sr_Canvas_1,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label27,tags=('label42'))

                            cnt_entry7 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry7,tags=("entry23"))

                            cnt_entry8 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry8,tags=("entry24"))

                            cnt_entry9 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=cnt_entry9,tags=("entry25"))

                            def cn_saveCreditnote():
                                get_credit_sql = "SELECT * FROM app1_credit ORDER BY creditnoteid DESC LIMIT 1"
                                fbcursor.execute(get_credit_sql)
                                get_credit_data = fbcursor.fetchone()

                                def split_gst(string):
                                    pattern1 = r'\(+'
                                    pattern2 = r'\%+'
                                    split1 = re.split(pattern1,string)
                                    split2 = re.split(pattern2,split1[1])
                                    return split2[0]

                                customer = cn_custCombo.get()
                                mail = cn_email.get()
                                biladdr = cn_baddress.get("1.0","end-1c")
                                creditdate = cn_creditdate.get_date()
                                place = cn_pofsupply.get()

                                if not get_credit_data:
                                    creditno = "1001"
                                else:
                                    creditno = int(get_credit_data[5]) + 1
                                
                                invnum = (cn_invoiceno.get()).split(' - ')[0]
                                subtot = cnt_entry7.get()
                                try:
                                    tax = split_gst(cnt_entry6.get())
                                except:
                                    tax = 0
                                taxamnt = cnt_entry8.get()
                                grndtot = cnt_entry9.get()
                                product = cnt_entry1.get()
                                descrip = cnt_entry2.get()
                                qty = cnt_entry3.get()
                                price = cnt_entry4.get()
                                total = cnt_entry5.get()
                                product1 = cnt_entry10.get()
                                descrip1 = cnt_entry11.get()
                                qty1 = cnt_entry12.get()
                                price1 = cnt_entry13.get()
                                total1 = cnt_entry14.get()
                                try:
                                    tax1 = split_gst(cnt_entry15.get()) 
                                except:
                                    tax1 = 0
                                product2 = cnt_entry16.get()
                                descrip2 = cnt_entry17.get()
                                qty2 = cnt_entry18.get()
                                price2 = cnt_entry19.get()
                                total2 = cnt_entry20.get()
                                try:
                                    tax2 = split_gst(cnt_entry21.get())
                                except:
                                    tax2 = 0
                                product3 = cnt_entry22.get()
                                descrip3 = cnt_entry23.get()
                                qty3 = cnt_entry24.get()
                                price3 = cnt_entry25.get()
                                total3 = cnt_entry26.get()
                                try:
                                    tax3 = split_gst(cnt_entry27.get())
                                except:
                                    tax3 = 0
                                cid_id = comp_data[0]

                                if customer == "Select Customer" or customer == '' or place == '' or cn_invoiceno.get() == 'Select Invoice No':
                                    pass
                                else:
                                    ins_credit_sql = "INSERT INTO app1_credit(customer,mail,biladdr,creditdate,place,creditno,invnum,subtot,tax,taxamnt,grndtot,product,descrip,qty,price,total,product1,descrip1,qty1,price1,total1,tax1,product2,descrip2,qty2,price2,total2,tax2,product3,descrip3,qty3,price3,total3,tax3,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_credit_val = (customer,mail,biladdr,creditdate,place,creditno,invnum,subtot,tax,taxamnt,grndtot,product,descrip,qty,price,total,product1,descrip1,qty1,price1,total1,tax1,product2,descrip2,qty2,price2,total2,tax2,product3,descrip3,qty3,price3,total3,tax3,cid_id)
                                    fbcursor.execute(ins_credit_sql,ins_credit_val)
                                    finsysdb.commit()

                                    get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                    get_accts1_val = ('Account Receivable(Debtors)',comp_data[0])
                                    fbcursor.execute(get_accts1_sql,get_accts1_val)
                                    get_accts1_data = fbcursor.fetchone()

                                    if not get_accts1_data:
                                        pass
                                    else:
                                        if grndtot != 0:
                                            upd_bal = get_accts1_data[0] - float(grndtot)
                                            upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                            upd_accts1_val = (upd_bal,'Account Receivable(Debtors)',comp_data[0])
                                            fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                            finsysdb.commit()
                                        else:
                                            pass
                                    try:
                                        lth=tax_tot1
                                    except:
                                        lth=0.0

                                    try:
                                        lth1=tax_tot2
                                    except:
                                        lth1=0.0

                                    try:
                                        lth2=tax_tot3
                                    except:
                                        lth2=0.0
                                    try:
                                        lth3=tax_tot4
                                    except:
                                        lth3=0.0

                                    tax_amounts = [lth,lth1,lth2,lth3]
                                    quantities = [qty,qty1,qty2,qty3]
                                    totals = [total,total1,total2,total3]
                                    products = [product,product1,product2,product3]
                                    

                                    for (p,q,t,tx) in zip(products,quantities,totals,tax_amounts):
                                        try:
                                            get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_invent_val = (p,comp_data[0])
                                            fbcursor.execute(get_invent_sql,get_invent_val)
                                            get_invent_data = fbcursor.fetchone()

                                            if not get_invent_data:
                                                pass
                                            else:
                                                initial_qty = int(get_invent_data[7]) + int(q)

                                                upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                upd_invent_val = (initial_qty,p,comp_data[0])
                                                fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                finsysdb.commit()

                                                newcost = float(get_invent_data[16]) * float(q)

                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                get_accts1_data1 = fbcursor.fetchone()

                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                get_accts_data1 = fbcursor.fetchone()

                                                if not get_accts_data1 and not get_accts1_data1:
                                                    pass
                                                elif get_accts1_data1:
                                                    upd_bal1 = get_accts1_data1[0] + float(newcost)
                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                    finsysdb.commit()
                                                elif get_accts_data1:
                                                    upd_bal1 = get_accts_data1[0] + float(newcost)
                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                #----------------------------------------------------------
                                                get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                get_accts1_data2 = fbcursor.fetchone()

                                                get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                get_accts_data2 = fbcursor.fetchone()

                                                if not get_accts_data2 and not get_accts1_data2:
                                                    pass
                                                elif get_accts1_data2:
                                                    upd_bal2 = get_accts1_data2[0] - float(t)
                                                    upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                    finsysdb.commit()
                                                elif get_accts_data2:
                                                    upd_bal2 = get_accts_data2[0] - float(t)
                                                    upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                #---------------------------------------------------
                                                get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                get_accts1_data3 = fbcursor.fetchone()

                                                get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                get_accts_data3= fbcursor.fetchone()

                                                if not get_accts_data3 and not get_accts1_data3:
                                                    pass
                                                elif get_accts1_data3:
                                                    upd_bal3 = get_accts1_data3[0] - float(newcost)
                                                    upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                    finsysdb.commit()
                                                elif get_accts_data3:
                                                    upd_bal3 = get_accts_data3[0] - float(newcost)
                                                    upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                try:
                                                    if place == comp_data[4]:
                                                        tax = tx/2
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] - tax
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()

                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                        get_accts1_data5 = fbcursor.fetchone()

                                                        upd_bal5 = get_accts1_data5[0] - tax
                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                        finsysdb.commit()
                                                    else:
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] - tx
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()
                                                except:
                                                    pass
                                        except:
                                            pass

                                        try:
                                            get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_noninvent_val = (p,comp_data[0])
                                            fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                            get_noninvent_data = fbcursor.fetchone()

                                            if not get_noninvent_data:
                                                pass
                                            else:
                                                qty = int(get_noninvent_data[17]) + int(q)

                                                upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                upd_noninvent_val = (qty,p,comp_data[0])
                                                fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                finsysdb.commit()

                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                get_accts1_data1 = fbcursor.fetchone()

                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                get_accts_data1 = fbcursor.fetchone()

                                                if not get_accts_data1 and not get_accts1_data1:
                                                    pass
                                                elif get_accts1_data1:
                                                    upd_bal1 = get_accts1_data1[0] - float(t)
                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                    finsysdb.commit()
                                                elif get_accts_data1:
                                                    upd_bal1 = get_accts_data1[0] - float(t)
                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                                try:
                                                    if place == comp_data[4]:
                                                        tax = tx/2
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] - tax
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()

                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                        get_accts1_data5 = fbcursor.fetchone()

                                                        upd_bal5 = get_accts1_data5[0] - tax
                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                        finsysdb.commit()
                                                    else:
                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                        get_accts1_data4 = fbcursor.fetchone()

                                                        upd_bal4 = get_accts1_data4[0] - tx
                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                        finsysdb.commit()
                                                except:
                                                    pass

                                        except:
                                            pass

                                    #-------------------------------------------------------------

                                    try:
                                        get_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val1 = (cnt_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql1,get_bun_val1)
                                        get_bun_data1 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val2 = (cnt_entry10.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql2,get_bun_val2)
                                        get_bun_data2 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val3 = (cnt_entry16.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql3,get_bun_val3)
                                        get_bun_data3 = fbcursor.fetchone()
                                    except:
                                        pass
                                    try:
                                        get_bun_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                        get_bun_val4 = (cnt_entry22.get(),comp_data[0])
                                        fbcursor.execute(get_bun_sql4,get_bun_val4)
                                        get_bun_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get(),]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get(),]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get(),]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                        btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                        b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                        b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                        bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                        bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                        bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                        btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                        bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                        bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                        bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                        bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                        bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                    else:
                                        pass
                                    
                                    try:
                                        for (p,q,t,tx) in zip(bproducts,bqty,btotals,btax_amount):
                                            try:
                                                get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                get_invent_val = (p,comp_data[0])
                                                fbcursor.execute(get_invent_sql,get_invent_val)
                                                get_invent_data = fbcursor.fetchone()

                                                if not get_invent_data:
                                                    pass
                                                else:
                                                    initial_qty = int(get_invent_data[7]) + int(q)

                                                    upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                    upd_invent_val = (initial_qty,p,comp_data[0])
                                                    fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                    finsysdb.commit()

                                                    newcost = float(get_invent_data[16]) * float(q)

                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                    get_accts1_data1 = fbcursor.fetchone()

                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                    get_accts_data1 = fbcursor.fetchone()

                                                    if not get_accts_data1 and not get_accts1_data1:
                                                        pass
                                                    elif get_accts1_data1:
                                                        upd_bal1 = get_accts1_data1[0] + float(newcost)
                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                        finsysdb.commit()
                                                    elif get_accts_data1:
                                                        upd_bal1 = get_accts_data1[0] + float(newcost)
                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    #----------------------------------------------------------
                                                    get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                    get_accts1_data2 = fbcursor.fetchone()

                                                    get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                    fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                    get_accts_data2 = fbcursor.fetchone()

                                                    if not get_accts_data2 and not get_accts1_data2:
                                                        pass
                                                    elif get_accts1_data2:
                                                        upd_bal2 = get_accts1_data2[0] - float(t)
                                                        upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                        finsysdb.commit()
                                                    elif get_accts_data2:
                                                        upd_bal2 = get_accts_data2[0] - float(t)
                                                        upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    #---------------------------------------------------
                                                    get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                    get_accts1_data3 = fbcursor.fetchone()

                                                    get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                    fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                    get_accts_data3= fbcursor.fetchone()

                                                    if not get_accts_data3 and not get_accts1_data3:
                                                        pass
                                                    elif get_accts1_data3:
                                                        upd_bal3 = get_accts1_data3[0] - float(newcost)
                                                        upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                        finsysdb.commit()
                                                    elif get_accts_data3:
                                                        upd_bal3 = get_accts_data3[0] - float(newcost)
                                                        upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    try:
                                                        if place == comp_data[4]:
                                                            tax = tx/2
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] - tax
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()

                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                            get_accts1_data5 = fbcursor.fetchone()

                                                            upd_bal5 = get_accts1_data5[0] - tax
                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                            finsysdb.commit()
                                                        else:
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] - tx
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()
                                                    except:
                                                        pass
                                            except:
                                                pass

                                            try:
                                                get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                get_noninvent_val = (p,comp_data[0])
                                                fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                get_noninvent_data = fbcursor.fetchone()

                                                if not get_noninvent_data:
                                                    pass
                                                else:
                                                    qty = int(get_noninvent_data[17]) + int(q)

                                                    upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                    upd_noninvent_val = (qty,p,comp_data[0])
                                                    fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                    finsysdb.commit()

                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                    get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                    get_accts1_data1 = fbcursor.fetchone()

                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                    get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                    get_accts_data1 = fbcursor.fetchone()

                                                    if not get_accts_data1 and not get_accts1_data1:
                                                        pass
                                                    elif get_accts1_data1:
                                                        upd_bal1 = get_accts1_data1[0] - float(t)
                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                        finsysdb.commit()
                                                    elif get_accts_data1:
                                                        upd_bal1 = get_accts_data1[0] - float(t)
                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                        upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                        finsysdb.commit()
                                                    else:
                                                        pass

                                                    try:
                                                        if place == comp_data[4]:
                                                            tax = tx/2
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] - tax
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()

                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                            get_accts1_data5 = fbcursor.fetchone()

                                                            upd_bal5 = get_accts1_data5[0] - tax
                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                            finsysdb.commit()
                                                        else:
                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                            get_accts1_data4 = fbcursor.fetchone()

                                                            upd_bal4 = get_accts1_data4[0] - tx
                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                            finsysdb.commit()
                                                    except:
                                                        pass

                                            except:
                                                pass
                                    except:
                                        pass
                                
                                    sr_Frame_1.destroy()
                                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    show_sr_treeData()

                            save_btn = Button(sr_Canvas_1,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:cn_saveCreditnote())
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button7")) 

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3"))
                            #--------------
                            cn_label6 = Label(sr_Canvas_1,width=20,height=1,text="Credit Note Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=cn_label6,tags=('label24'))

                            cwidth = root.winfo_screenwidth()

                            cn_creditdate = DateEntry(sr_Canvas_1,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')

                            if cwidth > 1280:
                                sr_Canvas_1.create_window(495,442,anchor='nw',window=cn_creditdate,tags=("date"))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(370,455,anchor='nw',window=cn_creditdate,tags=("date"))
                            else:
                                sr_Canvas_1.create_window(465,407,anchor='nw',window=cn_creditdate,tags=("date"))
                        
                        elif sr_transCombo.get() == "Estimate":
                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            es_label1 = Label(sr_Canvas_1,width=18,height=1,text="ESTIMATE",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=es_label1,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))   

                            es_label2 = Label(sr_Canvas_1,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=es_label2,tags=("label2"))

                            es_label3 = Label(sr_Canvas_1,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=es_label3,tags=("label21"))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            def es_fetch_custDetails(event):
                                cust_name = es_custCombo.get()
                                cust_fname = cust_name.split(" ")[0]
                                cust_lname = cust_name.split(" ")[1]

                                cust_sql = "SELECT * FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                cust_val = (cust_fname,cust_lname,comp_data[0])
                                fbcursor.execute(cust_sql,cust_val)
                                cust_data = fbcursor.fetchone()

                                inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                inv_val = (cust_name,comp_data[0])
                                fbcursor.execute(inv_sql,inv_val)
                                inv_data = fbcursor.fetchall()

                                try:
                                    if not cust_data:
                                        pass
                                    else:
                                        es_email.delete(0,END)
                                        es_email.insert(0,cust_data[9])
                                        es_baddress.delete("1.0","end-1c")
                                        es_baddress.insert("1.0",cust_data[2] + " " + cust_data[3] + "\n" + cust_data[4] + "\n" + cust_data[12] + "\n" + cust_data[13] + "\n" + cust_data[14] + "\n" + cust_data[15] + "\n" + cust_data[16])
                                        es_pofsupply.delete(0,END)
                                        es_pofsupply.insert(0,comp_data[4])
                                except:
                                    pass

                            es_custCombo = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'))
                            es_custCombo["values"] = cust_list
                            es_custCombo.current(0)
                            es_custCombo.bind("<<ComboboxSelected>>",es_fetch_custDetails)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=es_custCombo,tags=("combo3"))

                            def sr_addCustomer_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        es_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        es_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def es_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:es_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            es_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer_1())
                            sr_Canvas_1.create_window(0,0,window=es_plus,tags=("button5"))

                            es_label4 = Label(sr_Canvas_1,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label4,tags=('label22'))

                            es_email = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=es_email,tags=("entry13"))

                            es_label5 = Label(sr_Canvas_1,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label5,tags=('label23'))

                            es_baddress = Text(sr_Canvas_1,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=es_baddress,tags=("entry14"))

                            es_label7 = Label(sr_Canvas_1,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label7,tags=('label25'))

                            es_pofsupply = Entry(sr_Canvas_1,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=es_pofsupply,tags=("entry15"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line17"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line18"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line19"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line20"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line21"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line22"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line23"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line24"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line25"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line26"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line27"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line28"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line29"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line81"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line82"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line32"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line33"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line34"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line35"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line36"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line37"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line38"))

                            es_label13 = Label(sr_Canvas_1,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label13,tags=('label31'))

                            es_label14 = Label(sr_Canvas_1,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label14,tags=('label32'))

                            es_label29 = Label(sr_Canvas_1,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label29,tags=('label64'))

                            es_label30 = Label(sr_Canvas_1,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label30,tags=('label65'))

                            es_label31 = Label(sr_Canvas_1,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label31,tags=('label66'))

                            es_label18 = Label(sr_Canvas_1,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label18,tags=('label33'))

                            es_label19 = Label(sr_Canvas_1,width=10,height=1,text="HSN",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label19,tags=('label34'))

                            es_label20 = Label(sr_Canvas_1,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label20,tags=('label35'))

                            es_label21 = Label(sr_Canvas_1,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label21,tags=('label36'))

                            es_label22 = Label(sr_Canvas_1,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label22,tags=('label86'))

                            es_label23 = Label(sr_Canvas_1,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label23,tags=('label87'))

                            es_label24 = Label(sr_Canvas_1,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label24,tags=('label88'))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                            get_inventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_inventory_sql,get_inventory_val)
                            get_inventory_data = fbcursor.fetchall()

                            get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                            get_noninventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                            get_noninventory_data = fbcursor.fetchall()

                            get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                            get_bundle_val = (comp_data[0],)                      
                            fbcursor.execute(get_bundle_sql,get_bundle_val)
                            get_bundle_data = fbcursor.fetchall()

                            product_list = []

                            if not get_inventory_data:
                                pass
                            else:
                                for i in get_inventory_data:
                                    product_list.append(i[2])

                            if not get_noninventory_data:
                                pass
                            else:
                                for n in get_noninventory_data:
                                    product_list.append(n[2])

                            if not get_bundle_data:
                                pass
                            else:
                                for b in get_bundle_data:
                                    product_list.append(b[2])
                            
                            product_list.insert(0,"Select Product")

                            def es_fetch_proDetails1(event):
                                global get_pro_data3
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (est_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (est_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (est_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label67",state='normal')
                                        es_label32.config(text="Available Qty : " + get_pro_data[7])
                                        est_entry2.delete(0,END)
                                        est_entry2.insert(0,get_pro_data[4])
                                        est_entry3.delete(0,END)
                                        est_entry3.insert(0,get_pro_data[11])
                                        est_entry5.delete(0,END)
                                        est_entry5.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label67",state='normal')
                                        es_label32.config(text="Available Qty : " + get_pro_data1[17])
                                        est_entry2.delete(0,END)
                                        est_entry2.insert(0,get_pro_data1[4])
                                        est_entry3.delete(0,END)
                                        est_entry3.insert(0,get_pro_data1[7])
                                        est_entry5.delete(0,END)
                                        est_entry5.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label67",state='hidden')
                                        est_entry2.delete(0,END)
                                        est_entry2.insert(0,get_pro_data3[3])
                                        est_entry3.delete(0,END)
                                        est_entry3.insert(0,get_pro_data3[4])
                                        est_entry5.delete(0,END)
                                        est_entry5.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            est_entry1 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry1['values'] = product_list
                            est_entry1.current(0)
                            est_entry1.bind("<<ComboboxSelected>>",es_fetch_proDetails1)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry1,tags=("combo5"))

                            est_entry2 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry2,tags=("entry73"))

                            est_entry3 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry3,tags=("entry74"))

                            def est_calculateTotal1(event,s):
                                try:
                                    if s == 1:
                                        name = est_entry1.get()
                                        qty = est_entry4.get()
                                    elif s == 2:
                                        name = est_entry11.get()
                                        qty = est_entry14.get()
                                    elif s == 3:
                                        name = est_entry18.get()
                                        qty = est_entry21.get()
                                    elif s == 4:
                                        name = est_entry25.get()
                                        qty = est_entry28.get()

                                    if qty != 0:
                                        global tax_tot1,tax_tot2,tax_tot3,tax_tot4
                                        tax_tot1 = 0.0
                                        tax_tot2 = 0.0
                                        tax_tot3 = 0.0
                                        tax_tot4 = 0.0

                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()

                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()

                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass
                                        if s == 1:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                est_entry6.delete(0,END)
                                                est_entry6.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                est_entry6.delete(0,END)
                                                est_entry6.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                est_entry6.delete(0,END)
                                                est_entry6.insert(0,tot)
                                        elif s == 2:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                est_entry16.delete(0,END)
                                                est_entry16.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                est_entry16.delete(0,END)
                                                est_entry16.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                est_entry16.delete(0,END)
                                                est_entry16.insert(0,tot)
                                        elif s == 3:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                est_entry23.delete(0,END)
                                                est_entry23.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                est_entry23.delete(0,END)
                                                est_entry23.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                est_entry23.delete(0,END)
                                                est_entry23.insert(0,tot)
                                        elif s == 4:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                est_entry30.delete(0,END)
                                                est_entry30.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                est_entry30.delete(0,END)
                                                est_entry30.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                est_entry30.delete(0,END)
                                                est_entry30.insert(0,tot)
                                        
                                        est_entry8.delete(0,END)
                                        est_entry9.delete(0,END)
                                        est_entry10.delete(0,END)

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2

                                        #product gst -----------------------------
                                        try:
                                            gst_value1 = split_gst(est_entry7.get())
                                        except:
                                            pass
                                        try:
                                            gst_value2 = split_gst(est_entry17.get())
                                        except:
                                            pass
                                        try:
                                            gst_value3 = split_gst(est_entry24.get())
                                        except:
                                            pass
                                        try:
                                            gst_value4 = split_gst(est_entry31.get())
                                        except:
                                            pass


                                        try:
                                            est_entry8.insert(0,float(est_entry6.get()) + float(est_entry16.get()) + float(est_entry23.get()) + float(est_entry30.get()))
                                            if est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                ptax_total = 0
                                            elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4
                                            elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                            est_entry9.insert(0,ptax_total)
                                            est_entry10.insert(0,float(est_entry8.get()) + float(float(est_entry9.get())))
                                        except:
                                            pass
                                except:
                                    pass

                            est_entry4 = Spinbox(sr_Canvas_1,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            est_entry4.bind("<Key>",lambda event,sp = 1:est_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry4,tags=("entry75"))

                            est_entry5 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry5,tags=("entry76"))

                            est_entry6 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            est_entry6.delete(0,END)
                            est_entry6.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry6,tags=("entry77"))
                            def calcu_cmd(event):
                                #product gst -----------------------------
                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2
                                        try:
                                            gst_value1 = split_gst(est_entry7.get())
                                        except:
                                            pass
                                        try:
                                            gst_value2 = split_gst(est_entry17.get())
                                        except:
                                            pass
                                        try:
                                            gst_value3 = split_gst(est_entry24.get())
                                        except:
                                            pass
                                        try:
                                            gst_value4 = split_gst(est_entry31.get())
                                        except:
                                            pass


                                        est_entry8.delete(0,END)
                                        est_entry8.insert(0,float(est_entry6.get()) + float(est_entry16.get()) + float(est_entry23.get()) + float(est_entry30.get()))
                                        if est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                            ptax_total = 0
                                        elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                            ptax_total = tax_tot1
                                        elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                            
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot2
                                        elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                            
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                        elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                            ptax_total = tax_tot2
                                        elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                            ptax_total = tax_tot2 + tax_tot3
                                        elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot2 + tax_tot4
                                        elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                        elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                            ptax_total = tax_tot3
                                        elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot3
                                        elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot3 + tax_tot4
                                        elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                        elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot4
                                        elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot4
                                        elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                            
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                        elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                            if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                tax_tot1 = 0
                                            else:
                                                tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                            
                                            if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                tax_tot2 = 0
                                            else:
                                                tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                            if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                tax_tot3 = 0
                                            else:
                                                tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                            if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                tax_tot4 = 0
                                            else:
                                                tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                            ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4
                                        est_entry9.delete(0,END)
                                        est_entry10.delete(0,END)
                                        est_entry9.insert(0,ptax_total)
                                        est_entry10.insert(0,float(est_entry8.get()) + float(float(est_entry9.get())))
                                    
                            est_entry7 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                            est_entry7['values'] = cplace_gstlist
                            est_entry7.current(0)
                            est_entry7.bind('<<ComboboxSelected>>',calcu_cmd)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry7,tags=("combo28"))

                            def es_fetch_proDetails2(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (est_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (est_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (est_entry11.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #----------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label68",state='normal')
                                        es_label33.config(text="Available Qty : " + get_pro_data[7])
                                        est_entry12.delete(0,END)
                                        est_entry12.insert(0,get_pro_data[4])
                                        est_entry13.delete(0,END)
                                        est_entry13.insert(0,get_pro_data[11])
                                        est_entry15.delete(0,END)
                                        est_entry15.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label68",state='normal')
                                        es_label33.config(text="Available Qty : " + get_pro_data1[17])
                                        est_entry12.delete(0,END)
                                        est_entry12.insert(0,get_pro_data1[4])
                                        est_entry13.delete(0,END)
                                        est_entry13.insert(0,get_pro_data1[7])
                                        est_entry15.delete(0,END)
                                        est_entry15.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label68",state='hidden')
                                        est_entry12.delete(0,END)
                                        est_entry12.insert(0,get_pro_data3[3])
                                        est_entry13.delete(0,END)
                                        est_entry13.insert(0,get_pro_data3[4])
                                        est_entry15.delete(0,END)
                                        est_entry15.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            est_entry11 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry11['values'] = product_list
                            est_entry11.current(0)
                            est_entry11.bind("<<ComboboxSelected>>",es_fetch_proDetails2)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry11,tags=("combo14"))

                            est_entry12 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry12,tags=("entry78"))

                            est_entry13 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry13,tags=("entry79"))

                            est_entry14 = Spinbox(sr_Canvas_1,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            est_entry14.bind("<Key>",lambda event,sp = 2:est_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry14,tags=("entry80"))

                            est_entry15 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry15,tags=("entry81"))

                            est_entry16 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            est_entry16.delete(0,END)
                            est_entry16.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry16,tags=("entry82"))

                            est_entry17 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry17['values'] = cplace_gstlist
                            est_entry17.current(0)
                            est_entry17.bind('<<ComboboxSelected>>',calcu_cmd)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry17,tags=("combo29"))

                            def es_fetch_proDetails3(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (est_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (est_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (est_entry18.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label69",state='normal')
                                        es_label34.config(text="Available Qty : " + get_pro_data[7])
                                        est_entry19.delete(0,END)
                                        est_entry19.insert(0,get_pro_data[4])
                                        est_entry20.delete(0,END)
                                        est_entry20.insert(0,get_pro_data[11])
                                        est_entry22.delete(0,END)
                                        est_entry22.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label69",state='normal')
                                        es_label34.config(text="Available Qty : " + get_pro_data1[17])
                                        est_entry19.delete(0,END)
                                        est_entry19.insert(0,get_pro_data1[4])
                                        est_entry20.delete(0,END)
                                        est_entry20.insert(0,get_pro_data1[7])
                                        est_entry22.delete(0,END)
                                        est_entry22.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label69",state='hidden')
                                        est_entry19.delete(0,END)
                                        est_entry19.insert(0,get_pro_data3[3])
                                        est_entry20.delete(0,END)
                                        est_entry20.insert(0,get_pro_data3[4])
                                        est_entry22.delete(0,END)
                                        est_entry22.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            est_entry18 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry18['values'] = product_list
                            est_entry18.current(0)
                            est_entry18.bind("<<ComboboxSelected>>",es_fetch_proDetails3)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry18,tags=("combo16"))

                            est_entry19 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry19,tags=("entry83"))

                            est_entry20 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry20,tags=("entry84"))

                            est_entry21 = Spinbox(sr_Canvas_1,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            est_entry21.bind("<Key>",lambda event,sp = 3:est_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry21,tags=("entry85"))

                            est_entry22 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry22,tags=("entry86"))

                            est_entry23 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            est_entry23.delete(0,END)
                            est_entry23.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry23,tags=("entry87"))

                            est_entry24 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry24['values'] = cplace_gstlist
                            est_entry24.current(0)
                            est_entry24.bind('<<ComboboxSelected>>',calcu_cmd)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry24,tags=("combo30"))

                            def es_fetch_proDetails4(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (est_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (est_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (est_entry25.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label70",state='normal')
                                        es_label35.config(text="Available Qty : " + get_pro_data[7])
                                        est_entry26.delete(0,END)
                                        est_entry26.insert(0,get_pro_data[4])
                                        est_entry27.delete(0,END)
                                        est_entry27.insert(0,get_pro_data[11])
                                        est_entry29.delete(0,END)
                                        est_entry29.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label70",state='normal')
                                        es_label35.config(text="Available Qty : " + get_pro_data1[17])
                                        est_entry26.delete(0,END)
                                        est_entry26.insert(0,get_pro_data1[4])
                                        est_entry27.delete(0,END)
                                        est_entry27.insert(0,get_pro_data1[7])
                                        est_entry29.delete(0,END)
                                        est_entry29.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label70",state='hidden')
                                        est_entry26.delete(0,END)
                                        est_entry26.insert(0,get_pro_data3[3])
                                        est_entry27.delete(0,END)
                                        est_entry27.insert(0,get_pro_data3[4])
                                        est_entry29.delete(0,END)
                                        est_entry29.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            est_entry25 = ttk.Combobox(sr_Canvas_1,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry25['values'] = product_list
                            est_entry25.current(0)
                            est_entry25.bind("<<ComboboxSelected>>",es_fetch_proDetails4)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry25,tags=("combo18"))

                            est_entry26 = Entry(sr_Canvas_1,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry26,tags=("entry88"))

                            est_entry27 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry27,tags=("entry89"))

                            est_entry28 = Spinbox(sr_Canvas_1,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                            est_entry28.bind("<Key>",lambda event,sp = 4:est_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry28,tags=("entry90"))

                            est_entry29 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry29,tags=("entry91"))

                            est_entry30 = Entry(sr_Canvas_1,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                            est_entry30.delete(0,END)
                            est_entry30.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry30,tags=("entry92"))

                            est_entry31 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            est_entry31['values'] = cplace_gstlist
                            est_entry31.current(0)
                            est_entry31.bind('<<ComboboxSelected>>',calcu_cmd)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=est_entry31,tags=("combo31"))

                            es_label32 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label32,state=HIDDEN,tags=('label67'))

                            es_label33 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label33,state=HIDDEN,tags=('label68'))

                            es_label34 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label34,state=HIDDEN,tags=('label69'))

                            es_label35 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label35,state=HIDDEN,tags=('label70'))

                            es_label25 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label25,tags=('label40'))

                            es_label26 = Label(sr_Canvas_1,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label26,tags=('label41'))

                            es_label27 = Label(sr_Canvas_1,width=10,height=1,text="Estimate Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label27,tags=('label42'))

                            est_entry8 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry8,tags=("entry23"))

                            est_entry9 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry9,tags=("entry24"))

                            est_entry10 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=est_entry10,tags=("entry25"))

                            def es_saveEstimate():
                                get_est_sql = "SELECT * FROM app1_estimate ORDER BY estimateid DESC LIMIT 1"
                                fbcursor.execute(get_est_sql)
                                get_est_data = fbcursor.fetchone()

                                def split_gst(string):
                                    pattern1 = r'\(+'
                                    pattern2 = r'\%+'
                                    split1 = re.split(pattern1,string)
                                    split2 = re.split(pattern2,split1[1])
                                    return split2[0]

                                customer = es_custCombo.get()
                                email = es_email.get()
                                billingaddress = es_baddress.get("1.0","end-1c")
                                estimatedate = es_estdate.get_date()
                                expirationdate = es_expdate.get_date()
                                placeofsupply = es_pofsupply.get()

                                if not get_est_data:
                                    estimateno = "1001"
                                else:
                                    estimateno = int(get_est_data[6]) + 1
                                if est_entry1.get() == "Select Product" or est_entry1.get() == '':
                                    product = ''
                                else:
                                    product = est_entry1.get()
                                description = est_entry3.get()
                                hsn = est_entry2.get()
                                qty = est_entry4.get()
                                rate = est_entry5.get()
                                try:
                                    tax = split_gst(est_entry7.get())
                                except:
                                    tax = 0
                                total = est_entry6.get()
                                taxamount = est_entry9.get()
                                subtotal = est_entry8.get()
                                estimatetotal = est_entry10.get()
                                if est_entry11.get() == "Select Product" or est_entry11.get() == '':
                                    product1 = ''
                                else:
                                    product1 = est_entry11.get()
                                description1 = est_entry13.get()
                                hsn1 = est_entry12.get()
                                qty1 = est_entry14.get()
                                rate1 = est_entry15.get()
                                try:
                                    tax1 = split_gst(est_entry17.get()) 
                                except:
                                    tax1 = 0
                                total1 = est_entry16.get()
                                if est_entry18.get() == "Select Product" or est_entry18.get() == '':
                                    product2 = ''
                                else:
                                    product2 = est_entry18.get()
                                description2 = est_entry20.get()
                                hsn2 = est_entry19.get()
                                qty2 = est_entry21.get()
                                rate2 = est_entry22.get()
                                try:
                                    tax2 = split_gst(est_entry24.get())
                                except:
                                    tax2 = 0
                                total2 = est_entry23.get()
                                if est_entry25.get() == "Select Product" or est_entry25.get() == '':
                                    product3 = ''
                                else:
                                    product3 = est_entry25.get()
                                description3 = est_entry27.get()
                                hsn3 = est_entry26.get()
                                qty3 = est_entry28.get()
                                rate3 = est_entry29.get()
                                try:
                                    tax3 = split_gst(est_entry31.get())
                                except:
                                    tax3 = 0
                                total3 = est_entry30.get()
                                cid_id = comp_data[0]

                                if customer == "Select Customer" or customer == "" or placeofsupply == "":
                                    pass
                                else:
                                    ins_est_sql = "INSERT INTO app1_estimate(customer,email,billingaddress,estimatedate,expirationdate,placeofsupply,estimateno,product,description,hsn,qty,rate,tax,total,taxamount,subtotal,estimatetotal,product1,description1,hsn1,qty1,rate1,tax1,total1,product2,description2,hsn2,qty2,rate2,tax2,total2,product3,description3,hsn3,qty3,rate3,tax3,total3,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_est_val = (customer,email,billingaddress,estimatedate,expirationdate,placeofsupply,estimateno,product,description,hsn,qty,rate,tax,total,taxamount,subtotal,estimatetotal,product1,description1,hsn1,qty1,rate1,tax1,total1,product2,description2,hsn2,qty2,rate2,tax2,total2,product3,description3,hsn3,qty3,rate3,tax3,total3,cid_id)
                                    fbcursor.execute(ins_est_sql,ins_est_val)
                                    finsysdb.commit()

                                    sr_Frame_1.destroy()
                                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    show_sr_treeData()

                            

                            save_btn = Button(sr_Canvas_1,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:es_saveEstimate())
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button7")) 

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3"))
                            #--------------
                            es_label6 = Label(sr_Canvas_1,width=20,height=1,text="Estimate Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label6,tags=('label24'))

                            es_label28 = Label(sr_Canvas_1,width=20,height=1,text="Expiration Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=es_label28,tags=('label43'))

                            cwidth = root.winfo_screenwidth()

                            es_estdate = DateEntry(sr_Canvas_1,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')

                            es_expdate = DateEntry(sr_Canvas_1,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white') 

                            if cwidth > 1280:
                                sr_Canvas_1.create_window(495,442,anchor='nw',window=es_estdate,tags=("date"))
                                sr_Canvas_1.create_window(775,442,anchor='nw',window=es_expdate,tags=("date1"))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(370,455,anchor='nw',window=es_estdate,tags=("date"))
                                sr_Canvas_1.create_window(580,455,anchor='nw',window=es_expdate,tags=("date1"))
                            else:
                                sr_Canvas_1.create_window(465,407,anchor='nw',window=es_estdate,tags=("date"))
                                sr_Canvas_1.create_window(730,407,anchor='nw',window=es_expdate,tags=("date1"))
                        
                        elif sr_transCombo.get() == "Delayed Charge":
                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            dc_label1 = Label(sr_Canvas_1,width=18,height=1,text="DELAYED CHARGE",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=dc_label1,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly5"))   

                            dc_label2 = Label(sr_Canvas_1,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=dc_label2,tags=("label2"))

                            dc_label3 = Label(sr_Canvas_1,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=dc_label3,tags=("label21"))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            dc_custCombo = ttk.Combobox(sr_Canvas_1,width=15,font=('arial 15'))
                            dc_custCombo["values"] = cust_list
                            dc_custCombo.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dc_custCombo,tags=("combo3"))

                            def sr_addCustomer_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        dc_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        dc_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def dc_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dc_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            dc_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer_1())
                            sr_Canvas_1.create_window(0,0,window=dc_plus,tags=("button5"))

                            

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line83"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line84"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line85"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line86"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line87"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line88"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line89"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line90"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line91"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line92"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line93"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line94"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line95"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line96"))

                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line97"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line98"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line99"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line100"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line101"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line102"))
                            sr_Canvas_1.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line103"))

                            dc_label13 = Label(sr_Canvas_1,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label13,tags=('label89'))

                            dc_label14 = Label(sr_Canvas_1,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label14,tags=('label90'))

                            dc_label15 = Label(sr_Canvas_1,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label15,tags=('label91'))

                            dc_label16 = Label(sr_Canvas_1,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label16,tags=('label92'))

                            dc_label17 = Label(sr_Canvas_1,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label17,tags=('label93'))

                            dc_label18 = Label(sr_Canvas_1,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label18,tags=('label94'))

                            dc_label19 = Label(sr_Canvas_1,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label19,tags=('label95'))

                            dc_label20 = Label(sr_Canvas_1,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label20,tags=('label96'))

                            dc_label21 = Label(sr_Canvas_1,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label21,tags=('label97'))

                            dc_label22 = Label(sr_Canvas_1,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label22,tags=('label98'))

                            dc_label23 = Label(sr_Canvas_1,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label23,tags=('label99'))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                            get_inventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_inventory_sql,get_inventory_val)
                            get_inventory_data = fbcursor.fetchall()

                            get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                            get_noninventory_val = (comp_data[0],)                      
                            fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                            get_noninventory_data = fbcursor.fetchall()

                            get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                            get_bundle_val = (comp_data[0],)                      
                            fbcursor.execute(get_bundle_sql,get_bundle_val)
                            get_bundle_data = fbcursor.fetchall()

                            dc_product_list = []

                            if not get_inventory_data:
                                pass
                            else:
                                for i in get_inventory_data:
                                    dc_product_list.append(i[2])

                            if not get_noninventory_data:
                                pass
                            else:
                                for n in get_noninventory_data:
                                    dc_product_list.append(n[2])

                            if not get_bundle_data:
                                pass
                            else:
                                for b in get_bundle_data:
                                    dc_product_list.append(b[2])
                            
                            dc_product_list.insert(0,"Select Product")

                            def dc_fetch_proDetails1(event):
                                global get_pro_data3
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (dct_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (dct_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (dct_entry1.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label103",state='normal')
                                        dc_label24.config(text="Available Qty : " + get_pro_data[7])
                                        dct_entry2.delete(0,END)
                                        dct_entry2.insert(0,get_pro_data[11])
                                        dct_entry4.delete(0,END)
                                        dct_entry4.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label103",state='normal')
                                        dc_label24.config(text="Available Qty : " + get_pro_data1[17])
                                        dct_entry2.delete(0,END)
                                        dct_entry2.insert(0,get_pro_data1[7])
                                        dct_entry4.delete(0,END)
                                        dct_entry4.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label103",state='hidden')
                                        dct_entry2.delete(0,END)
                                        dct_entry2.insert(0,get_pro_data3[4])
                                        dct_entry4.delete(0,END)
                                        dct_entry4.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            

                            dct_entry1 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry1["values"] = dc_product_list
                            dct_entry1.current(0)
                            dct_entry1.bind("<<ComboboxSelected>>",dc_fetch_proDetails1)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry1,tags=("combo32"))

                            dct_entry2 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry2,tags=("entry93"))

                            def dct_calculateTotal1(event,s):
                                try:
                                    if s == 1:
                                        name = dct_entry1.get()
                                        qty = dct_entry3.get()
                                    elif s == 2:
                                        name = dct_entry7.get()
                                        qty = dct_entry9.get()
                                    elif s == 3:
                                        name = dct_entry13.get()
                                        qty = dct_entry15.get()
                                    elif s == 4:
                                        name = dct_entry19.get()
                                        qty = dct_entry21.get()

                                    if qty != 0:
                                        global tax_tot1,tax_tot2,tax_tot3,tax_tot4
                                        tax_tot1 = 0.0
                                        tax_tot2 = 0.0
                                        tax_tot3 = 0.0
                                        tax_tot4 = 0.0

                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()

                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()

                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (name,comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass
                                        if s == 1:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                dct_entry5.delete(0,END)
                                                dct_entry5.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                dct_entry5.delete(0,END)
                                                dct_entry5.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                dct_entry5.delete(0,END)
                                                dct_entry5.insert(0,tot)
                                        elif s == 2:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                dct_entry11.delete(0,END)
                                                dct_entry11.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                dct_entry11.delete(0,END)
                                                dct_entry11.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                dct_entry11.delete(0,END)
                                                dct_entry11.insert(0,tot)
                                        elif s == 3:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                dct_entry17.delete(0,END)
                                                dct_entry17.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                dct_entry17.delete(0,END)
                                                dct_entry17.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                dct_entry17.delete(0,END)
                                                dct_entry17.insert(0,tot)
                                        elif s == 4:
                                            if get_pro_data is not None:
                                                tot = int(get_pro_data[12]) * int(qty)
                                                dct_entry23.delete(0,END)
                                                dct_entry23.insert(0,tot)
                                            elif get_pro_data1 is not None:
                                                tot = int(get_pro_data1[8]) * int(qty)
                                                dct_entry23.delete(0,END)
                                                dct_entry23.insert(0,tot)
                                            else:
                                                tot = int(get_pro_data3[33]) * int(qty)
                                                dct_entry23.delete(0,END)
                                                dct_entry23.insert(0,tot)
                                        
                                        dct_entry25.delete(0,END)
                                        dct_entry26.delete(0,END)
                                        dct_entry27.delete(0,END)

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2

                                        #product gst -----------------------------
                                        try:
                                            gst_value1 = split_gst(dct_entry6.get())
                                        except:
                                            pass
                                        try:
                                            gst_value2 = split_gst(dct_entry12.get())
                                        except:
                                            pass
                                        try:
                                            gst_value3 = split_gst(dct_entry18.get())
                                        except:
                                            pass
                                        try:
                                            gst_value4 = split_gst(dct_entry24.get())
                                        except:
                                            pass


                                        try:
                                            dct_entry25.insert(0,float(dct_entry5.get()) + float(dct_entry11.get()) + float(dct_entry17.get()) + float(dct_entry23.get()))
                                            if dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                ptax_total = 0
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                ptax_total = tax_tot1
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100
                                                ptax_total = tax_tot2
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot4
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot3
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot3 + tax_tot4
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                            elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot4
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot4
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                            elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                    tax_tot1 = 0
                                                else:
                                                    tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                
                                                if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                    tax_tot2 = 0
                                                else:
                                                    tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                    tax_tot3 = 0
                                                else:
                                                    tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                    tax_tot4 = 0
                                                else:
                                                    tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                            dct_entry26.insert(0,ptax_total)
                                            dct_entry27.insert(0,float(dct_entry25.get()) + float(float(dct_entry26.get())))
                                        except:
                                            pass
                                except:
                                    pass

                            dct_entry3 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry3.bind("<Key>",lambda event,sp = 1:dct_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry3,tags=("entry94"))

                            dct_entry4 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry4,tags=("entry95"))

                            dct_entry5 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry5.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry5,tags=("entry96"))

                            dct_entry6 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                            dct_entry6["values"] = cplace_gstlist
                            dct_entry6.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry6,tags=("combo33"))

                            def dc_fetch_proDetails2(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (dct_entry7.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (dct_entry7.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (dct_entry7.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #----------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label104",state='normal')
                                        dc_label25.config(text="Available Qty : " + get_pro_data[7])
                                        dct_entry8.delete(0,END)
                                        dct_entry8.insert(0,get_pro_data[11])
                                        dct_entry10.delete(0,END)
                                        dct_entry10.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label104",state='normal')
                                        dc_label25.config(text="Available Qty : " + get_pro_data1[17])
                                        dct_entry8.delete(0,END)
                                        dct_entry8.insert(0,get_pro_data1[7])
                                        dct_entry10.delete(0,END)
                                        dct_entry10.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label104",state='hidden')
                                        dct_entry8.delete(0,END)
                                        dct_entry8.insert(0,get_pro_data3[4])
                                        dct_entry10.delete(0,END)
                                        dct_entry10.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            dct_entry7 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry7["values"] = dc_product_list
                            dct_entry7.current(0)
                            dct_entry7.bind("<<ComboboxSelected>>",dc_fetch_proDetails2)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry7,tags=("combo34"))

                            dct_entry8 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry8,tags=("entry97"))

                            dct_entry9 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry9.bind("<Key>",lambda event,sp = 2:dct_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry9,tags=("entry98"))

                            dct_entry10 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry10,tags=("entry99"))

                            dct_entry11 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry11.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry11,tags=("entry100"))

                            dct_entry12 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry12["values"] = cplace_gstlist
                            dct_entry12.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry12,tags=("combo35"))

                            def dc_fetch_proDetails3(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (dct_entry13.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (dct_entry13.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (dct_entry13.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label105",state='normal')
                                        dc_label26.config(text="Available Qty : " + get_pro_data[7])
                                        dct_entry14.delete(0,END)
                                        dct_entry14.insert(0,get_pro_data[11])
                                        dct_entry16.delete(0,END)
                                        dct_entry16.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label105",state='normal')
                                        dc_label26.config(text="Available Qty : " + get_pro_data1[17])
                                        dct_entry14.delete(0,END)
                                        dct_entry14.insert(0,get_pro_data1[7])
                                        dct_entry16.delete(0,END)
                                        dct_entry16.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label105",state='hidden')
                                        dct_entry14.delete(0,END)
                                        dct_entry14.insert(0,get_pro_data3[4])
                                        dct_entry16.delete(0,END)
                                        dct_entry16.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            dct_entry13 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry13["values"] = dc_product_list
                            dct_entry13.current(0)
                            dct_entry13.bind("<<ComboboxSelected>>",dc_fetch_proDetails3)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry13,tags=("combo36"))

                            dct_entry14 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry14,tags=("entry101"))

                            dct_entry15 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry15.bind("<Key>",lambda event,sp = 3:dct_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry15,tags=("entry102"))

                            dct_entry16 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry16,tags=("entry103"))

                            dct_entry17 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry17.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry17,tags=("entry104"))

                            dct_entry18 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry18["values"] = cplace_gstlist
                            dct_entry18.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry18,tags=("combo37"))

                            def dc_fetch_proDetails4(event):
                                try:
                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val = (dct_entry19.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                    get_pro_data = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                    get_pro_val1 = (dct_entry19.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                    get_pro_data1 = fbcursor.fetchone()
                                except:
                                    pass

                                try:
                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                    get_pro_val3 = (dct_entry19.get(),comp_data[0])
                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                    get_pro_data3 = fbcursor.fetchone()
                                except:
                                    pass

                                #--------------------------------------------------------
                                if get_pro_data is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label106",state='normal')
                                        dc_label27.config(text="Available Qty : " + get_pro_data[7])
                                        dct_entry20.delete(0,END)
                                        dct_entry20.insert(0,get_pro_data[11])
                                        dct_entry22.delete(0,END)
                                        dct_entry22.insert(0,get_pro_data[12])
                                    except:
                                        pass
                                elif get_pro_data1 is not None:
                                    try:
                                        sr_Canvas_1.itemconfig("label106",state='normal')
                                        dc_label27.config(text="Available Qty : " + get_pro_data1[17])
                                        dct_entry20.delete(0,END)
                                        dct_entry20.insert(0,get_pro_data1[7])
                                        dct_entry22.delete(0,END)
                                        dct_entry22.insert(0,get_pro_data1[8])
                                    except:
                                        pass
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label106",state='hidden')
                                        dct_entry20.delete(0,END)
                                        dct_entry20.insert(0,get_pro_data3[4])
                                        dct_entry22.delete(0,END)
                                        dct_entry22.insert(0,get_pro_data3[33])
                                    except:
                                        pass

                            dct_entry19 = ttk.Combobox(sr_Canvas_1,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry19["values"] = dc_product_list
                            dct_entry19.current(0)
                            dct_entry19.bind("<<ComboboxSelected>>",dc_fetch_proDetails4)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry19,tags=("combo38"))

                            dct_entry20 = Entry(sr_Canvas_1,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry20,tags=("entry105"))

                            dct_entry21 = Spinbox(sr_Canvas_1,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry21.bind("<Key>",lambda event,sp = 4:dct_calculateTotal1(event,sp))
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry21,tags=("entry106"))

                            dct_entry22 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry22,tags=("entry107"))

                            dct_entry23 = Entry(sr_Canvas_1,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                            dct_entry23.insert(0,0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry23,tags=("entry108"))

                            dct_entry24 = ttk.Combobox(sr_Canvas_1,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                            dct_entry24["values"] = cplace_gstlist
                            dct_entry24.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=dct_entry24,tags=("combo39"))

                            dc_label24 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label24,state=HIDDEN,tags=('label103'))

                            dc_label25 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label25,state=HIDDEN,tags=('label104'))

                            dc_label26 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label26,state=HIDDEN,tags=('label105'))

                            dc_label27 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label27,state=HIDDEN,tags=('label106'))

                            dc_label28 = Label(sr_Canvas_1,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label28,tags=('label100'))

                            dc_label29 = Label(sr_Canvas_1,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label29,tags=('label101'))

                            dc_label30 = Label(sr_Canvas_1,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label30,tags=('label102'))

                            dct_entry25 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry25,tags=("entry109"))

                            dct_entry26 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry26,tags=("entry110"))

                            dct_entry27 = Entry(sr_Canvas_1,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=dct_entry27,tags=("entry111"))

                            def dc_saveDelayed():
                                get_dc_sql = "SELECT * FROM app1_delayedcharge ORDER BY delayedchargeid DESC LIMIT 1"
                                fbcursor.execute(get_dc_sql)
                                get_dc_data = fbcursor.fetchone()

                                def split_gst(string):
                                    pattern1 = r'\(+'
                                    pattern2 = r'\%+'
                                    split1 = re.split(pattern1,string)
                                    split2 = re.split(pattern2,split1[1])
                                    return split2[0]

                                customer = dc_custCombo.get()
                                delayedchargedate = dc_dcdate.get_date()
                                if not get_dc_data:
                                    delayedchargeno = "1001"
                                else:
                                    delayedchargeno = int(get_dc_data[3]) + 1
                                
                                if dct_entry1.get() == "Select Product" or dct_entry1.get() == "":
                                    prodorser = ''
                                else:
                                    prodorser = dct_entry1.get()
                                description = dct_entry2.get()
                                qty = dct_entry3.get()
                                rate = dct_entry4.get()
                                total = dct_entry5.get()
                                try:
                                    tax = split_gst(dct_entry6.get())
                                except:
                                    tax = 0

                                if dct_entry7.get() == "Select Product" or dct_entry7.get() == "":
                                    prodorser1 = ''
                                else:
                                    prodorser1 = dct_entry7.get()
                                description1 = dct_entry8.get()
                                qty1 = dct_entry9.get()
                                rate1 = dct_entry10.get()
                                total1 = dct_entry11.get()
                                try:
                                    tax1 = split_gst(dct_entry12.get())
                                except:
                                    tax1 = 0

                                if dct_entry13.get() == "Select Product" or dct_entry13.get() == "":
                                    prodorser2 = ''
                                else:
                                    prodorser2 = dct_entry13.get()
                                description2 = dct_entry14.get()
                                qty2 = dct_entry15.get()
                                rate2 = dct_entry16.get()
                                total2 = dct_entry17.get()
                                try:
                                    tax2 = split_gst(dct_entry18.get())
                                except:
                                    tax2 = 0

                                if dct_entry19.get() == "Select Product" or dct_entry19.get() == "":
                                    prodorser3 = ''
                                else:
                                    prodorser3 = dct_entry19.get()
                                description3 = dct_entry20.get()
                                qty3 = dct_entry21.get()
                                rate3 = dct_entry22.get()
                                total3 = dct_entry23.get()
                                try:
                                    tax3 = split_gst(dct_entry24.get())
                                except:
                                    tax3 = 0

                                taxamount = dct_entry26.get()
                                subtotal = dct_entry25.get()
                                grandtotal = dct_entry27.get()
                                cid_id = comp_data[0]

                                if customer == "Select Customer" or customer == "":
                                    pass
                                else:
                                    ins_dc_sql = "INSERT INTO app1_delayedcharge(customer,delayedchargedate,delayedchargeno,prodorser,description,qty,rate,total,tax,prodorser1,description1,qty1,rate1,total1,tax1,prodorser2,description2,qty2,rate2,total2,tax2,prodorser3,description3,qty3,rate3,total3,tax3,taxamount,subtotal,grandtotal,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_dc_val = (customer,delayedchargedate,delayedchargeno,prodorser,description,qty,rate,total,tax,prodorser1,description1,qty1,rate1,total1,tax1,prodorser2,description2,qty2,rate2,total2,tax2,prodorser3,description3,qty3,rate3,total3,tax3,taxamount,subtotal,grandtotal,cid_id)
                                    fbcursor.execute(ins_dc_sql,ins_dc_val)
                                    finsysdb.commit()

                                    sr_Frame_1.destroy()
                                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    show_sr_treeData()

                            save_btn = Button(sr_Canvas_1,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:dc_saveDelayed())
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button8")) 

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3"))

                            dc_label31 = Label(sr_Canvas_1,width=20,height=1,text="Delayed charge date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=dc_label31,tags=('label23'))

                            dc_dcdate = DateEntry(sr_Canvas_1,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f')

                            cwidth = root.winfo_screenwidth()

                            if cwidth > 1280:
                                sr_Canvas_1.create_window(122,442,anchor='nw',window=dc_dcdate,tags=("date2"))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(92,455,anchor='nw',window=dc_dcdate,tags=("date2"))
                            else:
                                sr_Canvas_1.create_window(115,407,anchor='nw',window=dc_dcdate,tags=("date2"))
                                
                        elif sr_transCombo.get() == "Time Activity":

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                            ta_label1 = Label(sr_Canvas_1,width=18,height=1,text="TIME ACTIVITY",font=('arial 25'),background='#1b3857',fg="white")
                            sr_Canvas_1.create_window(0,0,anchor="c",window=ta_label1,tags=("label1"))
                            sr_Canvas_1.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                            sr_Canvas_1.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly4"))   

                            ta_image = Image.open(r'images/time.png')
                            resize_img = ta_image.resize((360,560))
                            time_img = ImageTk.PhotoImage(resize_img)
                            img_label = Label(sr_Canvas_1,image=time_img,bg="#1b3857")
                            img_label.image = time_img
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=img_label,tags=('image1'))

                            ta_label3 = Label(sr_Canvas_1,width=10,height=1,text="Name",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                            sr_Canvas_1.create_window(0,0,window=ta_label3,tags=('label56'))

                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                            user_val = (nm_ent.get(),)
                            fbcursor.execute(user_sql,user_val)
                            user_data = fbcursor.fetchone()

                            comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                            comp_val = (user_data[0],)
                            fbcursor.execute(comp_sql,comp_val)
                            comp_data = fbcursor.fetchone()

                            get_sup_sql = "SELECT firstname,lastname FROM app1_supplier WHERE cid_id=%s"
                            get_sup_val = (comp_data[0],)
                            fbcursor.execute(get_sup_sql,get_sup_val)
                            get_sup_data = fbcursor.fetchall()

                            sup_list = []

                            try:
                                for s in get_sup_data:
                                    sup_list.append(s[0] + " " + s[1])
                            except:
                                pass

                            sup_list.insert(0,"Select Supplier")

                            ta_supplier = ttk.Combobox(sr_Canvas_1,width=26,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_supplier["values"] = sup_list
                            ta_supplier.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='c',window=ta_supplier,tags=("combo9"))

                            def sr_addSupplier():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,background="#2f516f")
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets3(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    dcanvas.coords("hline1",dwidth/21,dheight/0.85,dwidth/1.055,dheight/0.85)
                                    dcanvas.coords("hline2",dwidth/21,dheight/0.555,dwidth/1.055,dheight/0.555)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.44


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.32,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.355,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.61)
                                    dcanvas.coords("label7",dwidth/2.845,dheight/1.61)
                                    dcanvas.coords("label8",dwidth/1.725,dheight/1.61)
                                    dcanvas.coords("label9",dwidth/1.24,dheight/1.61)
                                    dcanvas.coords("label10",dwidth/8.2,dheight/1.358)
                                    dcanvas.coords("label11",dwidth/2.845,dheight/1.358)
                                    dcanvas.coords("label12",dwidth/1.725,dheight/1.358)
                                    dcanvas.coords("label13",dwidth/1.24,dheight/1.358)
                                    dcanvas.coords("label14",dwidth/8.12,dheight/1.163)
                                    dcanvas.coords("label15",dwidth/2.33,dheight/1.163)
                                    dcanvas.coords("label16",dwidth/1.356,dheight/1.163)
                                    dcanvas.coords("label17",dwidth/1.29,dheight/1.041)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.97)
                                    dcanvas.coords("label19",dwidth/2.845,dheight/0.97)
                                    dcanvas.coords("label20",dwidth/1.725,dheight/0.97)
                                    dcanvas.coords("label21",dwidth/1.24,dheight/0.97)
                                    dcanvas.coords("label22",dwidth/6,dheight/0.8)
                                    dcanvas.coords("label23",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/8.2,dheight/0.656)
                                    dcanvas.coords("label25",dwidth/1.715,dheight/0.656)
                                    dcanvas.coords("label26",dwidth/8.2,dheight/0.605)
                                    dcanvas.coords("label27",dwidth/1.715,dheight/0.605)
                                    dcanvas.coords("label28",dwidth/8.2,dheight/0.538)
                                    dcanvas.coords("label29",dwidth/6.3,dheight/0.485)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/3.6,dheight/1.31)
                                    dcanvas.coords("combo3",dwidth/2.8,dheight/1.13)
                                    dcanvas.coords("combo4",dwidth/1.975,dheight/0.945)
                                    dcanvas.coords("combo5",dwidth/1.364,dheight/0.945)

                                    dcanvas.coords("entry1",dwidth/2.8,dheight/1.9)
                                    dcanvas.coords("entry2",dwidth/1.505,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/20,dheight/1.55)
                                    dcanvas.coords("entry4",dwidth/3.6,dheight/1.55)
                                    dcanvas.coords("entry5",dwidth/1.975,dheight/1.55)
                                    dcanvas.coords("entry6",dwidth/1.364,dheight/1.55)
                                    dcanvas.coords("entry7",dwidth/20,dheight/1.31)
                                    dcanvas.coords("entry8",dwidth/1.975,dheight/1.31)
                                    dcanvas.coords("entry9",dwidth/1.364,dheight/1.31)
                                    dcanvas.coords("entry10",dwidth/20,dheight/1.13)
                                    dcanvas.coords("entry11",dwidth/1.505,dheight/1.13)
                                    dcanvas.coords("entry12",dwidth/20,dheight/0.945)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.745)
                                    dcanvas.coords("entry14",dwidth/20,dheight/0.644)
                                    dcanvas.coords("entry15",dwidth/1.96,dheight/0.644)
                                    dcanvas.coords("entry16",dwidth/20,dheight/0.595)
                                    dcanvas.coords("entry17",dwidth/1.96,dheight/0.595)
                                    dcanvas.coords("entry18",dwidth/20,dheight/0.53)
                                    
                                    dcanvas.coords("date",dwidth/3.6,dheight/0.945)

                                    dcanvas.coords("button1",dwidth/27,dheight/3)
                                    dcanvas.coords("button2",dwidth/2,dheight/0.46)

                                    dcanvas.coords("check1",dwidth/17,dheight/0.485)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1300))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets3)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                sup_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD SUPPLIER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=sup_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                sup_label2 = Label(sr_Canvas_2,width=20,height=1,text="Supplier Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                sup_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label3,tags=('label3'))

                                sup_title = ttk.Combobox(sr_Canvas_2,width=31,font=('arial 15'))
                                sup_title["values"] = ['Mr','Mrs','Miss','Ms',]
                                sup_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_title,tags=("combo1"))

                                sup_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label4,tags=('label4'))

                                sup_fname = Entry(sr_Canvas_2,width=32,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_fname,tags=("entry1"))

                                sup_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label5,tags=('label5'))

                                sup_lname = Entry(sr_Canvas_2,width=32,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_lname,tags=("entry2"))

                                sup_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label6,tags=('label6'))

                                sup_company = Entry(sr_Canvas_2,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_company,tags=("entry3"))

                                sup_label7 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label7,tags=('label7'))

                                emailVar1 = StringVar()
                                sup_email = Entry(sr_Canvas_2,textvariable=emailVar1,width=24,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        sup_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    sup_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                sup_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_email,tags=("entry4"))

                                sup_label8 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label8,tags=('label8'))

                                mobVar1 = StringVar()
                                sup_mobile = Entry(sr_Canvas_2,textvariable=mobVar1,width=24,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        sup_mobile.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    sup_mobile.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                sup_mobile.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_mobile,tags=("entry5"))

                                sup_label9 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label9,tags=('label9'))
                                
                                webVar1 = StringVar()
                                sup_web = Entry(sr_Canvas_2,textvariable=webVar1,width=24,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        sup_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    sup_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                sup_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_web,tags=("entry6"))

                                sup_label10 = Label(sr_Canvas_2,width=20,height=1,text="Billing Rate",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label10,tags=('label10'))

                                sup_brate = Spinbox(sr_Canvas_2,width=23,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_brate,tags=("entry7"))

                                sup_label11 = Label(sr_Canvas_2,width=20,height=1,text="Terms",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label11,tags=('label11'))

                                def add_newTerms(evet):
                                    if sup_terms.get() == 'ADD NEW TERMS':
                                        sr_Canvas_2.itemconfig("label12",state='normal')
                                        sr_Canvas_2.itemconfig("entry8",state='normal')
                                    else:
                                        sr_Canvas_2.itemconfig("label12",state='hidden')
                                        sr_Canvas_2.itemconfig("entry8",state='hidden')


                                sup_terms = ttk.Combobox(sr_Canvas_2,width=23,font=('arial 15'),background='#2f516f',foreground='black')
                                sup_terms['values'] = ['ADD NEW TERMS','Due on Receipt','NET15','NET30','NET60',]
                                sup_terms.current(0)
                                sup_terms.bind("<<ComboboxSelected>>",add_newTerms)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_terms,tags=("combo2"))

                                sup_label12 = Label(sr_Canvas_2,width=20,height=1,text="ADD NEW TERMS",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label12,tags=('label12'))

                                sup_addterms = Entry(sr_Canvas_2,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_addterms,tags=("entry8"))

                                sup_label13 = Label(sr_Canvas_2,width=20,height=1,text="Opening Balance",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label13,tags=('label13'))

                                sup_obal = Entry(sr_Canvas_2,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_obal,tags=("entry9"))

                                sup_label14 = Label(sr_Canvas_2,width=20,height=1,text="Account No",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label14,tags=('label14'))

                                sup_accno = Entry(sr_Canvas_2,width=32,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_accno,tags=("entry10"))

                                sup_label15 = Label(sr_Canvas_2,width=20,height=1,text="GST Type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label15,tags=('label15'))

                                def selectGSTtype(evet):
                                    if sup_gtype.get() == "GST Unregistered":
                                        sr_Canvas_2.itemconfig("label16",state='hidden')
                                        sr_Canvas_2.itemconfig("entry11",state='hidden')
                                        sr_Canvas_2.itemconfig("label17",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label16",state='normal')
                                        sr_Canvas_2.itemconfig("entry11",state='normal')
                                        sr_Canvas_2.itemconfig("label17",state='normal')

                                sup_gtype = ttk.Combobox(sr_Canvas_2,width=31,font=('arial 15'))
                                sup_gtype['values'] = ['Choose...','GST Registered - Regular','GST Registered - Composition','GST Unregistered']
                                sup_gtype.current(0)
                                sup_gtype.bind("<<ComboboxSelected>>",selectGSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_gtype,tags=("combo3"))

                                sup_label16 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label16,tags=('label16'))

                                sup_gstin = Entry(sr_Canvas_2,width=32,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_gstin,tags=("entry11"))

                                def redirect_gstin(url):
                                    webbrowser.open_new_tab(url)

                                sup_label17 = Label(sr_Canvas_2,width=30,height=1,text="What is a GST registration type?",font=('arial 11'),background='#1b3857',anchor="w",fg="#3dd5f3")
                                sup_label17.bind("<Button-1>",lambda g: redirect_gstin('https://gstportalindia.in/types-of-gst-registration-for-indian-taxpayer/'))
                                sr_Canvas_2.create_window(0,0,window=sup_label17,tags=('label17'))

                                sup_label18 = Label(sr_Canvas_2,width=20,height=1,text="Tax Registration No",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label18,tags=('label18'))

                                sup_taxregno = Entry(sr_Canvas_2,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_taxregno,tags=("entry12"))

                                sup_label20 = Label(sr_Canvas_2,width=20,height=1,text="Default Expense Account",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label20,tags=('label20'))

                                sup_dexpenseaccnt = ttk.Combobox(sr_Canvas_2,width=23,font=('arial 15'),background='#2f516f',foreground='black')
                                sup_dexpenseaccnt['values'] = ['Choose Account','Advertising /Promotional','Bank Charges','Business Licenses and Permits','Charitable Contributions','Computer and Internet Expense','Continuing Education','Depreciation Expense','Dues and Subscriptions','Housekeeping Charges',
                                'Insurance Expense','Insurance Expense-General Liability Insurance','Insurance Expense-Health Insurance','Insurance Expense-Life and disability Insurance','Insurance Expense-Professional Liability','Internet Expense','Meals and Entertainment','Office Supplies',
                                'Postage and delivery','Printing and Reproduction','Professional Fees','Purchases','Rent Expense','Repair and Maintenance','Small Tools and Equipment','Swachh Bharat Cess Expense','Taxes-Property','Telephone Expense','Travel Expense','Uncategorised Expense','Utilities',
                                'Ask My Accountant','CGST write-off','GST write-off','IGST write-off','Miscellaneous Expense','Political Contributions','Reconciliation Discrepancies','SGST write-off','Tax Write-off','Vehicle Expenses','Cost of sales','Equipment Rental for Jobs','Freight and shipping Costs',
                                'Merchant Account Fees','Purchases - Hardware For Resale','Purchases - Software For Resale','SubContracted Services','Tools and Craft Supplies',]
                                sup_dexpenseaccnt.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_dexpenseaccnt,tags=("combo4"))

                                sup_label21 = Label(sr_Canvas_2,width=20,height=1,text="Apply TDS for Supplier",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label21,tags=('label21'))

                                sup_tds = ttk.Combobox(sr_Canvas_2,width=23,font=('arial 15'))
                                sup_tds['values'] = ['Choose...','Yes','No']
                                sup_tds.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_tds,tags=("combo5"))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline1"))

                                sup_label22 = Label(sr_Canvas_2,width=20,height=1,text="Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label22,tags=('label22'))

                                sup_label23 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label23,tags=('label23'))

                                sup_street = Text(sr_Canvas_2,width=103,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_street,tags=("entry13"))

                                sup_label24 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label24,tags=('label24'))

                                sup_city = Entry(sr_Canvas_2,width=50,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_city,tags=("entry14"))

                                sup_label25 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label25,tags=('label25'))

                                sup_state = Entry(sr_Canvas_2,width=50,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_state,tags=("entry15"))

                                sup_label26 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label26,tags=('label26'))

                                sup_pin = Entry(sr_Canvas_2,width=50,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_pin,tags=("entry16"))

                                sup_label27 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label27,tags=('label27'))

                                sup_country = ttk.Combobox(sr_Canvas_2,width=49,font=('arial 15'))
                                sup_country['values'] = ['Choose...','Afghanistan','Albania','Algeria','American Samoa','Andorra','Angola','Anguilla',
                                'Antigua & Barbuda','Argentina','Armenia','Aruba','Australia','Austria','Azerbaijan','Bahamas','Bahrain','Bangladesh',
                                'Barbados','Belarus','Belgium','Belize','Benin','Bermuda','Bhutan','Bolivia','Bonaire','Bosnia & Herzegovina','Botswana',
                                'Brazil','British Indian Ocean Ter','Brunei','Bulgaria','Burkina Faso','Burundi','Cambodia','Cameroon','Canada','Canary Islands',
                                'Cape Verde','Cayman Islands','Central African Republic','Chad','Channel Islands','Chile','China','Christmas Island','Cocos Island',
                                'Colombia','Comoros','Congo','Cook Islands','Costa Rica','Cote DIvoire','Croatia','Cuba','Curacao','Cyprus','Czech Republic','Denmark',
                                'Djibouti','Dominica','Dominican Republic','East Timor','Ecuador','Egypt','El Salvador','Equatorial Guinea','Eritrea','Estonia','Ethiopia',
                                'Falkland Islands','Faroe Islands','Fiji','Finland','France','French Guiana','French Polynesia','French Southern Ter','Gabon','Gambia','Georgia',
                                'Germany','Ghana','Gibraltar','Great Britain','Greece','Greenland','Grenada','Guadeloupe','Guam','Guatemala','Guinea','Guyana','Haiti','Hawaii',
                                'Honduras','Hong Kong','Hungary','Iceland','Indonesia','India','Iran','Iraq','Ireland','Isle of Man','Israel','Italy','Jamaica','Japan','Jordan',
                                'Kazakhstan','Kenya','Kiribati','Korea North','Korea South','Kuwait','Kyrgyzstan','Laos','Latvia','Lebanon','Lesotho','Liberia','Libya','Liechtenstein',
                                'Lithuania','Luxembourg','Macau','Macedonia','Madagascar','Malaysia','Malawi','Maldives','Mali','Malta','Marshall Islands','Martinique','Mauritania',
                                'Mauritius','Mayotte',]
                                sup_country.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_country,tags=("entry17"))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline2"))

                                sup_label28 = Label(sr_Canvas_2,width=20,height=1,text="Notes",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label28,tags=('label28'))

                                sup_notes = Text(sr_Canvas_2,width=103,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=sup_notes,tags=("entry18"))

                                sup_label29 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label29,tags=('label29'))

                                agreetoVar = BooleanVar()

                                sup_agree = Checkbutton(sr_Canvas_2,background='#1b3857',activebackground='#1b3857',onvalue=1,offvalue=0,variable=agreetoVar)
                                sr_Canvas_2.create_window(0,0,window=sup_agree,tags=("check1"))

                                def sup_addSupplier():
                                    title = sup_title.get()
                                    firstname = sup_fname.get()
                                    lastname = sup_lname.get()
                                    company = sup_company.get()
                                    email = emailVar1.get()
                                    mobile = mobVar1.get()
                                    website = webVar1.get()
                                    billingrate = sup_brate.get()
                                    terms = sup_terms.get()
                                    addterms = sup_addterms.get()
                                    openingbalance = sup_obal.get()
                                    accountno = sup_accno.get()
                                    gsttype = sup_gtype.get()
                                    gstin = sup_gstin.get()
                                    taxregistrationno = sup_taxregno.get()
                                    effectivedate = sup_effdate.get()
                                    defaultexpenceaccount = sup_dexpenseaccnt.get()
                                    tds = sup_tds.get()
                                    street = sup_street.get("1.0","end-1c")
                                    city = sup_city.get()
                                    state = sup_state.get()
                                    pincode = sup_pin.get()
                                    country = sup_country.get()
                                    notes = sup_notes.get("1.0","end-1c")
                                    cid_id = comp_data[0]

                                    if gsttype == "GST Unregistered":
                                        gstin = ''
                                        if validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if agreetoVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose..." or defaultexpenceaccount == 'Choose Account' or tds == 'Choose...' or country == 'Choose...':
                                                    pass
                                                else:
                                                    print('yes')
                                                    ins_sup_sql = "INSERT INTO app1_supplier(title,firstname,lastname,company,email,mobile,website,billingrate,terms,addterms,openingbalance,accountno,gsttype,gstin,taxregistrationno,effectivedate,defaultexpenceaccount,tds,street,city,state,pincode,country,notes,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                                    ins_sup_val = (title,firstname,lastname,company,email,mobile,website,billingrate,terms,addterms,openingbalance,accountno,gsttype,gstin,taxregistrationno,effectivedate,defaultexpenceaccount,tds,street,city,state,pincode,country,notes,cid_id)
                                                    fbcursor.execute(ins_sup_sql,ins_sup_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    sup_sql = "SELECT firstname,lastname FROM app1_supplier WHERE cid_id=%s"
                                                    sup_val = (comp_data[0],)
                                                    fbcursor.execute(sup_sql,sup_val)
                                                    sup_data = fbcursor.fetchall()

                                                    sup_list = []
                                                    if not sup_data:
                                                        sup_list.append('Select Customer')
                                                    else:
                                                        for s in sup_data:
                                                            sup_list.append(s[0] + " " + s[1])
                                                        sup_list.insert(0,'Select Customer')
                                                        ta_custCombo["values"] = sup_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    else:
                                        if validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if agreetoVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose..." or defaultexpenceaccount == 'Choose Account' or tds == 'Choose...' or country == 'Choose...':
                                                    pass
                                                else:
                                                    
                                                    ins_sup_sql = "INSERT INTO app1_supplier(title,firstname,lastname,company,email,mobile,website,billingrate,terms,addterms,openingbalance,accountno,gsttype,gstin,taxregistrationno,effectivedate,defaultexpenceaccount,tds,street,city,state,pincode,country,notes,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                                    ins_sup_val = (title,firstname,lastname,company,email,mobile,website,billingrate,terms,addterms,openingbalance,accountno,gsttype,gstin,taxregistrationno,effectivedate,defaultexpenceaccount,tds,street,city,state,pincode,country,notes,cid_id)
                                                    fbcursor.execute(ins_sup_sql,ins_sup_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    sup_sql = "SELECT firstname,lastname FROM app1_supplier WHERE cid_id=%s"
                                                    sup_val = (comp_data[0],)
                                                    fbcursor.execute(sup_sql,sup_val)
                                                    sup_data = fbcursor.fetchall()

                                                    sup_list = []
                                                    if not sup_data:
                                                        sup_list.append('Select Customer')
                                                    else:
                                                        for s in sup_data:
                                                            sup_list.append(s[0] + " " + s[1])
                                                        sup_list.insert(0,'Select Customer')
                                                        ta_custCombo["values"] = sup_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')


                                save_btn = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=113,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sup_addSupplier())
                                sr_Canvas_2.create_window(0,0,window=save_btn,tags=("button2"))

                                def ta_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:ta_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button1"))

                                sup_label19 = Label(sr_Canvas_2,width=20,height=1,text="Effective Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=sup_label19,tags=('label19'))

                                sup_effdate = DateEntry(sr_Canvas_2,width=23,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')

                                cwidth = root.winfo_screenwidth()

                                if cwidth > 1280:
                                    sr_Canvas_2.create_window(373.6111111111111,650.7936507936508,anchor='nw',window=sup_effdate,tags=("date"))
                                elif cwidth <= 1024:
                                    sr_Canvas_2.create_window(279.72222222222223,670.8994708994709,anchor='nw',window=sup_effdate,tags=("date"))
                                else:
                                    sr_Canvas_2.create_window(350.8333333333333,600,anchor='nw',window=sup_effdate,tags=("date"))

                            ta_plus1 = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addSupplier())
                            sr_Canvas_1.create_window(0,0,window=ta_plus1,tags=("button9"))

                            ta_label4 = Label(sr_Canvas_1,width=20,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label4,tags=("label57"))

                            cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                            cust_val = (comp_data[0],)
                            fbcursor.execute(cust_sql,cust_val)
                            cust_data = fbcursor.fetchall()

                            cust_list = []
                            if not cust_data:
                                cust_list.append('Select Customer')
                            else:
                                for c in cust_data:
                                    cust_list.append(c[0] + " " + c[1])
                                cust_list.insert(0,'Select Customer')

                            ta_custCombo = ttk.Combobox(sr_Canvas_1,width=62,font=('arial 15'))
                            ta_custCombo["values"] = cust_list
                            ta_custCombo.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_custCombo,tags=("combo10"))

                            def sr_addCustomer_1():
                                sr_Frame_1.grid_forget()
                                sr_Frame_2 = Frame(tab3_1,)
                                sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                def responsive_widgets2(event):
                                    dwidth = event.width
                                    dheight = event.height
                                    dcanvas = event.widget
                                    
                                    r1 = 25
                                    x1 = dwidth/63
                                    x2 = dwidth/1.021
                                    y1 = dheight/14 
                                    y2 = dheight/3.505

                                    dcanvas.coords("poly1",x1 + r1,y1,
                                    x1 + r1,y1,
                                    x2 - r1,y1,
                                    x2 - r1,y1,     
                                    x2,y1,     
                                    #--------------------
                                    x2,y1 + r1,     
                                    x2,y1 + r1,     
                                    x2,y2 - r1,     
                                    x2,y2 - r1,     
                                    x2,y2,
                                    #--------------------
                                    x2 - r1,y2,     
                                    x2 - r1,y2,     
                                    x1 + r1,y2,
                                    x1 + r1,y2,
                                    x1,y2,
                                    #--------------------
                                    x1,y2 - r1,
                                    x1,y2 - r1,
                                    x1,y1 + r1,
                                    x1,y1 + r1,
                                    x1,y1,
                                    )

                                    dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                    
                                    r2 = 25
                                    x11 = dwidth/63
                                    x21 = dwidth/1.021
                                    y11 = dheight/2.8
                                    y21 = dheight/0.6


                                    dcanvas.coords("poly2",x11 + r2,y11,
                                    x11 + r2,y11,
                                    x21 - r2,y11,
                                    x21 - r2,y11,     
                                    x21,y11,     
                                    #--------------------
                                    x21,y11 + r2,     
                                    x21,y11 + r2,     
                                    x21,y21 - r2,     
                                    x21,y21 - r2,     
                                    x21,y21,
                                    #--------------------
                                    x21 - r2,y21,     
                                    x21 - r2,y21,     
                                    x11 + r2,y21,
                                    x11 + r2,y21,
                                    x11,y21,
                                    #--------------------
                                    x11,y21 - r2,
                                    x11,y21 - r2,
                                    x11,y11 + r2,
                                    x11,y11 + r2,
                                    x11,y11,
                                    )

                                    dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                    dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                    dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                    dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                    dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                    dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                    dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                    dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                    dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                    dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                    dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                    dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                    dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                    dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                    dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                    dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                    dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                    dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                    dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                    dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                    dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                    dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                    dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                    dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                    dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                    dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                    dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                    dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                    dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                    dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                    dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                    dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                    dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                    dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                    dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                    dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                    dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                    dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                    dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                    dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                    dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                    dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                    dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                    dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                    dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                    dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                    dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                    dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                    dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                    dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                    dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                    dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                    dcanvas.coords("button2",dwidth/27,dheight/3)

                                sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                sr_Frame_2.grid_columnconfigure(0,weight=1)
                                sr_Frame_2.grid_rowconfigure(0,weight=1)

                                sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                cust_title.current(0)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                def select_GSTtype(event):
                                    if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                        sr_Canvas_2.itemconfig("label9",state='hidden')
                                        sr_Canvas_2.itemconfig("entry6",state='hidden')
                                    else:
                                        sr_Canvas_2.itemconfig("label9",state='normal')
                                        sr_Canvas_2.itemconfig("entry6",state='normal')

                                cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                cust_gtype.current(0)
                                cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                gstinVar = StringVar()
                                cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_gin.insert(0,'29APPCK7465F1Z1')

                                def del_placeholder(event):
                                    if cust_gin.get() == '29APPCK7465F1Z1':
                                        cust_gin.delete(0,END)
                                        cust_gin.config(fg="white")
                                    else:
                                        pass

                                cust_gin.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_gin.get() == '':
                                        cust_gin.insert(0,'29APPCK7465F1Z1')
                                        cust_gin.config(fg="grey")
                                    else:
                                        pass
                                cust_gin.bind("<FocusOut>",ret_placeholder)
                                
                                def validate_gstin(value):
                                    pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_gin.config(fg="white")
                                        return True

                                def invalid_gstin():
                                    cust_gin.config(fg="red")

                                valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                panVar = StringVar()
                                cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                cust_pan.insert(0,'APPCK7465F')

                                def del_placeholder(event):
                                    if cust_pan.get() == 'APPCK7465F':
                                        cust_pan.delete(0,END)
                                        cust_pan.config(fg="white")
                                    else:
                                        pass

                                cust_pan.bind("<FocusIn>",del_placeholder)

                                def ret_placeholder(event):
                                    if cust_pan.get() == '':
                                        cust_pan.insert(0,'APPCK7465F')
                                        cust_pan.config(fg="grey")
                                    else:
                                        pass
                                cust_pan.bind("<FocusOut>",ret_placeholder)

                                def validate_pan(value):
                                    pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_pan.config(fg="white")
                                        return True

                                def invalid_pan():
                                    cust_pan.config(fg="red")

                                valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                emailVar = StringVar()
                                cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_email(value):
                                    pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_email.config(fg="white")
                                        return True

                                def invalid_email():
                                    cust_email.config(fg="red")

                                valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                webVar = StringVar()
                                cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_web(value):
                                    pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_web.config(fg="white")
                                        return True

                                def invalid_web():
                                    cust_web.config(fg="red")

                                valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                mobVar = StringVar()
                                cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                def validate_mobile(value):
                                    pattern = r'[7-9][0-9]{9}'
                                    if re.fullmatch(pattern,value) is None:
                                        return False
                                    else:
                                        cust_mob.config(fg="white")
                                        return True

                                def invalid_mobile():
                                    cust_mob.config(fg="red")

                                valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                #--
                                cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                def sameas_billaddress():
                                    if sameasVar.get() == True:
                                        bill_address = cust_st1.get("1.0","end-1c")
                                        bill_city = cust_city.get()
                                        bill_state = cust_state.get()
                                        bill_pin = cust_pin.get()
                                        bill_country = cust_country.get()

                                        cust_st2.delete("1.0","end-1c")
                                        cust_st2.insert("1.0",bill_address)
                                        cust_city1.delete(0,END)
                                        cust_city1.insert(0,bill_city)
                                        cust_state1.delete(0,END)
                                        cust_state1.insert(0,bill_state)
                                        cust_pin1.delete(0,END)
                                        cust_pin1.insert(0,bill_pin)
                                        cust_country1.delete(0,END)
                                        cust_country1.insert(0,bill_country)
                                    else:
                                        pass

                                sameasVar = BooleanVar()
                                cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                termVar = BooleanVar()
                                cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                def sr_create_newCustomer():
                                    title = cust_title.get()
                                    firstname = cust_fname.get()
                                    lastname = cust_lname.get()
                                    company = cust_company.get()
                                    location = cust_location.get()
                                    gsttype = cust_gtype.get()
                                    gstin = gstinVar.get()
                                    panno = panVar.get()
                                    email = emailVar.get()
                                    website = webVar.get()
                                    mobile = mobVar.get()
                                    street = cust_st1.get("1.0","end-1c")
                                    city = cust_city.get()
                                    state = cust_state.get()
                                    pincode = cust_pin.get()
                                    country = cust_country.get()
                                    shipstreet = cust_st2.get("1.0","end-1c")
                                    shipcity = cust_city1.get()
                                    shipstate = cust_state1.get()
                                    shippincode = cust_pin1.get()
                                    shipcountry = cust_country1.get()

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()
                                    cid  = comp_data[0]

                                    
                                    
                                    if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                        gstin = ''
                                        if validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass 
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                                                    cust_val = (cid,)
                                                    fbcursor.execute(cust_sql,cust_val)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        ta_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                    elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                        pass
                                    else:
                                        if validate_gstin(gstin) is False: 
                                            pass
                                        elif validate_pan(panno) is False:
                                            pass 
                                        elif validate_email(email) is False: 
                                            pass
                                        elif validate_web(website) is False:
                                            pass
                                        elif validate_mobile(mobile) is False:
                                            pass
                                        else:
                                            if termVar.get() == False:
                                                pass
                                            else:
                                                if gsttype == "Choose...":
                                                    pass
                                                else:
                                                    ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                    ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                    fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                    finsysdb.commit()
                                                    sr_Frame_2.destroy()
                                                    cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                    fbcursor.execute(cust_sql,)
                                                    cust_data = fbcursor.fetchall()

                                                    cust_list = []
                                                    if not cust_data:
                                                        cust_list.append('Select Customer')
                                                    else:
                                                        for c in cust_data:
                                                            cust_list.append(c[0] + " " + c[1])
                                                        cust_list.insert(0,'Select Customer')
                                                        ta_custCombo["values"] = cust_list
                                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                
                                cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                def ta_goBack():
                                    sr_Frame_2.grid_forget()
                                    sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:ta_goBack())
                                sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                            ta_plus = Button(sr_Canvas_1,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer_1())
                            sr_Canvas_1.create_window(0,0,window=ta_plus,tags=("button10"))

                            ta_label5 = Label(sr_Canvas_1,width=20,height=1,text="billable(/hr)",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label5,tags=("label58"))

                            def ta_billable(event):
                                if ta_billCombo.get() == 'Yes':
                                    sr_Canvas_1.itemconfig("entry34",state='normal')
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("entry34",state='hidden')
                                    except:
                                        pass

                            ta_billCombo = ttk.Combobox(sr_Canvas_1,width=30,font=('arial 15'))
                            ta_billCombo['values'] = ['Yes','No',]
                            ta_billCombo.current(0)
                            ta_billCombo.bind("<<ComboboxSelected>>",ta_billable)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_billCombo,tags=("combo11"))

                            ta_unknown = Entry(sr_Canvas_1,width=31,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_unknown,tags=("entry34"))

                            ta_label6 = Label(sr_Canvas_1,width=20,height=1,text="Enter start and end time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label6,tags=("label59"))

                            def ta_startend(event):
                                if ta_startendCombo.get() == 'Yes':
                                    sr_Canvas_1.itemconfig("label60",state='normal')
                                    sr_Canvas_1.itemconfig("label61",state='normal')
                                    sr_Canvas_1.itemconfig("entry35",state='normal')
                                    sr_Canvas_1.itemconfig("entry36",state='normal')
                                    sr_Canvas_1.itemconfig("entry39",state='normal')
                                    sr_Canvas_1.itemconfig("entry40",state='normal')
                                else:
                                    try:
                                        sr_Canvas_1.itemconfig("label60",state='hidden')
                                        sr_Canvas_1.itemconfig("label61",state='hidden')
                                        sr_Canvas_1.itemconfig("entry35",state='hidden')
                                        sr_Canvas_1.itemconfig("entry36",state='hidden')
                                        sr_Canvas_1.itemconfig("entry39",state='hidden')
                                        sr_Canvas_1.itemconfig("entry40",state='hidden')
                                    except:
                                        pass

                            ta_startendCombo = ttk.Combobox(sr_Canvas_1,width=20,font=('arial 15'))
                            ta_startendCombo['values'] = ['Yes','No',]
                            ta_startendCombo.current(0)
                            ta_startendCombo.bind("<<ComboboxSelected>>",ta_startend)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_startendCombo,tags=("combo12"))

                            ta_label7 = Label(sr_Canvas_1,width=20,height=1,text="Start time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label7,tags=("label60"))

                            ta_start1 = ttk.Combobox(sr_Canvas_1,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_start1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                            ,"14","15","16","17","18","19","20","21","22","23"]
                            ta_start1.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_start1,tags=("entry35"))

                            ta_start2 = ttk.Combobox(sr_Canvas_1,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_start2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                            '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                            '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                            '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                            '59']
                            ta_start2.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_start2,tags=("entry54"))

                            ta_label8 = Label(sr_Canvas_1,width=20,height=1,text="End time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label8,tags=("label61"))

                            ta_end1 = ttk.Combobox(sr_Canvas_1,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_end1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                            ,"14","15","16","17","18","19","20","21","22","23"]
                            ta_end1.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_end1,tags=("entry36"))

                            ta_end2 = ttk.Combobox(sr_Canvas_1,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_end2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                            '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                            '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                            '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                            '59']
                            ta_end2.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_end2,tags=("entry55"))

                            ta_label9 = Label(sr_Canvas_1,width=20,height=1,text="Time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label9,tags=("label62"))

                            ta_time1 = ttk.Combobox(sr_Canvas_1,width=31,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_time1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                            ,"14","15","16","17","18","19","20","21","22","23"]
                            ta_time1.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_time1,tags=("entry37"))

                            ta_time2 = ttk.Combobox(sr_Canvas_1,width=31,font=('arial 15'),background='#2f516f',foreground='black')
                            ta_time2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                            '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                            '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                            '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                            '59']
                            ta_time2.current(0)
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_time2,tags=("entry56"))

                            ta_label10 = Label(sr_Canvas_1,width=20,height=1,text="Description",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                            sr_Canvas_1.create_window(0,0,window=ta_label10,tags=("label63"))

                            ta_desc = Text(sr_Canvas_1,width=67,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                            sr_Canvas_1.create_window(0,0,anchor='nw',window=ta_desc,tags=("entry38"))

                            def sr_saveTimeactivity():
                                timdatesale = ta_date.get_date()
                                timenamesale = ta_supplier.get()
                                timecustsale = ta_custCombo.get()
                                timechecksale = ta_billCombo.get()
                                
                                timecheckksale = ta_startendCombo.get()
                                if timechecksale == 'No':
                                    timebillsale = ''
                                else:
                                    timebillsale = ta_unknown.get()
                                if timecheckksale == 'No':
                                    timestartsale = ''
                                    timeendsale = ''
                                else:
                                    timestartsale = ta_start1.get() + ":" + ta_start2.get()
                                    timeendsale = ta_end1.get() + ":" + ta_end1.get()
                                tymesale = ta_time1.get() + ":" + ta_time2.get()
                                timedessale = ta_desc.get("1.0","end-1c")

                                if timenamesale == "Select Supplier" or timecustsale == "Select Customer" or tymesale == '' or timedessale == '':
                                    pass
                                else:
                                    ins_ta_sql = "INSERT INTO app1_timeactsale(timdatesale,timenamesale,timecustsale,timechecksale,timebillsale,timecheckksale,timestartsale,timeendsale,tymesale,timedessale,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                    ins_ta_val = (timdatesale,timenamesale,timecustsale,timechecksale,timebillsale,timecheckksale,timestartsale,timeendsale,tymesale,timedessale,comp_data[0])
                                    fbcursor.execute(ins_ta_sql,ins_ta_val)
                                    finsysdb.commit()
                                    sr_Frame_1.destroy()
                                    sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    show_sr_treeData()



                            save_btn = Button(sr_Canvas_1,text="Submit Form",font=('arial 12 bold'),width=20,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_saveTimeactivity())
                            sr_Canvas_1.create_window(0,0,window=save_btn,tags=("button11"))

                            def sr_goBack():
                                sr_Frame_1.grid_forget()
                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                            back_btn = Button(sr_Canvas_1,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                            sr_Canvas_1.create_window(0,0,window=back_btn,tags=("button3"))

                            ta_label2 = Label(sr_Canvas_1,width=20,height=1,text="Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                            sr_Canvas_1.create_window(0,0,window=ta_label2,tags=('label55'))

                            ta_date = DateEntry(sr_Canvas_1,width=30,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f')
                            cwidth = root.winfo_screenwidth()

                            if cwidth > 1280:
                                sr_Canvas_1.create_window(122,442,anchor='nw',window=ta_date,tags=("date3"))
                            elif cwidth <= 1024:
                                sr_Canvas_1.create_window(92,455,anchor='nw',window=ta_date,tags=("date3"))
                            else:
                                sr_Canvas_1.create_window(434,265,anchor='nw',window=ta_date,tags=("date3"))
                        
                        else:
                            pass

                    def sr_Actions(event):
                        if srt_actionCombo.get() == "Actions":
                            pass
                        elif srt_actionCombo.get() == "Delete": 
                            vkls=messagebox.askyesno("Delete", "Are you sure want to delete 1 row(s) ?")
                            if vkls==True:
                                row = sr_tree.item(sr_tree.focus())["values"]
                                
                                if row[1] == "Sales reciept":
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_sales_sql = "DELETE FROM app1_salesrecpts WHERE saleno=%s AND cid_id=%s"
                                    del_sales_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_sales_sql,del_sales_val)
                                    finsysdb.commit()
                                
                                elif row[1] == "Payment":
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_credit_sql = "DELETE FROM app1_payment WHERE refno=%s AND cid_id=%s"
                                    del_credit_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_credit_sql,del_credit_val)
                                    finsysdb.commit()
                                elif row[1] == "Credit Note":
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_credit_sql = "DELETE FROM app1_credit WHERE creditno=%s AND cid_id=%s"
                                    del_credit_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_credit_sql,del_credit_val)
                                    finsysdb.commit()
                                elif row[1] == "Estimate":
                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_est_sql = "DELETE FROM app1_estimate WHERE estimateno=%s AND cid_id=%s"
                                    del_est_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_est_sql,del_est_val)
                                    finsysdb.commit()
                                elif row[1] == "Delayed Charge":
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_delayed_sql = "DELETE FROM app1_delayedcharge WHERE delayedchargeno=%s AND cid_id=%s"
                                    del_delayed_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_delayed_sql,del_delayed_val)
                                    finsysdb.commit()
                                elif row[1] == "Time Activity":
                                    print("true")
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    del_time_sql = "DELETE FROM app1_timeactsale WHERE timeactsaleid=%s AND cid_id=%s"
                                    del_time_val = (row[2],comp_data[0])
                                    fbcursor.execute(del_time_sql,del_time_val)
                                    finsysdb.commit()
                                else:
                                    pass
                            else:
                                pass
                        else:
                            sr_Frame.grid_forget()
                            sr_Frame_1 = Frame(tab3_1,)
                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                            def responsive_widgets4(event):
                                dwidth = event.width
                                dheight = event.height
                                dcanvas = event.widget
                                
                                r1 = 25
                                x1 = dwidth/63
                                x2 = dwidth/1.021
                                y1 = dheight/14 
                                y2 = dheight/3.505

                                dcanvas.coords("poly1",x1 + r1,y1,
                                x1 + r1,y1,
                                x2 - r1,y1,
                                x2 - r1,y1,     
                                x2,y1,     
                                #--------------------
                                x2,y1 + r1,     
                                x2,y1 + r1,     
                                x2,y2 - r1,     
                                x2,y2 - r1,     
                                x2,y2,
                                #--------------------
                                x2 - r1,y2,     
                                x2 - r1,y2,     
                                x1 + r1,y2,
                                x1 + r1,y2,
                                x1,y2,
                                #--------------------
                                x1,y2 - r1,
                                x1,y2 - r1,
                                x1,y1 + r1,
                                x1,y1 + r1,
                                x1,y1,
                                )

                                dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                
                                r2 = 25
                                x11 = dwidth/63
                                x21 = dwidth/1.021
                                y11 = dheight/2.8
                                y21 = dheight/0.45


                                dcanvas.coords("poly2",x11 + r2,y11,
                                x11 + r2,y11,
                                x21 - r2,y11,
                                x21 - r2,y11,     
                                x21,y11,     
                                #--------------------
                                x21,y11 + r2,     
                                x21,y11 + r2,     
                                x21,y21 - r2,     
                                x21,y21 - r2,     
                                x21,y21,
                                #--------------------
                                x21 - r2,y21,     
                                x21 - r2,y21,     
                                x11 + r2,y21,
                                x11 + r2,y21,
                                x11,y21,
                                #--------------------
                                x11,y21 - r2,
                                x11,y21 - r2,
                                x11,y11 + r2,
                                x11,y11 + r2,
                                x11,y11,
                                )

                                r2 = 25
                                x11 = dwidth/63
                                x21 = dwidth/1.021
                                y11 = dheight/2.8
                                y21 = dheight/0.35


                                dcanvas.coords("poly3",x11 + r2,y11,
                                x11 + r2,y11,
                                x21 - r2,y11,
                                x21 - r2,y11,     
                                x21,y11,     
                                #--------------------
                                x21,y11 + r2,     
                                x21,y11 + r2,     
                                x21,y21 - r2,     
                                x21,y21 - r2,     
                                x21,y21,
                                #--------------------
                                x21 - r2,y21,     
                                x21 - r2,y21,     
                                x11 + r2,y21,
                                x11 + r2,y21,
                                x11,y21,
                                #--------------------
                                x11,y21 - r2,
                                x11,y21 - r2,
                                x11,y11 + r2,
                                x11,y11 + r2,
                                x11,y11,
                                )

                                r2 = 25
                                x11 = dwidth/63
                                x21 = dwidth/1.021
                                y11 = dheight/2.8
                                y21 = dheight/0.65


                                dcanvas.coords("poly4",x11 + r2,y11,
                                x11 + r2,y11,
                                x21 - r2,y11,
                                x21 - r2,y11,     
                                x21,y11,     
                                #--------------------
                                x21,y11 + r2,     
                                x21,y11 + r2,     
                                x21,y21 - r2,     
                                x21,y21 - r2,     
                                x21,y21,
                                #--------------------
                                x21 - r2,y21,     
                                x21 - r2,y21,     
                                x11 + r2,y21,
                                x11 + r2,y21,
                                x11,y21,
                                #--------------------
                                x11,y21 - r2,
                                x11,y21 - r2,
                                x11,y11 + r2,
                                x11,y11 + r2,
                                x11,y11,
                                )

                                r2 = 25
                                x11 = dwidth/63
                                x21 = dwidth/1.021
                                y11 = dheight/2.8
                                y21 = dheight/0.4


                                dcanvas.coords("poly5",x11 + r2,y11,
                                x11 + r2,y11,
                                x21 - r2,y11,
                                x21 - r2,y11,     
                                x21,y11,     
                                #--------------------
                                x21,y11 + r2,     
                                x21,y11 + r2,     
                                x21,y21 - r2,     
                                x21,y21 - r2,     
                                x21,y21,
                                #--------------------
                                x21 - r2,y21,     
                                x21 - r2,y21,     
                                x11 + r2,y21,
                                x11 + r2,y21,
                                x11,y21,
                                #--------------------
                                x11,y21 - r2,
                                x11,y21 - r2,
                                x11,y11 + r2,
                                x11,y11 + r2,
                                x11,y11,
                                )
                                

                                dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                dcanvas.coords("label2",dwidth/2,dheight/2.4)

                                #payment-------------
                                try:
                                    dcanvas.coords("label3",dwidth/7.91,dheight/1.76)
                                    dcanvas.coords("label4",dwidth/2.28,dheight/1.76)
                                    dcanvas.coords("label5",dwidth/1.23,dheight/1.76)
                                    dcanvas.coords("label6",dwidth/6.1,dheight/1.445)
                                    dcanvas.coords("label7",dwidth/6.1,dheight/1.235)
                                    dcanvas.coords("label8",dwidth/1.23,dheight/1.445)
                                    dcanvas.coords("label9",dwidth/1.23,dheight/1.235)
                                    dcanvas.coords("label10",dwidth/1.23,dheight/1.09)
                                    dcanvas.coords("label11",dwidth/1.23,dheight/1.04)
                                    dcanvas.coords("label12",dwidth/16.2,dheight/0.97)
                                    dcanvas.coords("label13",dwidth/9.8,dheight/0.94)
                                    dcanvas.coords("label14",dwidth/3.7,dheight/0.94)
                                    dcanvas.coords("label15",dwidth/2.12,dheight/0.94)
                                    dcanvas.coords("label16",dwidth/1.56,dheight/0.94)
                                    dcanvas.coords("label17",dwidth/1.245,dheight/0.94)
                                    dcanvas.coords("label18",dwidth/1.53,dheight/0.583)
                                    dcanvas.coords("label19",dwidth/1.53,dheight/0.55)
                                    dcanvas.coords("label20",dwidth/16.2,dheight/0.91)

                                    dcanvas.coords("entry1",dwidth/2.5,dheight/1.68)
                                    dcanvas.coords("entry2",dwidth/1.35,dheight/1.68)
                                    dcanvas.coords("entry3",dwidth/11,dheight/1.195)
                                    dcanvas.coords("entry4",dwidth/1.35,dheight/1.195)
                                    dcanvas.coords("entry5",dwidth/1.214,dheight/0.583)
                                    dcanvas.coords("entry6",dwidth/1.214,dheight/0.55)
                                    try:
                                        dcanvas.coords("entry7",dwidth/11,dheight/1.1)
                                    except:
                                        pass
                                    dcanvas.coords("entry8",dwidth/7.13,dheight/0.9)
                                    dcanvas.coords("entry9",dwidth/3.15,dheight/0.9)
                                    dcanvas.coords("entry10",dwidth/2.015,dheight/0.9)
                                    dcanvas.coords("entry11",dwidth/1.48,dheight/0.9)
                                    dcanvas.coords("entry12",dwidth/1.175,dheight/0.9)

                                    dcanvas.coords("combo1",dwidth/11,dheight/1.68)
                                    dcanvas.coords("combo2",dwidth/1.35,dheight/1.39)

                                    dcanvas.coords("button1",dwidth/3.89,dheight/1.6115)
                                    dcanvas.coords("button2",dwidth/1.103,dheight/1.3415)
                                    dcanvas.coords("button3",dwidth/27,dheight/3)
                                    dcanvas.coords("button4",dwidth/1.16,dheight/0.51)

                                    dcanvas.coords("line1",dwidth/31.6,dheight/1.002,dwidth/1.039,dheight/1.002)
                                    dcanvas.coords("line2",dwidth/31.6,dheight/0.94,dwidth/1.039,dheight/0.94)
                                    dcanvas.coords("line3",dwidth/31.6,dheight/1.002,dwidth/31.6,dheight/0.878)
                                    dcanvas.coords("line4",dwidth/1.039,dheight/1.002,dwidth/1.039,dheight/0.878)
                                    dcanvas.coords("line5",dwidth/11,dheight/1.002,dwidth/11,dheight/0.878)
                                    dcanvas.coords("line6",dwidth/4,dheight/1.002,dwidth/4,dheight/0.878)
                                    dcanvas.coords("line7",dwidth/2.8,dheight/1.002,dwidth/2.8,dheight/0.878)
                                    dcanvas.coords("line8",dwidth/1.65,dheight/1.002,dwidth/1.65,dheight/0.878)
                                    dcanvas.coords("line9",dwidth/1.25,dheight/1.002,dwidth/1.25,dheight/0.878)
                                    dcanvas.coords("line10",dwidth/1.7,dheight/0.6,dwidth/1.7,dheight/0.535)
                                    dcanvas.coords("line11",dwidth/1.078,dheight/0.6,dwidth/1.078,dheight/0.535)
                                    dcanvas.coords("line12",dwidth/1.7,dheight/0.6,dwidth/1.078,dheight/0.6)
                                    dcanvas.coords("line13",dwidth/1.7,dheight/0.566,dwidth/1.078,dheight/0.566)
                                    dcanvas.coords("line14",dwidth/1.7,dheight/0.535,dwidth/1.078,dheight/0.535)
                                    dcanvas.coords("line15",dwidth/1.39,dheight/0.6,dwidth/1.39,dheight/0.535)
                                    dcanvas.coords("line16",dwidth/31.6,dheight/0.878,dwidth/1.039,dheight/0.878)
                                except:
                                    pass

                                #sales receipt-----------
                                try:
                                    dcanvas.coords("label21",dwidth/7.91,dheight/1.76)
                                    dcanvas.coords("label22",dwidth/2.47,dheight/1.76)
                                    dcanvas.coords("label23",dwidth/6.13,dheight/1.44)
                                    dcanvas.coords("label24",dwidth/2.27,dheight/1.45)
                                    dcanvas.coords("label25",dwidth/6.13,dheight/0.907)
                                    dcanvas.coords("label26",dwidth/6.13,dheight/0.81)
                                    dcanvas.coords("label27",dwidth/2.27,dheight/0.81)
                                    try:
                                        dcanvas.coords("label28",dwidth/1.395,dheight/0.81)
                                    except:
                                        pass
                                    dcanvas.coords("label29",dwidth/1.225,dheight/1.75)
                                    dcanvas.coords("label30",dwidth/1.2,dheight/1.63)
                                    dcanvas.coords("label31",dwidth/20,dheight/0.675)
                                    dcanvas.coords("label32",dwidth/20,dheight/0.62)
                                    dcanvas.coords("label64",dwidth/20,dheight/0.565)
                                    dcanvas.coords("label65",dwidth/20,dheight/0.519)
                                    dcanvas.coords("label66",dwidth/20,dheight/0.481)
                                    dcanvas.coords("label67",dwidth/2.06,dheight/0.6)
                                    dcanvas.coords("label68",dwidth/2.06,dheight/0.549)
                                    dcanvas.coords("label69",dwidth/2.06,dheight/0.506)
                                    dcanvas.coords("label70",dwidth/2.06,dheight/0.47)
                                    dcanvas.coords("label33",dwidth/7.91,dheight/0.675)
                                    dcanvas.coords("label34",dwidth/4.2,dheight/0.675)
                                    dcanvas.coords("label35",dwidth/2.74,dheight/0.675)
                                    dcanvas.coords("label36",dwidth/2.07,dheight/0.675)
                                    dcanvas.coords("label37",dwidth/1.68,dheight/0.675)
                                    dcanvas.coords("label38",dwidth/1.39,dheight/0.675)
                                    dcanvas.coords("label39",dwidth/1.205,dheight/0.675)
                                    dcanvas.coords("label40",dwidth/1.52,dheight/0.436)
                                    dcanvas.coords("label41",dwidth/1.52,dheight/0.412)
                                    dcanvas.coords("label42",dwidth/1.52,dheight/0.3905)
                                    dcanvas.coords("label43",dwidth/1.54,dheight/1.45)

                                    dcanvas.coords("label44",dwidth/20,dheight/1.135)
                                    dcanvas.coords("label45",dwidth/20,dheight/1.03)
                                    dcanvas.coords("label46",dwidth/7.4,dheight/1.135)
                                    dcanvas.coords("label47",dwidth/3.342,dheight/1.135)
                                    dcanvas.coords("label48",dwidth/2.19,dheight/1.135)
                                    dcanvas.coords("label49",dwidth/1.68,dheight/1.135)
                                    dcanvas.coords("label50",dwidth/1.328,dheight/1.135)
                                    dcanvas.coords("label51",dwidth/1.11,dheight/1.135)
                                    dcanvas.coords("label52",dwidth/1.41,dheight/0.83)
                                    dcanvas.coords("label53",dwidth/1.41,dheight/0.77)
                                    dcanvas.coords("label54",dwidth/1.41,dheight/0.715)

                                    dcanvas.coords("label55",dwidth/2.4,dheight/2.254)
                                    dcanvas.coords("label56",dwidth/1.49,dheight/2.254)
                                    dcanvas.coords("label57",dwidth/2.4,dheight/1.8)
                                    dcanvas.coords("label58",dwidth/2.4,dheight/1.5)
                                    dcanvas.coords("label59",dwidth/2.4,dheight/1.28)
                                    dcanvas.coords("label60",dwidth/1.598,dheight/1.28)
                                    dcanvas.coords("label61",dwidth/1.212,dheight/1.28)
                                    dcanvas.coords("label62",dwidth/2.4,dheight/1.105)
                                    dcanvas.coords("label63",dwidth/2.4,dheight/0.979)

                                    dcanvas.coords("entry13",dwidth/2.72,dheight/1.68)
                                    dcanvas.coords("entry14",dwidth/11,dheight/1.39)
                                    dcanvas.coords("entry15",dwidth/11,dheight/0.885)
                                    dcanvas.coords("entry16",dwidth/11,dheight/0.79)
                                    dcanvas.coords("entry17",dwidth/2.72,dheight/0.79)
                                    dcanvas.coords("entry18",dwidth/5.13,dheight/0.63)
                                    dcanvas.coords("entry19",dwidth/3.39,dheight/0.63)
                                    dcanvas.coords("entry20",dwidth/2.24,dheight/0.63)
                                    dcanvas.coords("entry21",dwidth/1.85,dheight/0.63)
                                    dcanvas.coords("entry22",dwidth/1.5,dheight/0.63)
                                    dcanvas.coords("entry39",dwidth/5.13,dheight/0.5745)
                                    dcanvas.coords("entry40",dwidth/3.39,dheight/0.5745)
                                    dcanvas.coords("entry41",dwidth/2.24,dheight/0.5745)
                                    dcanvas.coords("entry42",dwidth/1.85,dheight/0.5745)
                                    dcanvas.coords("entry43",dwidth/1.5,dheight/0.5745)
                                    dcanvas.coords("entry44",dwidth/5.13,dheight/0.527)
                                    dcanvas.coords("entry45",dwidth/3.39,dheight/0.527)
                                    dcanvas.coords("entry46",dwidth/2.24,dheight/0.527)
                                    dcanvas.coords("entry47",dwidth/1.85,dheight/0.527)
                                    dcanvas.coords("entry48",dwidth/1.5,dheight/0.527)
                                    dcanvas.coords("entry49",dwidth/5.13,dheight/0.487)
                                    dcanvas.coords("entry50",dwidth/3.39,dheight/0.487)
                                    dcanvas.coords("entry51",dwidth/2.24,dheight/0.487)
                                    dcanvas.coords("entry52",dwidth/1.85,dheight/0.487)
                                    dcanvas.coords("entry53",dwidth/1.5,dheight/0.487)

                                    dcanvas.coords("entry23",dwidth/1.35,dheight/0.443)
                                    dcanvas.coords("entry24",dwidth/1.35,dheight/0.4175)
                                    dcanvas.coords("entry25",dwidth/1.35,dheight/0.394)
                                    dcanvas.coords("entry26",dwidth/11,dheight/0.751)

                                    dcanvas.coords("entry27",dwidth/4.7,dheight/1.057)
                                    dcanvas.coords("entry28",dwidth/2.43,dheight/1.057)
                                    dcanvas.coords("entry29",dwidth/1.91,dheight/1.057)
                                    dcanvas.coords("entry30",dwidth/1.46,dheight/1.057)

                                    dcanvas.coords("entry31",dwidth/1.275,dheight/0.85)
                                    dcanvas.coords("entry32",dwidth/1.275,dheight/0.784)
                                    dcanvas.coords("entry33",dwidth/1.275,dheight/0.727)
                                    dcanvas.coords("entry34",dwidth/1.525,dheight/1.45)

                                    dcanvas.coords("entry35",dwidth/1.81,dheight/1.24)
                                    dcanvas.coords("entry54",dwidth/1.55,dheight/1.24)
                                    dcanvas.coords("entry36",dwidth/1.33,dheight/1.24)
                                    dcanvas.coords("entry55",dwidth/1.185,dheight/1.24)
                                    dcanvas.coords("entry37",dwidth/2.91,dheight/1.08)
                                    dcanvas.coords("entry56",dwidth/1.55,dheight/1.08)
                                    dcanvas.coords("entry38",dwidth/2.91,dheight/0.96)

                                    dcanvas.coords("combo3",dwidth/11,dheight/1.68)
                                    try:
                                        dcanvas.coords("combo4",dwidth/1.55,dheight/0.79)
                                    except:
                                        pass
                                    dcanvas.coords("combo5",dwidth/7.909,dheight/0.62)
                                    dcanvas.coords("combo6",dwidth/1.206,dheight/0.62)
                                    dcanvas.coords("combo14",dwidth/7.909,dheight/0.5655)
                                    dcanvas.coords("combo15",dwidth/1.206,dheight/0.5655)
                                    dcanvas.coords("combo16",dwidth/7.909,dheight/0.519)
                                    dcanvas.coords("combo17",dwidth/1.206,dheight/0.519)
                                    dcanvas.coords("combo18",dwidth/7.909,dheight/0.481)
                                    dcanvas.coords("combo19",dwidth/1.206,dheight/0.481)

                                    dcanvas.coords("combo7",dwidth/7.4,dheight/1.035)
                                    dcanvas.coords("combo8",dwidth/1.111,dheight/1.035)

                                    dcanvas.coords("combo9",dwidth/1.53,dheight/2.15)
                                    dcanvas.coords("combo10",dwidth/2.91,dheight/1.73)
                                    dcanvas.coords("combo11",dwidth/2.91,dheight/1.45)
                                    dcanvas.coords("combo12",dwidth/2.91,dheight/1.24)

                                    dcanvas.coords("button5",dwidth/3.89,dheight/1.61)
                                    try:
                                        dcanvas.coords("button6",dwidth/1.23,dheight/0.775)
                                    except:
                                        pass
                                    dcanvas.coords("button7",dwidth/1.114,dheight/0.365)
                                    dcanvas.coords("button8",dwidth/1.114,dheight/0.45)

                                    dcanvas.coords("button9",dwidth/1.09,dheight/2.04)
                                    dcanvas.coords("button10",dwidth/1.09,dheight/1.66)
                                    dcanvas.coords("button11",dwidth/1.57,dheight/0.79)

                                    dcanvas.coords("button12",dwidth/1.09,dheight/0.619)
                                    dcanvas.coords("button13",dwidth/1.09,dheight/0.565)
                                    dcanvas.coords("button14",dwidth/1.09,dheight/0.518)
                                    dcanvas.coords("button15",dwidth/1.09,dheight/0.48)
                                    
                                    dcanvas.coords("line17",dwidth/31.6,dheight/0.7,dwidth/1.039,dheight/0.7)
                                    dcanvas.coords("line18",dwidth/31.6,dheight/0.65,dwidth/1.039,dheight/0.65)
                                    dcanvas.coords("line19",dwidth/31.6,dheight/0.59,dwidth/1.039,dheight/0.59)
                                    dcanvas.coords("line20",dwidth/31.6,dheight/0.541,dwidth/1.039,dheight/0.541)
                                    dcanvas.coords("line21",dwidth/31.6,dheight/0.499,dwidth/1.039,dheight/0.499)
                                    dcanvas.coords("line22",dwidth/31.6,dheight/0.464,dwidth/1.039,dheight/0.464)
                                    dcanvas.coords("line23",dwidth/31.6,dheight/0.7,dwidth/31.6,dheight/0.464)
                                    dcanvas.coords("line24",dwidth/1.039,dheight/0.7,dwidth/1.039,dheight/0.464)
                                    dcanvas.coords("line25",dwidth/15,dheight/0.7,dwidth/15,dheight/0.464)
                                    dcanvas.coords("line26",dwidth/5.35,dheight/0.7,dwidth/5.35,dheight/0.464)
                                    dcanvas.coords("line27",dwidth/3.5,dheight/0.7,dwidth/3.5,dheight/0.464)
                                    dcanvas.coords("line28",dwidth/2.28,dheight/0.7,dwidth/2.28,dheight/0.464)
                                    dcanvas.coords("line29",dwidth/1.88,dheight/0.7,dwidth/1.88,dheight/0.464)
                                    dcanvas.coords("line30",dwidth/1.52,dheight/0.7,dwidth/1.52,dheight/0.464)
                                    dcanvas.coords("line31",dwidth/1.277,dheight/0.7,dwidth/1.277,dheight/0.464)
                                    dcanvas.coords("line58",dwidth/1.144,dheight/0.7,dwidth/1.144,dheight/0.464)

                                    dcanvas.coords("line32",dwidth/1.7,dheight/0.451,dwidth/1.039,dheight/0.451)
                                    dcanvas.coords("line33",dwidth/1.7,dheight/0.425,dwidth/1.039,dheight/0.425)
                                    dcanvas.coords("line34",dwidth/1.7,dheight/0.401,dwidth/1.039,dheight/0.401)
                                    dcanvas.coords("line35",dwidth/1.7,dheight/0.38,dwidth/1.039,dheight/0.38)
                                    dcanvas.coords("line36",dwidth/1.7,dheight/0.451,dwidth/1.7,dheight/0.38)
                                    dcanvas.coords("line37",dwidth/1.365,dheight/0.451,dwidth/1.365,dheight/0.38)
                                    dcanvas.coords("line38",dwidth/1.039,dheight/0.451,dwidth/1.039,dheight/0.38)

                                    dcanvas.coords("line39",dwidth/31.6,dheight/1.2,dwidth/1.039,dheight/1.2)
                                    dcanvas.coords("line40",dwidth/31.6,dheight/1.085,dwidth/1.039,dheight/1.085)
                                    dcanvas.coords("line41",dwidth/31.6,dheight/0.99,dwidth/1.039,dheight/0.99)
                                    dcanvas.coords("line42",dwidth/31.6,dheight/0.91,dwidth/1.039,dheight/0.91)
                                    dcanvas.coords("line43",dwidth/31.6,dheight/1.2,dwidth/31.6,dheight/0.91)
                                    dcanvas.coords("line44",dwidth/15,dheight/1.2,dwidth/15,dheight/0.91)
                                    dcanvas.coords("line45",dwidth/4.9,dheight/1.2,dwidth/4.9,dheight/0.91)
                                    dcanvas.coords("line46",dwidth/2.5,dheight/1.2,dwidth/2.5,dheight/0.91)
                                    dcanvas.coords("line47",dwidth/1.95,dheight/1.2,dwidth/1.95,dheight/0.91)
                                    dcanvas.coords("line48",dwidth/1.48,dheight/1.2,dwidth/1.48,dheight/0.91)
                                    dcanvas.coords("line49",dwidth/1.195,dheight/1.2,dwidth/1.195,dheight/0.91)
                                    dcanvas.coords("line50",dwidth/1.039,dheight/1.2,dwidth/1.039,dheight/0.91)

                                    dcanvas.coords("line51",dwidth/1.55,dheight/0.87,dwidth/1.039,dheight/0.87)
                                    dcanvas.coords("line52",dwidth/1.55,dheight/0.8,dwidth/1.039,dheight/0.8)
                                    dcanvas.coords("line53",dwidth/1.55,dheight/0.74,dwidth/1.039,dheight/0.74)
                                    dcanvas.coords("line54",dwidth/1.55,dheight/0.69,dwidth/1.039,dheight/0.69)
                                    dcanvas.coords("line55",dwidth/1.55,dheight/0.87,dwidth/1.55,dheight/0.69)
                                    dcanvas.coords("line56",dwidth/1.29,dheight/0.87,dwidth/1.29,dheight/0.69)
                                    dcanvas.coords("line57",dwidth/1.039,dheight/0.87,dwidth/1.039,dheight/0.69)

                                    dcanvas.coords("line59",dwidth/31.6,dheight/0.7,dwidth/1.039,dheight/0.7)
                                    dcanvas.coords("line60",dwidth/31.6,dheight/0.65,dwidth/1.039,dheight/0.65)
                                    dcanvas.coords("line61",dwidth/31.6,dheight/0.59,dwidth/1.039,dheight/0.59)
                                    dcanvas.coords("line62",dwidth/31.6,dheight/0.541,dwidth/1.039,dheight/0.541)
                                    dcanvas.coords("line63",dwidth/31.6,dheight/0.499,dwidth/1.039,dheight/0.499)
                                    dcanvas.coords("line64",dwidth/31.6,dheight/0.464,dwidth/1.039,dheight/0.464)
                                    dcanvas.coords("line65",dwidth/31.6,dheight/0.7,dwidth/31.6,dheight/0.464)
                                    dcanvas.coords("line66",dwidth/1.039,dheight/0.7,dwidth/1.039,dheight/0.464)
                                    dcanvas.coords("line67",dwidth/15,dheight/0.7,dwidth/15,dheight/0.464)
                                    dcanvas.coords("line68",dwidth/4.5,dheight/0.7,dwidth/4.5,dheight/0.464)
                                    dcanvas.coords("line69",dwidth/2.5,dheight/0.7,dwidth/2.5,dheight/0.464)
                                    dcanvas.coords("line70",dwidth/2,dheight/0.7,dwidth/2,dheight/0.464)
                                    dcanvas.coords("line71",dwidth/1.55,dheight/0.7,dwidth/1.55,dheight/0.464)
                                    dcanvas.coords("line72",dwidth/1.277,dheight/0.7,dwidth/1.277,dheight/0.464)
                                    dcanvas.coords("line73",dwidth/1.144,dheight/0.7,dwidth/1.144,dheight/0.464)

                                    dcanvas.coords("line74",dwidth/1.7,dheight/0.451,dwidth/1.039,dheight/0.451)
                                    dcanvas.coords("line75",dwidth/1.7,dheight/0.425,dwidth/1.039,dheight/0.425)
                                    dcanvas.coords("line76",dwidth/1.7,dheight/0.401,dwidth/1.039,dheight/0.401)
                                    dcanvas.coords("line77",dwidth/1.7,dheight/0.38,dwidth/1.039,dheight/0.38)
                                    dcanvas.coords("line78",dwidth/1.7,dheight/0.451,dwidth/1.7,dheight/0.38)
                                    dcanvas.coords("line79",dwidth/1.365,dheight/0.451,dwidth/1.365,dheight/0.38)
                                    dcanvas.coords("line80",dwidth/1.039,dheight/0.451,dwidth/1.039,dheight/0.38)

                                    dcanvas.coords("label71",dwidth/20,dheight/0.675)
                                    dcanvas.coords("label72",dwidth/20,dheight/0.62)
                                    dcanvas.coords("label73",dwidth/20,dheight/0.565)
                                    dcanvas.coords("label74",dwidth/20,dheight/0.519)
                                    dcanvas.coords("label75",dwidth/20,dheight/0.481)
                                    dcanvas.coords("label76",dwidth/7,dheight/0.675)
                                    dcanvas.coords("label77",dwidth/3.2,dheight/0.675)
                                    dcanvas.coords("label78",dwidth/2.22,dheight/0.675)
                                    dcanvas.coords("label79",dwidth/1.75,dheight/0.675)
                                    dcanvas.coords("label80",dwidth/1.4,dheight/0.675)
                                    dcanvas.coords("label81",dwidth/1.205,dheight/0.675)
                                    dcanvas.coords("label82",dwidth/2.22,dheight/0.6)
                                    dcanvas.coords("label83",dwidth/2.22,dheight/0.549)
                                    dcanvas.coords("label84",dwidth/2.22,dheight/0.506)
                                    dcanvas.coords("label85",dwidth/2.22,dheight/0.47)

                                    dcanvas.coords("combo20",dwidth/6.98,dheight/0.62)
                                    dcanvas.coords("combo21",dwidth/1.206,dheight/0.62)
                                    dcanvas.coords("combo22",dwidth/6.98,dheight/0.5655)
                                    dcanvas.coords("combo23",dwidth/1.206,dheight/0.5655)
                                    dcanvas.coords("combo24",dwidth/6.98,dheight/0.519)
                                    dcanvas.coords("combo25",dwidth/1.206,dheight/0.519)
                                    dcanvas.coords("combo26",dwidth/6.98,dheight/0.481)
                                    dcanvas.coords("combo27",dwidth/1.206,dheight/0.481)

                                    dcanvas.coords("entry57",dwidth/4.32,dheight/0.63)
                                    dcanvas.coords("entry58",dwidth/2.45,dheight/0.63)
                                    dcanvas.coords("entry59",dwidth/1.965,dheight/0.63)
                                    dcanvas.coords("entry60",dwidth/1.525,dheight/0.63)
                                    dcanvas.coords("entry61",dwidth/4.32,dheight/0.5745)
                                    dcanvas.coords("entry62",dwidth/2.45,dheight/0.5745)
                                    dcanvas.coords("entry63",dwidth/1.965,dheight/0.5745)
                                    dcanvas.coords("entry64",dwidth/1.525,dheight/0.5745)
                                    dcanvas.coords("entry65",dwidth/4.32,dheight/0.527)
                                    dcanvas.coords("entry66",dwidth/2.45,dheight/0.527)
                                    dcanvas.coords("entry67",dwidth/1.965,dheight/0.527)
                                    dcanvas.coords("entry68",dwidth/1.525,dheight/0.527)
                                    dcanvas.coords("entry69",dwidth/4.32,dheight/0.487)
                                    dcanvas.coords("entry70",dwidth/2.45,dheight/0.487)
                                    dcanvas.coords("entry71",dwidth/1.965,dheight/0.487)
                                    dcanvas.coords("entry72",dwidth/1.525,dheight/0.487)

                                    dcanvas.coords("line81",dwidth/1.465,dheight/0.7,dwidth/1.465,dheight/0.464)
                                    dcanvas.coords("line82",dwidth/1.2,dheight/0.7,dwidth/1.2,dheight/0.464)
                                    
                                    dcanvas.coords("label86",dwidth/1.65,dheight/0.675)
                                    dcanvas.coords("label87",dwidth/1.325,dheight/0.675)
                                    dcanvas.coords("label88",dwidth/1.115,dheight/0.675)

                                    dcanvas.coords("entry73",dwidth/5.13,dheight/0.63)
                                    dcanvas.coords("entry74",dwidth/3.39,dheight/0.63)
                                    dcanvas.coords("entry75",dwidth/2.24,dheight/0.63)
                                    dcanvas.coords("entry76",dwidth/1.848,dheight/0.63)
                                    dcanvas.coords("entry77",dwidth/1.45,dheight/0.63)
                                    dcanvas.coords("entry78",dwidth/5.13,dheight/0.5745)
                                    dcanvas.coords("entry79",dwidth/3.39,dheight/0.5745)
                                    dcanvas.coords("entry80",dwidth/2.24,dheight/0.5745)
                                    dcanvas.coords("entry81",dwidth/1.848,dheight/0.5745)
                                    dcanvas.coords("entry82",dwidth/1.45,dheight/0.5745)
                                    dcanvas.coords("entry83",dwidth/5.13,dheight/0.527)
                                    dcanvas.coords("entry84",dwidth/3.39,dheight/0.527)
                                    dcanvas.coords("entry85",dwidth/2.24,dheight/0.527)
                                    dcanvas.coords("entry86",dwidth/1.848,dheight/0.527)
                                    dcanvas.coords("entry87",dwidth/1.45,dheight/0.527)
                                    dcanvas.coords("entry88",dwidth/5.13,dheight/0.487)
                                    dcanvas.coords("entry89",dwidth/3.39,dheight/0.487)
                                    dcanvas.coords("entry90",dwidth/2.24,dheight/0.487)
                                    dcanvas.coords("entry91",dwidth/1.848,dheight/0.487)
                                    dcanvas.coords("entry92",dwidth/1.45,dheight/0.487)

                                    dcanvas.coords("combo28",dwidth/1.112,dheight/0.62)
                                    dcanvas.coords("combo29",dwidth/1.112,dheight/0.5655)
                                    dcanvas.coords("combo30",dwidth/1.112,dheight/0.519)
                                    dcanvas.coords("combo31",dwidth/1.112,dheight/0.481)

                                    dcanvas.coords("line83",dwidth/31.6,dheight/1.12,dwidth/1.039,dheight/1.12)
                                    dcanvas.coords("line84",dwidth/31.6,dheight/1,dwidth/1.039,dheight/1)
                                    dcanvas.coords("line85",dwidth/31.6,dheight/0.87,dwidth/1.039,dheight/0.87)
                                    dcanvas.coords("line86",dwidth/31.6,dheight/0.77,dwidth/1.039,dheight/0.77)
                                    dcanvas.coords("line87",dwidth/31.6,dheight/0.69,dwidth/1.039,dheight/0.69)
                                    dcanvas.coords("line88",dwidth/31.6,dheight/0.625,dwidth/1.039,dheight/0.625)
                                    dcanvas.coords("line89",dwidth/31.6,dheight/1.12,dwidth/31.6,dheight/0.625)
                                    dcanvas.coords("line90",dwidth/1.039,dheight/1.12,dwidth/1.039,dheight/0.625)
                                    dcanvas.coords("line91",dwidth/15,dheight/1.12,dwidth/15,dheight/0.625)
                                    dcanvas.coords("line92",dwidth/4.5,dheight/1.12,dwidth/4.5,dheight/0.625)
                                    dcanvas.coords("line93",dwidth/2.5,dheight/1.12,dwidth/2.5,dheight/0.625)
                                    dcanvas.coords("line94",dwidth/2,dheight/1.12,dwidth/2,dheight/0.625)
                                    dcanvas.coords("line95",dwidth/1.5,dheight/1.12,dwidth/1.5,dheight/0.625)
                                    dcanvas.coords("line96",dwidth/1.2,dheight/1.12,dwidth/1.2,dheight/0.625)

                                    dcanvas.coords("line97",dwidth/1.7,dheight/0.6,dwidth/1.039,dheight/0.6)
                                    dcanvas.coords("line98",dwidth/1.7,dheight/0.55,dwidth/1.039,dheight/0.55)
                                    dcanvas.coords("line99",dwidth/1.7,dheight/0.507,dwidth/1.039,dheight/0.507)
                                    dcanvas.coords("line100",dwidth/1.7,dheight/0.47,dwidth/1.039,dheight/0.47)
                                    dcanvas.coords("line101",dwidth/1.7,dheight/0.6,dwidth/1.7,dheight/0.47)
                                    dcanvas.coords("line102",dwidth/1.365,dheight/0.6,dwidth/1.365,dheight/0.47)
                                    dcanvas.coords("line103",dwidth/1.039,dheight/0.6,dwidth/1.039,dheight/0.47)

                                    dcanvas.coords("label89",dwidth/20,dheight/1.05)
                                    dcanvas.coords("label90",dwidth/20,dheight/0.925)
                                    dcanvas.coords("label91",dwidth/20,dheight/0.815)
                                    dcanvas.coords("label92",dwidth/20,dheight/0.725)
                                    dcanvas.coords("label93",dwidth/20,dheight/0.655)
                                    dcanvas.coords("label94",dwidth/7,dheight/1.05)
                                    dcanvas.coords("label95",dwidth/3.2,dheight/1.05)
                                    dcanvas.coords("label96",dwidth/2.22,dheight/1.05)
                                    dcanvas.coords("label97",dwidth/1.72,dheight/1.05)
                                    dcanvas.coords("label98",dwidth/1.34,dheight/1.05)
                                    dcanvas.coords("label99",dwidth/1.121,dheight/1.05)

                                    dcanvas.coords("label100",dwidth/1.52,dheight/0.572)
                                    dcanvas.coords("label101",dwidth/1.52,dheight/0.528)
                                    dcanvas.coords("label102",dwidth/1.52,dheight/0.487)

                                    dcanvas.coords("label103",dwidth/2.22,dheight/0.89)
                                    dcanvas.coords("label104",dwidth/2.22,dheight/0.785)
                                    dcanvas.coords("label105",dwidth/2.22,dheight/0.701)
                                    dcanvas.coords("label106",dwidth/2.22,dheight/0.635)

                                    dcanvas.coords("entry93",dwidth/4.32,dheight/0.952)
                                    dcanvas.coords("entry94",dwidth/2.45,dheight/0.952)
                                    dcanvas.coords("entry95",dwidth/1.967,dheight/0.952)
                                    dcanvas.coords("entry96",dwidth/1.485,dheight/0.952)
                                    dcanvas.coords("entry97",dwidth/4.32,dheight/0.835)
                                    dcanvas.coords("entry98",dwidth/2.45,dheight/0.835)
                                    dcanvas.coords("entry99",dwidth/1.967,dheight/0.835)
                                    dcanvas.coords("entry100",dwidth/1.485,dheight/0.835)
                                    dcanvas.coords("entry101",dwidth/4.32,dheight/0.742)
                                    dcanvas.coords("entry102",dwidth/2.45,dheight/0.742)
                                    dcanvas.coords("entry103",dwidth/1.967,dheight/0.742)
                                    dcanvas.coords("entry104",dwidth/1.485,dheight/0.742)
                                    dcanvas.coords("entry105",dwidth/4.32,dheight/0.667)
                                    dcanvas.coords("entry106",dwidth/2.45,dheight/0.667)
                                    dcanvas.coords("entry107",dwidth/1.967,dheight/0.667)
                                    dcanvas.coords("entry108",dwidth/1.485,dheight/0.667)

                                    dcanvas.coords("entry109",dwidth/1.35,dheight/0.582)
                                    dcanvas.coords("entry110",dwidth/1.35,dheight/0.535)
                                    dcanvas.coords("entry111",dwidth/1.35,dheight/0.494)

                                    dcanvas.coords("combo32",dwidth/6.98,dheight/0.93)
                                    dcanvas.coords("combo33",dwidth/1.112,dheight/0.93)
                                    dcanvas.coords("combo34",dwidth/6.98,dheight/0.815)
                                    dcanvas.coords("combo35",dwidth/1.112,dheight/0.815)
                                    dcanvas.coords("combo36",dwidth/6.98,dheight/0.728)
                                    dcanvas.coords("combo37",dwidth/1.112,dheight/0.728)
                                    dcanvas.coords("combo38",dwidth/6.98,dheight/0.655)
                                    dcanvas.coords("combo39",dwidth/1.112,dheight/0.655)

                                    dcanvas.coords("label107",dwidth/1.19,dheight/1.45)

                                    dcanvas.coords("entry112",dwidth/1.27,dheight/1.392)
                                except:
                                    pass

                                try:
                                    dcanvas.coords("date",dwidth/2.71,dheight/1.392)
                                    dcanvas.coords("date1",dwidth/1.73,dheight/1.392)
                                    dcanvas.coords("date2",dwidth/11,dheight/1.392)
                                    dcanvas.coords("date3",dwidth/2.91,dheight/2.154)
                                    dcanvas.coords("date4",dwidth/11,dheight/1.39)
                                except:
                                    pass

                                dcanvas.coords("image1",dwidth/30,dheight/2.37)

                                dcanvas.coords("tree1",dwidth/15,dheight/0.79)
                                dcanvas.coords("combo13",dwidth/1.13,dheight/0.82)
                                dcanvas.coords("scroll",dwidth/1.087,dheight/0.695)

                            sr_Canvas_5 = Canvas(sr_Frame_1,bg='#2f516f',scrollregion=(0,0,700,2000))

                            sr_Frame_1.grid_columnconfigure(0,weight=1)
                            sr_Frame_1.grid_rowconfigure(0,weight=1)

                            sr_Scroll_1 = Scrollbar(sr_Frame_1,orient=VERTICAL)
                            sr_Scroll_1.grid(row=0,column=1,sticky='ns')
                            sr_Scroll_1.config(command=sr_Canvas_5.yview)
                            sr_Canvas_5.bind("<Configure>", responsive_widgets4)
                            sr_Canvas_5.config(yscrollcommand=sr_Scroll_1.set)
                            sr_Canvas_5.grid(row=0,column=0,sticky='nsew')

                            if srt_actionCombo.get() == 'Edit':
                                row = sr_tree.item(sr_tree.focus())["values"]
                                if row[1] == "Sales reciept":
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_salesrcpt_sql = "SELECT * FROM app1_salesrecpts WHERE saleno=%s AND cid_id=%s"
                                    get_salesrcpt_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_salesrcpt_sql,get_salesrcpt_val)
                                    get_salesrcpt_data = fbcursor.fetchone()

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    cm_label1 = Label(sr_Canvas_5,width=18,height=1,text="CASH MEMO",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=cm_label1,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))

                                    cm_label2 = Label(sr_Canvas_5,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=cm_label2,tags=("label2"))

                                    cm_label3 = Label(sr_Canvas_5,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=cm_label3,tags=("label21"))

                                    cm_custCombo = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_custCombo,tags=("combo3"))

                                    cm_label4 = Label(sr_Canvas_5,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label4,tags=('label22'))

                                    cm_email = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_email,tags=("entry13"))

                                    cm_labelsrpd = Label(sr_Canvas_5,width=15,height=1,text="Sales receipt No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_labelsrpd,tags=('label107'))

                                    cm_srpdentry = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_srpdentry,tags=("entry112"))

                                    cm_label5 = Label(sr_Canvas_5,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label5,tags=('label23'))

                                    cm_baddress = Text(sr_Canvas_5,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_baddress,tags=("entry14"))

                                    cm_label7 = Label(sr_Canvas_5,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label7,tags=('label25'))

                                    def gst_selection(event):
                                        cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']

                                        ncplace_gstlist = ['Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                        '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                        if not comp_data:
                                            pass
                                        elif comp_data[4] == cm_pofsupply.get():
                                            cmt_entry7["values"] = cplace_gstlist
                                            cmt_entry17["values"] = cplace_gstlist
                                            cmt_entry24["values"] = cplace_gstlist
                                            cmt_entry31["values"] = cplace_gstlist
                                        else:
                                            cmt_entry7["values"] = ncplace_gstlist
                                            cmt_entry17["values"] = ncplace_gstlist
                                            cmt_entry24["values"] = ncplace_gstlist
                                            cmt_entry31["values"] = ncplace_gstlist

                                    cm_pofsupply = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f')
                                    pofsupply_list = ['Kerala','Andaman and Nicobar Islads','Andhra Predhesh','Arunachal Predesh',
                                    'Assam','Bihar','Chandigarh','Chhattisgarh','Dadra and Nagar Haveli','Damn anad Diu','Delhi',
                                    'Goa','Gujarat','Haryana','Himachal Predesh','Jammu and Kashmir','Jharkhand','Karnataka','Ladakh',
                                    'Lakshadweep','Madhya Predesh','Maharashtra','Manipur','Meghalaya','Mizoram','Nagaland','Odisha',
                                    'Puducherry','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura','Uttar Predesh','Uttarakhand',
                                    'West Bengal','Other Territory',]
                                    cm_pofsupply["values"] = pofsupply_list
                                    cm_pofsupply.bind("<<ComboboxSelected>>",gst_selection)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_pofsupply,tags=("entry15"))

                                    cm_label8 = Label(sr_Canvas_5,width=20,height=1,text="Payment Method",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label8,tags=('label26'))

                                    def cm_show_pmethod(event):
                                        if cm_pmethod.get() == "Add new":
                                            cm_pmethod.delete(0,END)
                                            sr_Canvas_5.itemconfig("entry26",state='normal')
                                        else:
                                            sr_Canvas_5.itemconfig("entry26",state='hidden')

                                    cm_pmethod = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f')
                                    pmethod_list_1 = ['Cash','Cheque','Credit Card','Add new']
                                    cm_pmethod["values"] = pmethod_list_1
                                    cm_pmethod.bind("<<ComboboxSelected>>",cm_show_pmethod)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_pmethod,tags=("entry16"))

                                    def cm_addnew_pmethod(event):
                                        pmethod_list_1.insert(0,cm_newmeth.get())

                                        cm_pmethod["values"] = pmethod_list_1

                                    cm_newmeth = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    cm_newmeth.bind("<FocusOut>",cm_addnew_pmethod)
                                    sr_Canvas_5.create_window(115,755,anchor='nw',state=HIDDEN,window=cm_newmeth,tags=("entry26"))

                                    cm_label9 = Label(sr_Canvas_5,width=20,height=1,text="Reference No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label9,tags=('label27'))

                                    cm_ref = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_ref,tags=("entry17"))

                                    cm_label10 = Label(sr_Canvas_5,width=20,height=1,text="Deposit to:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label10,tags=('label28'))

                                    cm_depto = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f')

                                    dep_list = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                                    'Deferred Krishi Kalyan Cess Input Credit','Deferred SGST','Deferred Service Tax Input Credit',
                                    'Deferred VAT Input Credit','GST Refund','Inventory Asset','Krishi Kalyan Cess Refund'
                                    ,'Prepaid Insurance','Service Tax Refund','TDS Receivable','Uncategorised Asset','Undeposited Fund',]

                                    dep_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s"
                                    dep_val = (comp_data[0],)
                                    fbcursor.execute(dep_sql,dep_val)
                                    dep_data = fbcursor.fetchall()

                                    for d in dep_data:
                                        dep_list.insert(0,d)
                                    cm_depto['values'] = dep_list
                                    cm_depto.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cm_depto,tags=("combo4"))

                                    cm_label11 = Label(sr_Canvas_5,width=20,height=1,text="AMOUNT",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label11,tags=('label29'))

                                    cm_label12 = Label(sr_Canvas_5,width=20,height=1,text="0.00",font=('arial 14'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label12,tags=('label30'))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line17"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line18"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line19"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line20"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line21"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line22"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line23"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line24"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line25"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line26"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line27"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line28"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line29"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line30"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line31"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line58"))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line32"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line33"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line34"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line35"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line36"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line37"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line38"))

                                    cm_label13 = Label(sr_Canvas_5,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label13,tags=('label31'))

                                    cm_label14 = Label(sr_Canvas_5,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label14,tags=('label32'))

                                    cm_label18 = Label(sr_Canvas_5,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label18,tags=('label33'))

                                    cm_label19 = Label(sr_Canvas_5,width=10,height=1,text="HSN",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label19,tags=('label34'))

                                    cm_label20 = Label(sr_Canvas_5,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label20,tags=('label35'))

                                    cm_label21 = Label(sr_Canvas_5,width=6,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label21,tags=('label36'))

                                    cm_label22 = Label(sr_Canvas_5,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label22,tags=('label37'))

                                    cm_label23 = Label(sr_Canvas_5,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label23,tags=('label38'))

                                    cm_label24 = Label(sr_Canvas_5,width=8,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label24,tags=('label39')) 

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                                    get_inventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_inventory_sql,get_inventory_val)
                                    get_inventory_data = fbcursor.fetchall()

                                    get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                                    get_noninventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                                    get_noninventory_data = fbcursor.fetchall()

                                    get_service_sql = "SELECT * FROM app1_service WHERE cid_id=%s" 
                                    get_service_val = (comp_data[0],)                      
                                    fbcursor.execute(get_service_sql,get_service_val)
                                    get_service_data = fbcursor.fetchall()

                                    get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                                    get_bundle_val = (comp_data[0],)                      
                                    fbcursor.execute(get_bundle_sql,get_bundle_val)
                                    get_bundle_data = fbcursor.fetchall()

                                    product_list = []

                                    if not get_inventory_data:
                                        pass
                                    else:
                                        for i in get_inventory_data:
                                            product_list.append(i[2])

                                    if not get_noninventory_data:
                                        pass
                                    else:
                                        for n in get_noninventory_data:
                                            product_list.append(n[2])
                                            
                                    if not get_service_data:
                                        pass
                                    else:
                                        for s in get_service_data:
                                            product_list.append(s[2])

                                    if not get_bundle_data:
                                        pass
                                    else:
                                        for b in get_bundle_data:
                                            product_list.append(b[2])
                                    
                                    product_list.insert(0,"Select Product")

                                    def view_bundleitems(b):
                                        sr_Frame_1.grid_forget()
                                        sr_Frame_4 = Frame(tab3_1,)
                                        sr_Frame_4.grid(row=0,column=0,sticky='nsew')

                                        def responsive_widgets3(event):
                                            dwidth = event.width
                                            dheight = event.height
                                            dcanvas = event.widget

                                            r1 = 25
                                            x1 = dwidth/63
                                            x2 = dwidth/1.021
                                            y1 = dheight/14 
                                            y2 = dheight/3.505

                                            dcanvas.coords("poly1",x1 + r1,y1,
                                            x1 + r1,y1,
                                            x2 - r1,y1,
                                            x2 - r1,y1,     
                                            x2,y1,     
                                            #--------------------
                                            x2,y1 + r1,     
                                            x2,y1 + r1,     
                                            x2,y2 - r1,     
                                            x2,y2 - r1,     
                                            x2,y2,
                                            #--------------------
                                            x2 - r1,y2,     
                                            x2 - r1,y2,     
                                            x1 + r1,y2,
                                            x1 + r1,y2,
                                            x1,y2,
                                            #--------------------
                                            x1,y2 - r1,
                                            x1,y2 - r1,
                                            x1,y1 + r1,
                                            x1,y1 + r1,
                                            x1,y1,
                                            )

                                            dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                            
                                            r2 = 25
                                            x11 = dwidth/63
                                            x21 = dwidth/1.021
                                            y11 = dheight/2.8
                                            y21 = dheight/0.9


                                            dcanvas.coords("poly2",x11 + r2,y11,
                                            x11 + r2,y11,
                                            x21 - r2,y11,
                                            x21 - r2,y11,     
                                            x21,y11,     
                                            #--------------------
                                            x21,y11 + r2,     
                                            x21,y11 + r2,     
                                            x21,y21 - r2,     
                                            x21,y21 - r2,     
                                            x21,y21,
                                            #--------------------
                                            x21 - r2,y21,     
                                            x21 - r2,y21,     
                                            x11 + r2,y21,
                                            x11 + r2,y21,
                                            x11,y21,
                                            #--------------------
                                            x11,y21 - r2,
                                            x11,y21 - r2,
                                            x11,y11 + r2,
                                            x11,y11 + r2,
                                            x11,y11,
                                            )

                                            dcanvas.coords("label1",dwidth/2,dheight/8.24)

                                            dcanvas.coords("line1",dwidth/13,dheight/2.2,dwidth/1.09,dheight/2.2)
                                            dcanvas.coords("line2",dwidth/13,dheight/1.65,dwidth/1.09,dheight/1.65)
                                            dcanvas.coords("line3",dwidth/13,dheight/1.32,dwidth/1.09,dheight/1.32)
                                            dcanvas.coords("line4",dwidth/13,dheight/1.1,dwidth/1.09,dheight/1.1)
                                            dcanvas.coords("line5",dwidth/13,dheight/0.945,dwidth/1.09,dheight/0.945)
                                            dcanvas.coords("line6",dwidth/13,dheight/2.2,dwidth/13,dheight/0.945)
                                            dcanvas.coords("line7",dwidth/1.09,dheight/2.2,dwidth/1.09,dheight/0.945)
                                            dcanvas.coords("line8",dwidth/5.35,dheight/2.2,dwidth/5.35,dheight/0.945)
                                            dcanvas.coords("line9",dwidth/3.5,dheight/2.2,dwidth/3.5,dheight/0.945)
                                            dcanvas.coords("line10",dwidth/2.28,dheight/2.2,dwidth/2.28,dheight/0.945)
                                            dcanvas.coords("line11",dwidth/1.84,dheight/2.2,dwidth/1.84,dheight/0.945)
                                            dcanvas.coords("line12",dwidth/1.49,dheight/2.2,dwidth/1.49,dheight/0.945)
                                            dcanvas.coords("line13",dwidth/1.25,dheight/2.2,dwidth/1.25,dheight/0.945)

                                            dcanvas.coords("entry1",dwidth/11.5,dheight/1.99)
                                            dcanvas.coords("entry2",dwidth/5.1,dheight/1.99)
                                            dcanvas.coords("entry3",dwidth/3.38,dheight/1.99)
                                            dcanvas.coords("entry4",dwidth/2.249,dheight/1.99)
                                            dcanvas.coords("entry5",dwidth/1.81,dheight/1.99)
                                            dcanvas.coords("entry6",dwidth/1.465,dheight/1.99)

                                            dcanvas.coords("entry7",dwidth/11.5,dheight/1.525)
                                            dcanvas.coords("entry8",dwidth/5.1,dheight/1.525)
                                            dcanvas.coords("entry9",dwidth/3.38,dheight/1.525)
                                            dcanvas.coords("entry10",dwidth/2.249,dheight/1.525)
                                            dcanvas.coords("entry11",dwidth/1.81,dheight/1.525)
                                            dcanvas.coords("entry12",dwidth/1.465,dheight/1.525)

                                            dcanvas.coords("entry13",dwidth/11.5,dheight/1.24)
                                            dcanvas.coords("entry14",dwidth/5.1,dheight/1.24)
                                            dcanvas.coords("entry15",dwidth/3.38,dheight/1.24)
                                            dcanvas.coords("entry16",dwidth/2.249,dheight/1.24)
                                            dcanvas.coords("entry17",dwidth/1.81,dheight/1.24)
                                            dcanvas.coords("entry18",dwidth/1.465,dheight/1.24)

                                            dcanvas.coords("entry19",dwidth/11.5,dheight/1.045)
                                            dcanvas.coords("entry20",dwidth/5.1,dheight/1.045)
                                            dcanvas.coords("entry21",dwidth/3.38,dheight/1.045)
                                            dcanvas.coords("entry22",dwidth/2.249,dheight/1.045)
                                            dcanvas.coords("entry23",dwidth/1.81,dheight/1.045)
                                            dcanvas.coords("entry24",dwidth/1.465,dheight/1.045)

                                            dcanvas.coords("combo1",dwidth/1.165,dheight/1.88)
                                            dcanvas.coords("combo2",dwidth/1.165,dheight/1.46)
                                            dcanvas.coords("combo3",dwidth/1.165,dheight/1.2)
                                            dcanvas.coords("combo4",dwidth/1.165,dheight/1.019)

                                            dcanvas.coords("button2",dwidth/27,dheight/3)
                                        
                                        sr_Canvas_4 = Canvas(sr_Frame_4,bg='#2f516f',scrollregion=(0,0,700,1200))

                                        sr_Frame_4.grid_columnconfigure(0,weight=1)
                                        sr_Frame_4.grid_rowconfigure(0,weight=1)

                                        sr_Scroll_3 = Scrollbar(sr_Frame_4,orient=VERTICAL)
                                        sr_Scroll_3.grid(row=0,column=1,sticky='ns')
                                        sr_Scroll_3.config(command=sr_Canvas_4.yview)
                                        sr_Canvas_4.bind("<Configure>", responsive_widgets3)
                                        sr_Canvas_4.config(yscrollcommand=sr_Scroll_3.set)
                                        sr_Canvas_4.grid(row=0,column=0,sticky='nsew')

                                        sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                        sr_Canvas_4.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                        sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line1"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line2"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line3"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line4"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line5"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line6"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line7"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line8"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line9"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line10"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line11"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line12"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line13"))

                                        def bt_goBack():
                                            sr_Frame_4.grid_forget()
                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        back_btn = Button(sr_Canvas_4,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:bt_goBack())
                                        sr_Canvas_4.create_window(0,0,window=back_btn,tags=("button2"))

                                        global bt1_entry1,bt1_entry4,bt1_entry6,bt1_entry7,bt1_entry8,bt1_entry11,bt1_entry13,bt1_entry14,bt1_entry15,bt1_entry18,bt1_entry20,bt1_entry21,bt1_entry22,bt1_entry25,bt1_entry27,bt1_entry28
                                        global bt2_entry1,bt2_entry4,bt2_entry6,bt2_entry7,bt2_entry8,bt2_entry11,bt2_entry13,bt2_entry14,bt2_entry15,bt2_entry18,bt2_entry20,bt2_entry21,bt2_entry22,bt2_entry25,bt2_entry27,bt2_entry28
                                        global bt3_entry1,bt3_entry4,bt3_entry6,bt3_entry7,bt3_entry8,bt3_entry11,bt3_entry13,bt3_entry14,bt3_entry15,bt3_entry18,bt3_entry20,bt3_entry21,bt3_entry22,bt3_entry25,bt3_entry27,bt3_entry28
                                        global bt4_entry1,bt4_entry4,bt4_entry6,bt4_entry7,bt4_entry8,bt4_entry11,bt4_entry13,bt4_entry14,bt4_entry15,bt4_entry18,bt4_entry20,bt4_entry21,bt4_entry22,bt4_entry25,bt4_entry27,bt4_entry28

                                        if b == 1:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry1.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt1_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry1,tags=("entry1"))

                                            bt1_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry2,tags=("entry2"))

                                            bt1_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry3,tags=("entry3"))

                                            bt1_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry4,tags=("entry4"))

                                            bt1_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry5,tags=("entry5"))

                                            bt1_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry6,tags=("entry6"))

                                            bt1_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry7,tags=("combo1"))

                                            bt1_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry8,tags=("entry7"))

                                            bt1_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry9,tags=("entry8"))

                                            bt1_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry10,tags=("entry9"))

                                            bt1_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry11,tags=("entry10"))

                                            bt1_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry12,tags=("entry11"))

                                            bt1_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry13,tags=("entry12"))

                                            bt1_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry14,tags=("combo2"))

                                            bt1_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry15,tags=("entry13"))

                                            bt1_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry16,tags=("entry14"))

                                            bt1_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry17,tags=("entry15"))

                                            bt1_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry18,tags=("entry16"))

                                            bt1_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry19,tags=("entry17"))

                                            bt1_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry20,tags=("entry18"))

                                            bt1_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry21,tags=("combo3"))

                                            bt1_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry22,tags=("entry19"))

                                            bt1_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry23,tags=("entry20"))

                                            bt1_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry24,tags=("entry21"))

                                            bt1_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry25,tags=("entry22"))

                                            bt1_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry26,tags=("entry23"))

                                            bt1_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry27,tags=("entry24"))

                                            bt1_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val1 = (cmt_entry1.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql1,get_bundle_val1)
                                                get_bundle_data1 = fbcursor.fetchone()
                                            except:
                                                pass 
                                            try:
                                                bt1_entry1.delete(0,END)
                                                bt1_entry1.insert(0,get_bundle_data1[5])
                                                bt1_entry2.delete(0,END)
                                                bt1_entry2.insert(0,get_bundle_data1[9])
                                                bt1_entry3.delete(0,END)
                                                bt1_entry3.insert(0,get_bundle_data1[13])
                                                bt1_entry4.delete(0,END)
                                                bt1_entry5.delete(0,END)
                                                bt1_entry6.delete(0,END)
                                                if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                                    bt1_entry4.insert(0,0)
                                                else:
                                                    bt1_entry4.insert(0,get_bundle_data1[17])
                                                if get_bundle_data1[21] == '' or get_bundle_data1[21] is None or get_bundle_data1[21] == NULL:
                                                    bt1_entry5.insert(0,0)
                                                else:
                                                    bt1_entry5.insert(0,get_bundle_data1[21])
                                                if get_bundle_data1[25] == '' or get_bundle_data1[25] is None or get_bundle_data1[25] == NULL:
                                                    bt1_entry6.insert(0,0)
                                                else:
                                                    bt1_entry6.insert(0,get_bundle_data1[25])
                                                
                                                bt1_entry7.delete(0,END)
                                                bt1_entry8.delete(0,END)
                                                bt1_entry8.insert(0,get_bundle_data1[6])
                                                bt1_entry9.delete(0,END)
                                                bt1_entry9.insert(0,get_bundle_data1[10])
                                                bt1_entry10.delete(0,END)
                                                bt1_entry10.insert(0,get_bundle_data1[14])
                                                bt1_entry11.delete(0,END)
                                                bt1_entry12.delete(0,END)
                                                bt1_entry13.delete(0,END)
                                                if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[22] == NULL:
                                                    bt1_entry11.insert(0,0)
                                                else:
                                                    bt1_entry11.insert(0,get_bundle_data1[18])
                                                if get_bundle_data1[22] == '' or get_bundle_data1[22] is None or get_bundle_data1[22] == NULL:
                                                    bt1_entry12.insert(0,0)
                                                else:
                                                    bt1_entry12.insert(0,get_bundle_data1[22])
                                                if get_bundle_data1[26] == '' or get_bundle_data1[26] is None or get_bundle_data1[26] == NULL:
                                                    bt1_entry13.insert(0,0)
                                                else:
                                                    bt1_entry13.insert(0,get_bundle_data1[26])

                                                bt1_entry14.delete(0,END)
                                                bt1_entry15.delete(0,END)
                                                bt1_entry15.insert(0,get_bundle_data1[7])
                                                bt1_entry16.delete(0,END)
                                                bt1_entry16.insert(0,get_bundle_data1[11])
                                                bt1_entry17.delete(0,END)
                                                bt1_entry17.insert(0,get_bundle_data1[15])
                                                bt1_entry18.delete(0,END)
                                                bt1_entry19.delete(0,END)
                                                bt1_entry20.delete(0,END)
                                                if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                                    bt1_entry18.insert(0,0)
                                                else:
                                                    bt1_entry18.insert(0,get_bundle_data1[19])
                                                if get_bundle_data1[23] == '' or get_bundle_data1[23] is None or get_bundle_data1[23] == NULL:
                                                    bt1_entry19.insert(0,0)
                                                else:
                                                    bt1_entry19.insert(0,get_bundle_data1[23])
                                                if get_bundle_data1[27] == '' or get_bundle_data1[27] is None or get_bundle_data1[27] == NULL:
                                                    bt1_entry20.insert(0,0)
                                                else:
                                                    bt1_entry20.insert(0,get_bundle_data1[27])
                                                
                                                bt1_entry21.delete(0,END)
                                                bt1_entry22.delete(0,END)
                                                bt1_entry22.insert(0,get_bundle_data1[8])
                                                bt1_entry23.delete(0,END)
                                                bt1_entry23.insert(0,get_bundle_data1[12])
                                                bt1_entry24.delete(0,END)
                                                bt1_entry24.insert(0,get_bundle_data1[16])
                                                bt1_entry25.delete(0,END)
                                                bt1_entry26.delete(0,END)
                                                bt1_entry27.delete(0,END)
                                                bt1_entry28.delete(0,END)
                                                if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                                    bt1_entry25.insert(0,0)
                                                else:
                                                    bt1_entry25.insert(0,get_bundle_data1[20])
                                                if get_bundle_data1[24] == '' or get_bundle_data1[24] is None or get_bundle_data1[24] == NULL:
                                                    bt1_entry26.insert(0,0)
                                                else:
                                                    bt1_entry26.insert(0,get_bundle_data1[24])
                                                if get_bundle_data1[28] == '' or get_bundle_data1[28] is None or get_bundle_data1[28] == NULL:
                                                    bt1_entry27.insert(0,0)
                                                else:
                                                    bt1_entry27.insert(0,get_bundle_data1[28])
                                                
                                                if comp_data[4] == cm_pofsupply.get():
                                                    if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                        bt1_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry7.insert(0,f'{get_bundle_data1[29]}% GST({get_bundle_data1[29]}%)')
                                                    if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                        bt1_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry14.insert(0,f'{get_bundle_data1[30]}% GST({get_bundle_data1[30]}%)')
                                                    if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                        bt1_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry21.insert(0,f'{get_bundle_data1[31]}% GST({get_bundle_data1[31]}%)')
                                                    if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                        bt1_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry28.insert(0,f'{get_bundle_data1[32]}% GST({get_bundle_data1[32]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                        bt1_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry7.insert(0,f'{get_bundle_data1[29]}% IGST({get_bundle_data1[29]}%)')
                                                    if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                        bt1_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry14.insert(0,f'{get_bundle_data1[30]}% IGST({get_bundle_data1[30]}%)')
                                                    if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                        bt1_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry21.insert(0,f'{get_bundle_data1[31]}% IGST({get_bundle_data1[31]}%)')
                                                    if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                        bt1_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry28.insert(0,f'{get_bundle_data1[32]}% IGST({get_bundle_data1[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data1[17]) * int(cmt_entry4.get())
                                                if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data1[18]) * int(cmt_entry4.get())
                                                if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data1[19]) * int(cmt_entry4.get())
                                                if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data1[20]) * int(cmt_entry4.get())
                                                
                                            except:
                                                pass
                                        
                                            bt1_entry4.delete(0,END)
                                            bt1_entry4.insert(0,qty1)
                                            bt1_entry11.delete(0,END)
                                            bt1_entry11.insert(0,qty2)
                                            bt1_entry18.delete(0,END)
                                            bt1_entry18.insert(0,qty3)
                                            bt1_entry25.delete(0,END)
                                            bt1_entry25.insert(0,qty4)

                                            tot1 = int(bt1_entry4.get()) * int(float(bt1_entry5.get()))
                                            tot2 = int(bt1_entry11.get()) * int(float(bt1_entry12.get()))
                                            tot3 = int(bt1_entry18.get()) * int(float(bt1_entry19.get()))
                                            tot4 = int(bt1_entry25.get()) * int(float(bt1_entry26.get()))

                                            bt1_entry6.delete(0,END)
                                            bt1_entry6.insert(0,tot1)
                                            bt1_entry13.delete(0,END)
                                            bt1_entry13.insert(0,tot2)
                                            bt1_entry20.delete(0,END)
                                            bt1_entry20.insert(0,tot3)
                                            bt1_entry27.delete(0,END)
                                            bt1_entry27.insert(0,tot4)
                                        elif b == 2:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry11.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt2_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry1,tags=("entry1"))

                                            bt2_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry2,tags=("entry2"))

                                            bt2_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry3,tags=("entry3"))

                                            bt2_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry4,tags=("entry4"))

                                            bt2_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry5,tags=("entry5"))

                                            bt2_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry6,tags=("entry6"))

                                            bt2_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry7,tags=("combo1"))

                                            bt2_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry8,tags=("entry7"))

                                            bt2_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry9,tags=("entry8"))

                                            bt2_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry10,tags=("entry9"))

                                            bt2_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry11,tags=("entry10"))

                                            bt2_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry12,tags=("entry11"))

                                            bt2_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry13,tags=("entry12"))

                                            bt2_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry14,tags=("combo2"))

                                            bt2_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry15,tags=("entry13"))

                                            bt2_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry16,tags=("entry14"))

                                            bt2_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry17,tags=("entry15"))

                                            bt2_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry18,tags=("entry16"))

                                            bt2_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry19,tags=("entry17"))

                                            bt2_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry20,tags=("entry18"))

                                            bt2_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry21,tags=("combo3"))

                                            bt2_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry22,tags=("entry19"))

                                            bt2_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry23,tags=("entry20"))

                                            bt2_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry24,tags=("entry21"))

                                            bt2_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry25,tags=("entry22"))

                                            bt2_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry26,tags=("entry23"))

                                            bt2_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry27,tags=("entry24"))

                                            bt2_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val2 = (cmt_entry11.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql2,get_bundle_val2)
                                                get_bundle_data2 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt2_entry1.delete(0,END)
                                                bt2_entry1.insert(0,get_bundle_data2[5])
                                                bt2_entry2.delete(0,END)
                                                bt2_entry2.insert(0,get_bundle_data2[9])
                                                bt2_entry3.delete(0,END)
                                                bt2_entry3.insert(0,get_bundle_data2[13])
                                                bt2_entry4.delete(0,END)
                                                bt2_entry5.delete(0,END)
                                                bt2_entry6.delete(0,END)
                                                if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                                    bt2_entry4.insert(0,0)
                                                else:
                                                    bt2_entry4.insert(0,get_bundle_data2[17])
                                                if get_bundle_data2[21] == '' or get_bundle_data2[21] is None or get_bundle_data2[21] == NULL:
                                                    bt2_entry5.insert(0,0)
                                                else:
                                                    bt2_entry5.insert(0,get_bundle_data2[21])
                                                if get_bundle_data2[25] == '' or get_bundle_data2[25] is None or get_bundle_data2[25] == NULL:
                                                    bt2_entry6.insert(0,0)
                                                else:
                                                    bt2_entry6.insert(0,get_bundle_data2[25])

                                                bt2_entry7.delete(0,END)
                                                bt2_entry8.delete(0,END)
                                                bt2_entry8.insert(0,get_bundle_data2[6])
                                                bt2_entry9.delete(0,END)
                                                bt2_entry9.insert(0,get_bundle_data2[10])
                                                bt2_entry10.delete(0,END)
                                                bt2_entry10.insert(0,get_bundle_data2[14])
                                                bt2_entry11.delete(0,END)
                                                bt2_entry12.delete(0,END)
                                                bt2_entry13.delete(0,END)
                                                if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[22] == NULL:
                                                    bt2_entry11.insert(0,0)
                                                else:
                                                    bt2_entry11.insert(0,get_bundle_data2[18])
                                                if get_bundle_data2[22] == '' or get_bundle_data2[22] is None or get_bundle_data2[22] == NULL:
                                                    bt2_entry12.insert(0,0)
                                                else:
                                                    bt2_entry12.insert(0,get_bundle_data2[22])
                                                if get_bundle_data2[26] == '' or get_bundle_data2[26] is None or get_bundle_data2[26] == NULL:
                                                    bt2_entry13.insert(0,0)
                                                else:
                                                    bt2_entry13.insert(0,get_bundle_data2[26])

                                                bt2_entry14.delete(0,END)
                                                bt2_entry15.delete(0,END)
                                                bt2_entry15.insert(0,get_bundle_data2[7])
                                                bt2_entry16.delete(0,END)
                                                bt2_entry16.insert(0,get_bundle_data2[11])
                                                bt2_entry17.delete(0,END)
                                                bt2_entry17.insert(0,get_bundle_data2[15])
                                                bt2_entry18.delete(0,END)
                                                bt2_entry19.delete(0,END)
                                                bt2_entry20.delete(0,END)
                                                if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                                    bt2_entry18.insert(0,0)
                                                else:
                                                    bt2_entry18.insert(0,get_bundle_data2[19])
                                                if get_bundle_data2[23] == '' or get_bundle_data2[23] is None or get_bundle_data2[23] == NULL:
                                                    bt2_entry19.insert(0,0)
                                                else:
                                                    bt2_entry19.insert(0,get_bundle_data2[23])
                                                if get_bundle_data2[27] == '' or get_bundle_data2[27] is None or get_bundle_data2[27] == NULL:
                                                    bt2_entry20.insert(0,0)
                                                else:
                                                    bt2_entry20.insert(0,get_bundle_data2[27])
                                                bt2_entry21.delete(0,END)
                                                bt2_entry22.delete(0,END)
                                                bt2_entry22.insert(0,get_bundle_data2[8])
                                                bt2_entry23.delete(0,END)
                                                bt2_entry23.insert(0,get_bundle_data2[12])
                                                bt2_entry24.delete(0,END)
                                                bt2_entry24.insert(0,get_bundle_data2[16])
                                                bt2_entry25.delete(0,END)
                                                bt2_entry26.delete(0,END)
                                                bt2_entry27.delete(0,END)
                                                bt2_entry28.delete(0,END)
                                                if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                                    bt2_entry25.insert(0,0)
                                                else:
                                                    bt2_entry25.insert(0,get_bundle_data2[20])
                                                if get_bundle_data2[24] == '' or get_bundle_data2[24] is None or get_bundle_data2[24] == NULL:
                                                    bt2_entry26.insert(0,0)
                                                else:
                                                    bt2_entry26.insert(0,get_bundle_data2[24])
                                                if get_bundle_data2[28] == '' or get_bundle_data2[28] is None or get_bundle_data2[28] == NULL:
                                                    bt2_entry27.insert(0,0)
                                                else:
                                                    bt2_entry27.insert(0,get_bundle_data2[28])

                                                if comp_data[4] == cm_pofsupply.get():
                                                    if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                        bt2_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry7.insert(0,f'{get_bundle_data2[29]}% GST({get_bundle_data2[29]}%)')
                                                    if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                        bt2_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry14.insert(0,f'{get_bundle_data2[30]}% GST({get_bundle_data2[30]}%)')
                                                    if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                        bt2_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry21.insert(0,f'{get_bundle_data2[31]}% GST({get_bundle_data2[31]}%)')
                                                    if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                        bt2_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry28.insert(0,f'{get_bundle_data2[32]}% GST({get_bundle_data2[32]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                        bt2_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry7.insert(0,f'{get_bundle_data2[29]}% IGST({get_bundle_data2[29]}%)')
                                                    if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                        bt2_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry14.insert(0,f'{get_bundle_data2[30]}% IGST({get_bundle_data2[30]}%)')
                                                    if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                        bt2_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry21.insert(0,f'{get_bundle_data2[31]}% IGST({get_bundle_data2[31]}%)')
                                                    if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                        bt2_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry28.insert(0,f'{get_bundle_data2[32]}% IGST({get_bundle_data2[32]}%)')
                                                else:
                                                    pass

                                            except:
                                                pass

                                            try:
                                                if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data2[17]) * int(cmt_entry14.get())
                                                if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data2[18]) * int(cmt_entry14.get())
                                                if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data2[19]) * int(cmt_entry14.get())
                                                if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data2[20]) * int(cmt_entry14.get())
                                                
                                            except:
                                                pass

                                            
                                            bt2_entry4.delete(0,END)
                                            bt2_entry4.insert(0,qty1)
                                            bt2_entry11.delete(0,END)
                                            bt2_entry11.insert(0,qty2)
                                            bt2_entry18.delete(0,END)
                                            bt2_entry18.insert(0,qty3)
                                            bt2_entry25.delete(0,END)
                                            bt2_entry25.insert(0,qty4)

                                            tot1 = int(bt2_entry4.get()) * int(float(bt2_entry5.get()))
                                            tot2 = int(bt2_entry11.get()) * int(float(bt2_entry12.get()))
                                            tot3 = int(bt2_entry18.get()) * int(float(bt2_entry19.get()))
                                            tot4 = int(bt2_entry25.get()) * int(float(bt2_entry26.get()))

                                            bt2_entry6.delete(0,END)
                                            bt2_entry6.insert(0,tot1)
                                            bt2_entry13.delete(0,END)
                                            bt2_entry13.insert(0,tot2)
                                            bt2_entry20.delete(0,END)
                                            bt2_entry20.insert(0,tot3)
                                            bt2_entry27.delete(0,END)
                                            bt2_entry27.insert(0,tot4)
                                        elif b == 3:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry18.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt3_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry1,tags=("entry1"))

                                            bt3_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry2,tags=("entry2"))

                                            bt3_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry3,tags=("entry3"))

                                            bt3_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry4,tags=("entry4"))

                                            bt3_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry5,tags=("entry5"))

                                            bt3_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry6,tags=("entry6"))

                                            bt3_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry7,tags=("combo1"))

                                            bt3_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry8,tags=("entry7"))

                                            bt3_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry9,tags=("entry8"))

                                            bt3_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry10,tags=("entry9"))

                                            bt3_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry11,tags=("entry10"))

                                            bt3_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry12,tags=("entry11"))

                                            bt3_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry13,tags=("entry12"))

                                            bt3_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry14,tags=("combo2"))

                                            bt3_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry15,tags=("entry13"))

                                            bt3_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry16,tags=("entry14"))

                                            bt3_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry17,tags=("entry15"))

                                            bt3_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry18,tags=("entry16"))

                                            bt3_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry19,tags=("entry17"))

                                            bt3_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry20,tags=("entry18"))

                                            bt3_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry21,tags=("combo3"))

                                            bt3_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry22,tags=("entry19"))

                                            bt3_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry23,tags=("entry20"))

                                            bt3_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry24,tags=("entry21"))

                                            bt3_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry25,tags=("entry22"))

                                            bt3_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry26,tags=("entry23"))

                                            bt3_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry27,tags=("entry24"))

                                            bt3_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val3 = (cmt_entry18.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql3,get_bundle_val3)
                                                get_bundle_data3 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt3_entry1.delete(0,END)
                                                bt3_entry1.insert(0,get_bundle_data3[5])
                                                bt3_entry2.delete(0,END)
                                                bt3_entry2.insert(0,get_bundle_data3[9])
                                                bt3_entry3.delete(0,END)
                                                bt3_entry3.insert(0,get_bundle_data3[13])
                                                bt3_entry4.delete(0,END)
                                                bt3_entry5.delete(0,END)
                                                bt3_entry6.delete(0,END)
                                                if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                                    bt3_entry4.insert(0,0)
                                                else:
                                                    bt3_entry4.insert(0,get_bundle_data3[17])
                                                if get_bundle_data3[21] == '' or get_bundle_data3[21] is None or get_bundle_data3[21] == NULL:
                                                    bt3_entry5.insert(0,0)
                                                else:
                                                    bt3_entry5.insert(0,get_bundle_data3[21])
                                                if get_bundle_data3[25] == '' or get_bundle_data3[25] is None or get_bundle_data3[25] == NULL:
                                                    bt3_entry6.insert(0,0)
                                                else:
                                                    bt3_entry6.insert(0,get_bundle_data3[25])
                                                bt3_entry7.delete(0,END)
                                                bt3_entry8.delete(0,END)
                                                bt3_entry8.insert(0,get_bundle_data3[6])
                                                bt3_entry9.delete(0,END)
                                                bt3_entry9.insert(0,get_bundle_data3[10])
                                                bt3_entry10.delete(0,END)
                                                bt3_entry10.insert(0,get_bundle_data3[14])
                                                bt3_entry11.delete(0,END)
                                                bt3_entry12.delete(0,END)
                                                bt3_entry13.delete(0,END)
                                                if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[22] == NULL:
                                                    bt3_entry11.insert(0,0)
                                                else:
                                                    bt3_entry11.insert(0,get_bundle_data3[18])
                                                if get_bundle_data3[22] == '' or get_bundle_data3[22] is None or get_bundle_data3[22] == NULL:
                                                    bt3_entry12.insert(0,0)
                                                else:
                                                    bt3_entry12.insert(0,get_bundle_data3[22])
                                                if get_bundle_data3[26] == '' or get_bundle_data3[26] is None or get_bundle_data3[26] == NULL:
                                                    bt3_entry13.insert(0,0)
                                                else:
                                                    bt3_entry13.insert(0,get_bundle_data3[26])

                                                bt3_entry14.delete(0,END)
                                                bt3_entry15.delete(0,END)
                                                bt3_entry15.insert(0,get_bundle_data3[7])
                                                bt3_entry16.delete(0,END)
                                                bt3_entry16.insert(0,get_bundle_data3[11])
                                                bt3_entry17.delete(0,END)
                                                bt3_entry17.insert(0,get_bundle_data3[15])
                                                bt3_entry18.delete(0,END)
                                                bt3_entry19.delete(0,END)
                                                bt3_entry20.delete(0,END)
                                                if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                                    bt3_entry18.insert(0,0)
                                                else:
                                                    bt3_entry18.insert(0,get_bundle_data3[19])
                                                if get_bundle_data3[23] == '' or get_bundle_data3[23] is None or get_bundle_data3[23] == NULL:
                                                    bt3_entry19.insert(0,0)
                                                else:
                                                    bt3_entry19.insert(0,get_bundle_data3[23])
                                                if get_bundle_data3[27] == '' or get_bundle_data3[27] is None or get_bundle_data3[27] == NULL:
                                                    bt3_entry20.insert(0,0)
                                                else:
                                                    bt3_entry20.insert(0,get_bundle_data3[27])

                                                bt3_entry21.delete(0,END)
                                                bt3_entry22.delete(0,END)
                                                bt3_entry22.insert(0,get_bundle_data3[8])
                                                bt3_entry23.delete(0,END)
                                                bt3_entry23.insert(0,get_bundle_data3[12])
                                                bt3_entry24.delete(0,END)
                                                bt3_entry24.insert(0,get_bundle_data3[16])
                                                bt3_entry25.delete(0,END)
                                                bt3_entry26.delete(0,END)
                                                bt3_entry27.delete(0,END)
                                                bt3_entry28.delete(0,END)
                                                if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                                    bt3_entry25.insert(0,0)
                                                else:
                                                    bt3_entry25.insert(0,get_bundle_data3[20])
                                                if get_bundle_data3[24] == '' or get_bundle_data3[24] is None or get_bundle_data3[24] == NULL:
                                                    bt3_entry26.insert(0,0)
                                                else:
                                                    bt3_entry26.insert(0,get_bundle_data3[24])
                                                if get_bundle_data3[28] == '' or get_bundle_data3[28] is None or get_bundle_data3[28] == NULL:
                                                    bt3_entry27.insert(0,0)
                                                else:
                                                    bt3_entry27.insert(0,get_bundle_data3[28])


                                                if comp_data[4] == cm_pofsupply.get():
                                                    if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                        bt3_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry7.insert(0,f'{get_bundle_data3[29]}% GST({get_bundle_data3[29]}%)')
                                                    if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                        bt3_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry14.insert(0,f'{get_bundle_data3[30]}% GST({get_bundle_data3[30]}%)')
                                                    if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                        bt3_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry21.insert(0,f'{get_bundle_data3[31]}% GST({get_bundle_data3[31]}%)')
                                                    if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                        bt3_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry28.insert(0,f'{get_bundle_data3[32]}% GST({get_bundle_data3[32]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                        bt3_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry7.insert(0,f'{get_bundle_data3[29]}% IGST({get_bundle_data3[29]}%)')
                                                    if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                        bt3_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry14.insert(0,f'{get_bundle_data3[30]}% IGST({get_bundle_data3[30]}%)')
                                                    if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                        bt3_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry21.insert(0,f'{get_bundle_data3[31]}% IGST({get_bundle_data3[31]}%)')
                                                    if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                        bt3_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry28.insert(0,f'{get_bundle_data3[32]}% IGST({get_bundle_data3[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data3[17]) * int(cmt_entry21.get())
                                                if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data3[18]) * int(cmt_entry21.get())
                                                if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data3[19]) * int(cmt_entry21.get())
                                                if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data3[20]) * int(cmt_entry21.get())
                                                
                                            except:
                                                pass
                                            
                                            bt3_entry4.delete(0,END)
                                            bt3_entry4.insert(0,qty1)
                                            bt3_entry11.delete(0,END)
                                            bt3_entry11.insert(0,qty2)
                                            bt3_entry18.delete(0,END)
                                            bt3_entry18.insert(0,qty3)
                                            bt3_entry25.delete(0,END)
                                            bt3_entry25.insert(0,qty4)

                                            tot1 = int(bt3_entry4.get()) * int(float(bt3_entry5.get()))
                                            tot2 = int(bt3_entry11.get()) * int(float(bt3_entry12.get()))
                                            tot3 = int(bt3_entry18.get()) * int(float(bt3_entry19.get()))
                                            tot4 = int(bt3_entry25.get()) * int(float(bt3_entry26.get()))

                                            bt3_entry6.delete(0,END)
                                            bt3_entry6.insert(0,tot1)
                                            bt3_entry13.delete(0,END)
                                            bt3_entry13.insert(0,tot2)
                                            bt3_entry20.delete(0,END)
                                            bt3_entry20.insert(0,tot3)
                                            bt3_entry27.delete(0,END)
                                            bt3_entry27.insert(0,tot4)
                                        else:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cmt_entry25.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt4_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry1,tags=("entry1"))

                                            bt4_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry2,tags=("entry2"))

                                            bt4_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry3,tags=("entry3"))

                                            bt4_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry4,tags=("entry4"))

                                            bt4_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry5,tags=("entry5"))

                                            bt4_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry6,tags=("entry6"))

                                            bt4_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry7,tags=("combo1"))

                                            bt4_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry8,tags=("entry7"))

                                            bt4_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry9,tags=("entry8"))

                                            bt4_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry10,tags=("entry9"))

                                            bt4_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry11,tags=("entry10"))

                                            bt4_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry12,tags=("entry11"))

                                            bt4_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry13,tags=("entry12"))

                                            bt4_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry14,tags=("combo2"))

                                            bt4_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry15,tags=("entry13"))

                                            bt4_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry16,tags=("entry14"))

                                            bt4_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry17,tags=("entry15"))

                                            bt4_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry18,tags=("entry16"))

                                            bt4_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry19,tags=("entry17"))

                                            bt4_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry20,tags=("entry18"))

                                            bt4_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry21,tags=("combo3"))

                                            bt4_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry22,tags=("entry19"))

                                            bt4_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry23,tags=("entry20"))

                                            bt4_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry24,tags=("entry21"))

                                            bt4_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry25,tags=("entry22"))

                                            bt4_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry26,tags=("entry23"))

                                            bt4_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry27,tags=("entry24"))

                                            bt4_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val4 = (cmt_entry25.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql4,get_bundle_val4)
                                                get_bundle_data4 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt4_entry1.delete(0,END)
                                                bt4_entry1.insert(0,get_bundle_data4[5])
                                                bt4_entry2.delete(0,END)
                                                bt4_entry2.insert(0,get_bundle_data4[9])
                                                bt4_entry3.delete(0,END)
                                                bt4_entry3.insert(0,get_bundle_data4[13])
                                                bt4_entry4.delete(0,END)
                                                bt4_entry5.delete(0,END)
                                                bt4_entry6.delete(0,END)
                                                if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                                    bt4_entry4.insert(0,0)
                                                else:
                                                    bt4_entry4.insert(0,get_bundle_data4[17])
                                                if get_bundle_data4[21] == '' or get_bundle_data4[21] is None or get_bundle_data4[21] == NULL:
                                                    bt4_entry5.insert(0,0)
                                                else:
                                                    bt4_entry5.insert(0,get_bundle_data4[21])
                                                if get_bundle_data4[25] == '' or get_bundle_data4[25] is None or get_bundle_data4[25] == NULL:
                                                    bt4_entry6.insert(0,0)
                                                else:
                                                    bt4_entry6.insert(0,get_bundle_data4[25])
                                                bt4_entry7.delete(0,END)
                                                bt4_entry8.delete(0,END)
                                                bt4_entry8.insert(0,get_bundle_data4[6])
                                                bt4_entry9.delete(0,END)
                                                bt4_entry9.insert(0,get_bundle_data4[10])
                                                bt4_entry10.delete(0,END)
                                                bt4_entry10.insert(0,get_bundle_data4[14])
                                                bt4_entry11.delete(0,END)
                                                bt4_entry12.delete(0,END)
                                                bt4_entry13.delete(0,END)
                                                if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[22] == NULL:
                                                    bt4_entry11.insert(0,0)
                                                else:
                                                    bt4_entry11.insert(0,get_bundle_data4[18])
                                                if get_bundle_data4[22] == '' or get_bundle_data4[22] is None or get_bundle_data4[22] == NULL:
                                                    bt4_entry12.insert(0,0)
                                                else:
                                                    bt4_entry12.insert(0,get_bundle_data4[22])
                                                if get_bundle_data4[26] == '' or get_bundle_data4[26] is None or get_bundle_data4[26] == NULL:
                                                    bt4_entry13.insert(0,0)
                                                else:
                                                    bt4_entry13.insert(0,get_bundle_data4[26])
                                                bt4_entry14.delete(0,END)
                                                bt4_entry15.delete(0,END)
                                                bt4_entry15.insert(0,get_bundle_data4[7])
                                                bt4_entry16.delete(0,END)
                                                bt4_entry16.insert(0,get_bundle_data4[11])
                                                bt4_entry17.delete(0,END)
                                                bt4_entry17.insert(0,get_bundle_data4[15])
                                                bt4_entry18.delete(0,END)
                                                bt4_entry19.delete(0,END)
                                                bt4_entry20.delete(0,END)
                                                if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                                    bt4_entry18.insert(0,0)
                                                else:
                                                    bt4_entry18.insert(0,get_bundle_data4[19])
                                                if get_bundle_data4[23] == '' or get_bundle_data4[23] is None or get_bundle_data4[23] == NULL:
                                                    bt4_entry19.insert(0,0)
                                                else:
                                                    bt4_entry19.insert(0,get_bundle_data4[23])
                                                if get_bundle_data4[27] == '' or get_bundle_data4[27] is None or get_bundle_data4[27] == NULL:
                                                    bt4_entry20.insert(0,0)
                                                else:
                                                    bt4_entry20.insert(0,get_bundle_data4[27])
                                                bt4_entry21.delete(0,END)
                                                bt4_entry22.delete(0,END)
                                                bt4_entry22.insert(0,get_bundle_data4[8])
                                                bt4_entry23.delete(0,END)
                                                bt4_entry23.insert(0,get_bundle_data4[12])
                                                bt4_entry24.delete(0,END)
                                                bt4_entry24.insert(0,get_bundle_data4[16])
                                                bt4_entry25.delete(0,END)
                                                bt4_entry26.delete(0,END)
                                                bt4_entry27.delete(0,END)
                                                bt4_entry28.delete(0,END)
                                                if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                                    bt4_entry25.insert(0,0)
                                                else:
                                                    bt4_entry25.insert(0,get_bundle_data4[20])
                                                if get_bundle_data4[24] == '' or get_bundle_data4[24] is None or get_bundle_data4[24] == NULL:
                                                    bt4_entry26.insert(0,0)
                                                else:
                                                    bt4_entry26.insert(0,get_bundle_data4[24])
                                                if get_bundle_data4[28] == '' or get_bundle_data4[28] is None or get_bundle_data4[28] == NULL:
                                                    bt4_entry27.insert(0,0)
                                                else:
                                                    bt4_entry27.insert(0,get_bundle_data4[28])

                                                if comp_data[4] == cm_pofsupply.get():
                                                    if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                        bt4_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry7.insert(0,f'{get_bundle_data4[29]}% GST({get_bundle_data4[29]}%)')
                                                    if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                        bt4_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry14.insert(0,f'{get_bundle_data4[30]}% GST({get_bundle_data4[30]}%)')
                                                    if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                        bt4_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry21.insert(0,f'{get_bundle_data4[31]}% GST({get_bundle_data4[31]}%)')
                                                    if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                        bt4_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry28.insert(0,f'{get_bundle_data4[32]}% GST({get_bundle_data4[32]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                        bt4_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry7.insert(0,f'{get_bundle_data4[29]}% IGST({get_bundle_data4[29]}%)')
                                                    if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                        bt4_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry14.insert(0,f'{get_bundle_data4[30]}% IGST({get_bundle_data4[30]}%)')
                                                    if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                        bt4_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry21.insert(0,f'{get_bundle_data4[31]}% IGST({get_bundle_data4[31]}%)')
                                                    if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                        bt4_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry28.insert(0,f'{get_bundle_data4[32]}% IGST({get_bundle_data4[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data4[17]) * int(cmt_entry28.get())
                                                if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data4[18]) * int(cmt_entry28.get())
                                                if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data4[19]) * int(cmt_entry28.get())
                                                if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data4[20]) * int(cmt_entry28.get())
                                                
                                            except:
                                                pass

                                            bt4_entry4.delete(0,END)
                                            bt4_entry4.insert(0,qty1)
                                            bt4_entry11.delete(0,END)
                                            bt4_entry11.insert(0,qty2)
                                            bt4_entry18.delete(0,END)
                                            bt4_entry18.insert(0,qty3)
                                            bt4_entry25.delete(0,END)
                                            bt4_entry25.insert(0,qty4)

                                            tot1 = int(bt4_entry4.get()) * int(float(bt4_entry5.get()))
                                            tot2 = int(bt4_entry11.get()) * int(float(bt4_entry12.get()))
                                            tot3 = int(bt4_entry18.get()) * int(float(bt4_entry19.get()))
                                            tot4 = int(bt4_entry25.get()) * int(float(bt4_entry26.get()))

                                            bt4_entry6.delete(0,END)
                                            bt4_entry6.insert(0,tot1)
                                            bt4_entry13.delete(0,END)
                                            bt4_entry13.insert(0,tot2)
                                            bt4_entry20.delete(0,END)
                                            bt4_entry20.insert(0,tot3)
                                            bt4_entry27.delete(0,END)
                                            bt4_entry27.insert(0,tot4)

                                    #------------------------------------------
                                    
                                    def cm_fetch_proDetails1(event):
                                        global get_pro_data3
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (cmt_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (cmt_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (cmt_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (cmt_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry21",state='normal')
                                                sr_Canvas_5.itemconfig("entry22",state='normal')
                                                sr_Canvas_5.itemconfig("combo6",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label67",state='normal')
                                                cm_label31.config(text="Available Qty : " + get_pro_data[7])
                                                cmt_entry2.delete(0,END)
                                                cmt_entry2.insert(0,get_pro_data[4])
                                                cmt_entry3.delete(0,END)
                                                cmt_entry3.insert(0,get_pro_data[11])
                                                cmt_entry5.delete(0,END)
                                                cmt_entry5.insert(0,get_pro_data[12])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry21",state='normal')
                                                sr_Canvas_5.itemconfig("entry22",state='normal')
                                                sr_Canvas_5.itemconfig("combo6",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label67",state='normal')
                                                cm_label31.config(text="Available Qty : " + get_pro_data1[17])
                                                cmt_entry2.delete(0,END)
                                                cmt_entry2.insert(0,get_pro_data1[4])
                                                cmt_entry3.delete(0,END)
                                                cmt_entry3.insert(0,get_pro_data1[7])
                                                cmt_entry5.delete(0,END)
                                                cmt_entry5.insert(0,get_pro_data1[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data2 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry21",state='normal')
                                                sr_Canvas_5.itemconfig("entry22",state='normal')
                                                sr_Canvas_5.itemconfig("combo6",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                                sr_Canvas_5.itemconfig("label67",state='hidden')
                                            except:
                                                pass

                                            try:
                                                cmt_entry2.delete(0,END)
                                                cmt_entry2.insert(0,get_pro_data2[4])
                                                cmt_entry3.delete(0,END)
                                                cmt_entry3.insert(0,get_pro_data2[7])
                                                cmt_entry5.delete(0,END)
                                                cmt_entry5.insert(0,get_pro_data2[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry7.delete(0,END)
                                                    cmt_entry7.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        else:
                                            try:
                                                cmt_entry2.delete(0,END)
                                                cmt_entry2.insert(0,get_pro_data3[3])
                                                cmt_entry3.delete(0,END)
                                                cmt_entry3.insert(0,get_pro_data3[4])
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry21",state='hidden')
                                                sr_Canvas_5.itemconfig("entry22",state='hidden')
                                                sr_Canvas_5.itemconfig("combo6",state='hidden')
                                                sr_Canvas_5.itemconfig("button12",state='normal')
                                                sr_Canvas_5.itemconfig("label67",state='hidden')
                                            except:
                                                pass

                                            view_bundleitems(b=1)
                                            
                                        
                                    cmt_entry1 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry1["values"] = product_list
                                    cmt_entry1.current(0)
                                    cmt_entry1.bind("<<ComboboxSelected>>",cm_fetch_proDetails1)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry1,tags=("combo5"))

                                    cmt_entry2 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry2,tags=("entry18"))

                                    cmt_entry3 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry3,tags=("entry19"))

                                    def cmt_calculateTotal1(event,s):
                                        # try:
                                            if s == 1:
                                                name = cmt_entry1.get()
                                                qty = cmt_entry4.get()
                                            elif s == 2:
                                                name = cmt_entry11.get()
                                                qty = cmt_entry14.get()
                                            elif s == 3:
                                                name = cmt_entry18.get()
                                                qty = cmt_entry21.get()
                                            elif s == 4:
                                                name = cmt_entry25.get()
                                                qty = cmt_entry28.get()


                                            if qty != 0:
                                                global tax_tot1,tax_tot2,tax_tot3,tax_tot4,b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4,bta1,bta2,bta3,bta4,bta5,bta6,bta7,bta8,bta9,bta10,bta11,bta12,bta13,bta14,bta15,bta16
                                                tax_tot1 = 0.0
                                                tax_tot2 = 0.0
                                                tax_tot3 = 0.0
                                                tax_tot4 = 0.0

                                                b1tax_tot1 = 0.0
                                                b1tax_tot2 = 0.0
                                                b1tax_tot3 = 0.0
                                                b1tax_tot4 = 0.0

                                                b2tax_tot1 = 0.0
                                                b2tax_tot2 = 0.0
                                                b2tax_tot3 = 0.0
                                                b2tax_tot4 = 0.0

                                                b3tax_tot1 = 0.0
                                                b3tax_tot2 = 0.0
                                                b3tax_tot3 = 0.0
                                                b3tax_tot4 = 0.0

                                                b4tax_tot1 = 0.0
                                                b4tax_tot2 = 0.0
                                                b4tax_tot3 = 0.0
                                                b4tax_tot4 = 0.0
                                                try:
                                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                                    get_pro_data = fbcursor.fetchone()

                                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val1 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                                    get_pro_data1 = fbcursor.fetchone()

                                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                                    get_pro_val2 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                                    get_pro_data2 = fbcursor.fetchone()

                                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_pro_val3 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                                    get_pro_data3 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                if s == 1:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cmt_entry6.delete(0,END)
                                                        cmt_entry6.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cmt_entry6.delete(0,END)
                                                        cmt_entry6.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        view_bundleitems(b=1)
                                                elif s == 2:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cmt_entry16.delete(0,END)
                                                        cmt_entry16.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cmt_entry16.delete(0,END)
                                                        cmt_entry16.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        view_bundleitems(b=2)
                                                elif s == 3:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cmt_entry23.delete(0,END)
                                                        cmt_entry23.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cmt_entry23.delete(0,END)
                                                        cmt_entry23.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        view_bundleitems(b=3)
                                                elif s == 4:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cmt_entry30.delete(0,END)
                                                        cmt_entry30.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cmt_entry30.delete(0,END)
                                                        cmt_entry30.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        view_bundleitems(b=4)

                                                cmt_entry8.delete(0,END)
                                                cmt_entry9.delete(0,END)
                                                cmt_entry10.delete(0,END)

                                                def split_gst(string):
                                                    pattern1 = r'\(+'
                                                    pattern2 = r'\%+'
                                                    split1 = re.split(pattern1,string)
                                                    split2 = re.split(pattern2,split1[1])
                                                    return split2

                                                #product gst -----------------------------
                                                try:
                                                    gst_value1 = split_gst(cmt_entry7.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value2 = split_gst(cmt_entry17.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value3 = split_gst(cmt_entry24.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value4 = split_gst(cmt_entry31.get())
                                                except:
                                                    pass

                                                #bundle gst ------------------------------ 
                                                try:
                                                    bgst_value1 = split_gst(bt1_entry7.get())
                                                    bgst_value2 = split_gst(bt1_entry14.get())
                                                    bgst_value3 = split_gst(bt1_entry21.get())
                                                    bgst_value4 = split_gst(bt1_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value5 = split_gst(bt2_entry7.get())
                                                    bgst_value6 = split_gst(bt2_entry14.get())
                                                    bgst_value7 = split_gst(bt2_entry21.get())
                                                    bgst_value8 = split_gst(bt2_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value9 = split_gst(bt3_entry7.get())
                                                    bgst_value10 = split_gst(bt3_entry14.get())
                                                    bgst_value11 = split_gst(bt3_entry21.get())
                                                    bgst_value12 = split_gst(bt3_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value13 = split_gst(bt4_entry7.get())
                                                    bgst_value14 = split_gst(bt4_entry14.get())
                                                    bgst_value15 = split_gst(bt4_entry21.get())
                                                    bgst_value16 = split_gst(bt4_entry28.get())
                                                except:
                                                    pass

                                                get_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                                get_bun_val = (comp_data[0],)
                                                fbcursor.execute(get_bun_sql,get_bun_val)
                                                get_bun_data = fbcursor.fetchall()
                                                
                                                b_list = []
                                                for g in get_bun_data:
                                                    b_list.append(g[0])

                                    #=====================================================================================
                                                #Bundle1--------------------------------------------
                                                try:
                                                    if bt1_entry7.get() == "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        pass
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                            bta1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                            bta1 = (bto1 * float(float((bgst_value1[0]))))/100
                                                        tax_total1 = b1tax_tot1
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                            bta1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                            bta1 = (bto1 * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                            bta2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                            bta2 = (bto2 * float(float((bgst_value2[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                            bta1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                            bta1 = (bto1 * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                            bta2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                            bta2 = (bto2 * float(float((bgst_value2[0]))))/100

                                                        if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                            b1tax_tot3 = 0
                                                            bta3 = 0
                                                        else:
                                                            b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100
                                                            bta3 = (bto3 * float(float((bgst_value3[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() != "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                            bta1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                            bta1 = (bto1 * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                            bta2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                            bta2 = (bto2 * float(float((bgst_value2[0]))))/100

                                                        if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                            b1tax_tot3 = 0
                                                            bta3 = 0
                                                        else:
                                                            b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100
                                                            bta3 = (bto3 * float(float((bgst_value3[0]))))/100

                                                        if bgst_value4[0] == "0" or bt1_entry28.get() == "Exempt GST(0%)" or bt1_entry28.get() == "Out of Scope(0%)":
                                                            b1tax_tot4 = 0
                                                            bta4 = 0
                                                        else:
                                                            b1tax_tot4 = (float(bt1_entry27.get()) * float(float((bgst_value4[0]))))/100
                                                            bta4 = (bto4 * float(float((bgst_value4[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3 + b1tax_tot4
                                                except:
                                                    pass

                                                #Bundle2--------------------------------------------
                                                try:
                                                    if bt2_entry7.get() == "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        pass
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                            bta5 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                            bta5 = (bto5 * float(float((bgst_value5[0]))))/100
                                                        tax_total2 = b2tax_tot1
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                            bta5 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                            bta5 = (bto5 * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                            bta6 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                            bta6 = (bto6 * float(float((bgst_value6[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                            bta5 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                            bta5 = (bto5 * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                            bta6 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                            bta6 = (bto6 * float(float((bgst_value6[0]))))/100

                                                        if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                            b2tax_tot3 = 0
                                                            bta7 = 0
                                                        else:
                                                            b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100
                                                            bta7 = (bto7 * float(float((bgst_value7[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() != "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                            bta5 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                            bta5 = (bto5 * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                            bta6 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                            bta6 = (bto6 * float(float((bgst_value6[0]))))/100

                                                        if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                            b2tax_tot3 = 0
                                                            bta7 = 0
                                                        else:
                                                            b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100
                                                            bta7 = (bto7 * float(float((bgst_value7[0]))))/100

                                                        if bgst_value8[0] == "0" or bt2_entry28.get() == "Exempt GST(0%)" or bt2_entry28.get() == "Out of Scope(0%)":
                                                            b2tax_tot4 = 0
                                                            bta8 = 0
                                                        else:
                                                            b2tax_tot4 = (float(bt2_entry27.get()) * float(float((bgst_value8[0]))))/100
                                                            bta8 = (bto8 * float(float((bgst_value8[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3 + b2tax_tot4
                                                except:
                                                    pass

                                                #Bundle3--------------------------------------------
                                                try:
                                                    if bt3_entry7.get() == "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        pass
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                            bta9 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                            bta9 = (bto9 * float(float((bgst_value9[0]))))/100
                                                        tax_total3 = b3tax_tot1
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                            bta9 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                            bta9 = (bto9 * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                            bta10 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                            bta10 = (bto10 * float(float((bgst_value10[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                            bta9 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                            bta9 = (bto9 * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                            bta10 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                            bta10 = (bto10 * float(float((bgst_value10[0]))))/100

                                                        if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                            b3tax_tot3 = 0
                                                            bta11 = 0
                                                        else:
                                                            b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100
                                                            bta11 = (bto11 * float(float((bgst_value11[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() != "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                            bta9 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                            bta9 = (bto9 * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                            bta10 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                            bta10 = (bto10 * float(float((bgst_value10[0]))))/100

                                                        if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                            b3tax_tot3 = 0
                                                            bta11 = 0
                                                        else:
                                                            b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100
                                                            bta11 = (bto11 * float(float((bgst_value11[0]))))/100

                                                        if bgst_value12[0] == "0" or bt3_entry28.get() == "Exempt GST(0%)" or bt3_entry28.get() == "Out of Scope(0%)":
                                                            b3tax_tot4 = 0
                                                            bta12 = 0
                                                        else:
                                                            b3tax_tot4 = (float(bt3_entry27.get()) * float(float((bgst_value12[0]))))/100
                                                            bta12 = (bto12 * float(float((bgst_value12[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3 + b3tax_tot4
                                                except:
                                                    pass

                                                #Bundle4--------------------------------------------
                                                try:
                                                    if bt4_entry7.get() == "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        pass
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                            bta13 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                            bta13 = (bto13 * float(float((bgst_value13[0]))))/100
                                                        tax_total4 = b4tax_tot1
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                            bta13 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                            bta13 = (bto13 * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                            bta14 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                            bta14 = (bto14 * float(float((bgst_value14[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                            bta13 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                            bta13 = (bto13 * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                            bta14 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                            bta14 = (bto14 * float(float((bgst_value14[0]))))/100

                                                        if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                            b4tax_tot3 = 0
                                                            bta15 = 0
                                                        else:
                                                            b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100
                                                            bta15 = (bto15 * float(float((bgst_value15[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() != "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                            bta13 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                            bta13 = (bto13 * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                            bta14 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                            bta14 = (bto14 * float(float((bgst_value14[0]))))/100

                                                        if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                            b4tax_tot3 = 0
                                                            bta15 = 0
                                                        else:
                                                            b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100
                                                            bta15 = (bto15 * float(float((bgst_value15[0]))))/100

                                                        if bgst_value16[0] == "0" or bt4_entry28.get() == "Exempt GST(0%)" or bt4_entry28.get() == "Out of Scope(0%)":
                                                            b4tax_tot4 = 0
                                                            bta16 = 0
                                                        else:
                                                            b4tax_tot4 = (float(bt4_entry27.get()) * float(float((bgst_value16[0]))))/100
                                                            bta16 = (bto16 * float(float((bgst_value16[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3 + b4tax_tot4
                                                except:
                                                    pass

                                        #=============================================================================================

                                                #All products ----------------------------------------------------------------------------------------
                                                if cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + float(cmt_entry23.get()) + float(cmt_entry30.get()))
                                                    if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    elif cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                                    cmt_entry9.insert(0,ptax_total)

                                                #All bundles -----------------------------------------------------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + b2_tot + b3_tot + b4_tot)

                                                    cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total3 + tax_total4)

                                                #First row bundle-----------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                                    #Rest products--------------------------------------
                                                    if cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":                                               
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":                                              
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    cmt_entry9.insert(0,tax_total1 + ptax_total)

                                                #First and Second row Bundle -------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + b2_tot + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                                    #Rest products--------------------------------------
                                                    if cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4

                                                    cmt_entry9.insert(0,tax_total1 + tax_total2 + ptax_total)

                                                #First,Second and Third row Bundle -------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + b2_tot + b3_tot + float(cmt_entry30.get()))

                                                    #Rest products--------------------------------------
                                                    if cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry31.get() != "Choose":
                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total3 + ptax_total)
                                                
                                                #Second row Bundle------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() not in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + float(cmt_entry23.get()) + float(cmt_entry30.get()))

                                                    if cmt_entry7.get() == "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry24.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    cmt_entry9.insert(0,tax_total2 + ptax_total)

                                                #Second,Third row Bundle------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + b3_tot + float(cmt_entry30.get()))

                                                    if cmt_entry7.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    cmt_entry9.insert(0,tax_total2 + tax_total3 + ptax_total)

                                                #Second,Fourth row Bundle------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + float(cmt_entry23.get()) + b4_tot)

                                                    if cmt_entry7.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    cmt_entry9.insert(0,tax_total2 + tax_total4 + ptax_total)

                                                #Second,Third and Fourth row Bundle------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + b2_tot + b3_tot + b4_tot)

                                                    if cmt_entry7.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    cmt_entry9.insert(0,tax_total2 + tax_total3 + tax_total4 + ptax_total)
                                                
                                                #Third row Bundle---------------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + b3_tot + float(cmt_entry30.get()))

                                                    if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    
                                                    cmt_entry9.insert(0,tax_total3 + ptax_total)

                                                #Third,first row Bundle---------------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + b3_tot + float(cmt_entry30.get()))

                                                    if cmt_entry17.get() == "Choose" and cmt_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry31.get() == "Choose":                                            
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry31.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cmt_entry31.get() == "Exempt GST(0%)" or cmt_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cmt_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    
                                                    cmt_entry9.insert(0,tax_total1 + tax_total3 + ptax_total)

                                                #Third,fourth row Bundle---------------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + b3_tot + b4_tot)

                                                    if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    
                                                    cmt_entry9.insert(0,tax_total3 + tax_total4 + ptax_total)

                                                #Third,first and fourth row Bundle---------------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() in b_list and cmt_entry25.get() in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + b3_tot + b4_tot)

                                                    if cmt_entry17.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry17.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    
                                                    cmt_entry9.insert(0,tax_total1 + tax_total3 + tax_total4 + ptax_total)

                                                #Fourth row Bundle -----------------------------------------------------
                                                elif cmt_entry1.get() not in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cmt_entry8.insert(0,float(cmt_entry6.get()) + float(cmt_entry16.get()) + float(cmt_entry23.get()) + b4_tot)

                                                    if cmt_entry7.get() == "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cmt_entry7.get() != "Choose" and cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or cmt_entry7.get() == "Exempt GST(0%)" or cmt_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cmt_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    cmt_entry9.insert(0,tax_total4 + ptax_total)

                                                #Fourth,First row Bundle -----------------------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() not in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + float(cmt_entry16.get()) + float(cmt_entry23.get()) + b4_tot)

                                                    if cmt_entry17.get() == "Choose" and cmt_entry24.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry24.get() == "Choose":                                            
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cmt_entry17.get() != "Choose" and cmt_entry24.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cmt_entry17.get() == "Exempt GST(0%)" or cmt_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cmt_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    cmt_entry9.insert(0,tax_total1 + tax_total4 + ptax_total)

                                                #Fourth,First and Second row Bundle -----------------------------------------------------
                                                elif cmt_entry1.get() in b_list and cmt_entry11.get() in b_list and cmt_entry18.get() not in b_list and cmt_entry25.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cmt_entry8.insert(0,b1_tot + b2_tot + float(cmt_entry23.get()) + b4_tot)

                                                    if cmt_entry24.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cmt_entry24.get() != "Choose":
                                                        if gst_value3[0] == "0" or cmt_entry24.get() == "Exempt GST(0%)" or cmt_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cmt_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    cmt_entry9.insert(0,tax_total1 + tax_total2 + tax_total4 + ptax_total)
                                                cmt_entry10.insert(0,float(cmt_entry8.get()) + float(float(cmt_entry9.get())))
                                            else:
                                                pass
                                        # except:
                                        #     pass

                                    cmt_entry4 = Spinbox(sr_Canvas_5,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    cmt_entry4.bind("<Key>",lambda event,sp = 1:cmt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry4,tags=("entry20"))

                                    cmt_entry5 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry5,tags=("entry21"))

                                    cmt_entry6 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    cmt_entry6.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry6,tags=("entry22"))

                                    cmt_entry7 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                                    cmt_entry7["values"] = cplace_gstlist
                                    cmt_entry7.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry7,tags=("combo6"))                      

                                    cmt_button1 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b1 = 1:view_bundleitems(b1))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button1,tags=("button12"))

                                    cm_label28 = Label(sr_Canvas_5,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label28,tags=('label64'))

                                    def cm_fetch_proDetails2(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (cmt_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (cmt_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (cmt_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (cmt_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #----------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry42",state='normal')
                                                sr_Canvas_5.itemconfig("entry43",state='normal')
                                                sr_Canvas_5.itemconfig("combo15",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label68",state='normal')
                                                cm_label32.config(text="Available Qty : " + get_pro_data[7])
                                                cmt_entry12.delete(0,END)
                                                cmt_entry12.insert(0,get_pro_data[4])
                                                cmt_entry13.delete(0,END)
                                                cmt_entry13.insert(0,get_pro_data[11])
                                                cmt_entry15.delete(0,END)
                                                cmt_entry15.insert(0,get_pro_data[12])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry42",state='normal')
                                                sr_Canvas_5.itemconfig("entry43",state='normal')
                                                sr_Canvas_5.itemconfig("combo15",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label68",state='normal')
                                                cm_label32.config(text="Available Qty : " + get_pro_data1[17])
                                                cmt_entry12.delete(0,END)
                                                cmt_entry12.insert(0,get_pro_data1[4])
                                                cmt_entry13.delete(0,END)
                                                cmt_entry13.insert(0,get_pro_data1[7])
                                                cmt_entry15.delete(0,END)
                                                cmt_entry15.insert(0,get_pro_data1[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data2 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry42",state='normal')
                                                sr_Canvas_5.itemconfig("entry43",state='normal')
                                                sr_Canvas_5.itemconfig("combo15",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                                sr_Canvas_5.itemconfig("label68",state='hidden')
                                            except:
                                                pass
                                            try:
                                                cmt_entry12.delete(0,END)
                                                cmt_entry12.insert(0,get_pro_data2[4])
                                                cmt_entry13.delete(0,END)
                                                cmt_entry13.insert(0,get_pro_data2[7])
                                                cmt_entry15.delete(0,END)
                                                cmt_entry15.insert(0,get_pro_data2[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry17.delete(0,END)
                                                    cmt_entry17.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        else:
                                            try:
                                                cmt_entry12.delete(0,END)
                                                cmt_entry12.insert(0,get_pro_data3[3])
                                                cmt_entry13.delete(0,END)
                                                cmt_entry13.insert(0,get_pro_data3[4])
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry42",state='hidden')
                                                sr_Canvas_5.itemconfig("entry43",state='hidden')
                                                sr_Canvas_5.itemconfig("combo15",state='hidden')
                                                sr_Canvas_5.itemconfig("button13",state='normal')
                                                sr_Canvas_5.itemconfig("label68",state='hidden')
                                            except:
                                                pass

                                            view_bundleitems(b=2)

                                    cmt_entry11 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry11["values"] = product_list
                                    cmt_entry11.current(0)
                                    cmt_entry11.bind("<<ComboboxSelected>>",cm_fetch_proDetails2)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry11,tags=("combo14"))

                                    cmt_entry12 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry12,tags=("entry39"))

                                    cmt_entry13 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry13,tags=("entry40")) 

                                    cmt_entry14 = Spinbox(sr_Canvas_5,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    cmt_entry14.bind("<Key>",lambda event,sp = 2:cmt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry14,tags=("entry41"))

                                    cmt_entry15 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry15,tags=("entry42"))

                                    cmt_entry16 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    cmt_entry16.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry16,tags=("entry43"))

                                    cmt_entry17 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry17["values"] = cplace_gstlist
                                    cmt_entry17.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry17,tags=("combo15"))

                                    cmt_button2 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b2 = 2:view_bundleitems(b2))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button2,tags=("button13"))

                                    cm_label29 = Label(sr_Canvas_5,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label29,tags=('label65'))

                                    def cm_fetch_proDetails3(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (cmt_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (cmt_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (cmt_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (cmt_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry47",state='normal')
                                                sr_Canvas_5.itemconfig("entry48",state='normal')
                                                sr_Canvas_5.itemconfig("combo17",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label69",state='normal')
                                                cm_label33.config(text="Available Qty : " + get_pro_data[7])
                                                cmt_entry19.delete(0,END)
                                                cmt_entry19.insert(0,get_pro_data[4])
                                                cmt_entry20.delete(0,END)
                                                cmt_entry20.insert(0,get_pro_data[11])
                                                cmt_entry22.delete(0,END)
                                                cmt_entry22.insert(0,get_pro_data[12])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry47",state='normal')
                                                sr_Canvas_5.itemconfig("entry48",state='normal')
                                                sr_Canvas_5.itemconfig("combo17",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("label69",state='normal')
                                                cm_label33.config(text="Available Qty : " + get_pro_data1[17])
                                                cmt_entry19.delete(0,END)
                                                cmt_entry19.insert(0,get_pro_data1[4])
                                                cmt_entry20.delete(0,END)
                                                cmt_entry20.insert(0,get_pro_data1[7])
                                                cmt_entry22.delete(0,END)
                                                cmt_entry22.insert(0,get_pro_data1[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data2 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry47",state='normal')
                                                sr_Canvas_5.itemconfig("entry48",state='normal')
                                                sr_Canvas_5.itemconfig("combo17",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                                sr_Canvas_5.itemconfig("label69",state='hidden')
                                            except:
                                                pass

                                            try:
                                                cmt_entry19.delete(0,END)
                                                cmt_entry19.insert(0,get_pro_data2[4])
                                                cmt_entry20.delete(0,END)
                                                cmt_entry20.insert(0,get_pro_data2[7])
                                                cmt_entry22.delete(0,END)
                                                cmt_entry22.insert(0,get_pro_data2[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry24.delete(0,END)
                                                    cmt_entry24.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        else:
                                            try:
                                                cmt_entry19.delete(0,END)
                                                cmt_entry19.insert(0,get_pro_data3[3])
                                                cmt_entry20.delete(0,END)
                                                cmt_entry20.insert(0,get_pro_data3[4])
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry47",state='hidden')
                                                sr_Canvas_5.itemconfig("entry48",state='hidden')
                                                sr_Canvas_5.itemconfig("combo17",state='hidden')
                                                sr_Canvas_5.itemconfig("button14",state='normal')
                                                sr_Canvas_5.itemconfig("label69",state='hidden')
                                            except:
                                                pass

                                            view_bundleitems(b=3)

                                    cmt_entry18 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry18["values"] = product_list
                                    cmt_entry18.current(0)
                                    cmt_entry18.bind("<<ComboboxSelected>>",cm_fetch_proDetails3)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry18,tags=("combo16"))

                                    cmt_entry19 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry19,tags=("entry44"))

                                    cmt_entry20 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry20,tags=("entry45"))

                                    cmt_entry21 = Spinbox(sr_Canvas_5,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    cmt_entry21.bind("<Key>",lambda event,sp = 3:cmt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry21,tags=("entry46"))

                                    cmt_entry22 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry22,tags=("entry47"))

                                    cmt_entry23 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    cmt_entry23.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry23,tags=("entry48"))

                                    cmt_entry24 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry24['values'] = cplace_gstlist
                                    cmt_entry24.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry24,tags=("combo17"))

                                    cmt_button3 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b3 = 3:view_bundleitems(b3))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button3,tags=("button14"))

                                    cm_label30 = Label(sr_Canvas_5,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label30,tags=('label66'))

                                    def cm_fetch_proDetails4(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (cmt_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (cmt_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                            get_pro_val2 = (cmt_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql2,get_pro_val2)
                                            get_pro_data2 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (cmt_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry52",state='normal')
                                                sr_Canvas_5.itemconfig("entry53",state='normal')
                                                sr_Canvas_5.itemconfig("combo19",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            try:
                                                sr_Canvas_5.itemconfig("label70",state='normal')
                                                cm_label34.config(text="Available Qty : " + get_pro_data[7])
                                                cmt_entry26.delete(0,END)
                                                cmt_entry26.insert(0,get_pro_data[4])
                                                cmt_entry27.delete(0,END)
                                                cmt_entry27.insert(0,get_pro_data[11])
                                                cmt_entry29.delete(0,END)
                                                cmt_entry29.insert(0,get_pro_data[12])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data[14]}% GST({get_pro_data[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data[14]}% IGST({get_pro_data[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry52",state='normal')
                                                sr_Canvas_5.itemconfig("entry53",state='normal')
                                                sr_Canvas_5.itemconfig("combo19",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("label70",state='normal')
                                                cm_label34.config(text="Available Qty : " + get_pro_data1[17])
                                                cmt_entry26.delete(0,END)
                                                cmt_entry26.insert(0,get_pro_data1[4])
                                                cmt_entry27.delete(0,END)
                                                cmt_entry27.insert(0,get_pro_data1[7])
                                                cmt_entry29.delete(0,END)
                                                cmt_entry29.insert(0,get_pro_data1[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data1[14]}% GST({get_pro_data1[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data1[14]}% IGST({get_pro_data1[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        elif get_pro_data2 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("entry52",state='normal')
                                                sr_Canvas_5.itemconfig("entry53",state='normal')
                                                sr_Canvas_5.itemconfig("combo19",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                                sr_Canvas_5.itemconfig("label70",state='hidden')
                                            except:
                                                pass

                                            try:
                                                cmt_entry26.delete(0,END)
                                                cmt_entry26.insert(0,get_pro_data2[4])
                                                cmt_entry27.delete(0,END)
                                                cmt_entry27.insert(0,get_pro_data2[7])
                                                cmt_entry29.delete(0,END)
                                                cmt_entry29.insert(0,get_pro_data2[8])
                                                if comp_data[4] == cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data2[14]}% GST({get_pro_data2[14]}%)')
                                                elif comp_data[4] != cm_pofsupply.get():
                                                    cmt_entry31.delete(0,END)
                                                    cmt_entry31.insert(0,f'{get_pro_data2[14]}% IGST({get_pro_data2[14]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass
                                        else:
                                            try:
                                                cmt_entry26.delete(0,END)
                                                cmt_entry26.insert(0,get_pro_data3[3])
                                                cmt_entry27.delete(0,END)
                                                cmt_entry27.insert(0,get_pro_data3[4])
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry52",state='hidden')
                                                sr_Canvas_5.itemconfig("entry53",state='hidden')
                                                sr_Canvas_5.itemconfig("combo19",state='hidden')
                                                sr_Canvas_5.itemconfig("button15",state='normal')
                                                sr_Canvas_5.itemconfig("label70",state='hidden')
                                            except:
                                                pass

                                            view_bundleitems(b=4)

                                    cmt_entry25 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry25["values"] = product_list
                                    cmt_entry25.current(0)
                                    cmt_entry25.bind("<<ComboboxSelected>>",cm_fetch_proDetails4)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry25,tags=("combo18"))

                                    cmt_entry26 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry26,tags=("entry49"))

                                    cmt_entry27 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry27,tags=("entry50"))

                                    cmt_entry28 = Spinbox(sr_Canvas_5,width=7,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    cmt_entry28.bind("<Key>",lambda event,sp = 4:cmt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry28,tags=("entry51"))

                                    cmt_entry29 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry29,tags=("entry52"))

                                    cmt_entry30 = Entry(sr_Canvas_5,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                    cmt_entry30.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry30,tags=("entry53"))

                                    cmt_entry31 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cmt_entry31['values'] = cplace_gstlist
                                    cmt_entry31.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cmt_entry31,tags=("combo19"))

                                    cmt_button4 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b4 = 4:view_bundleitems(b4))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cmt_button4,tags=("button15"))

                                    cm_label31 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label31,state=HIDDEN,tags=('label67'))

                                    cm_label32 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label32,state=HIDDEN,tags=('label68'))

                                    cm_label33 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label33,state=HIDDEN,tags=('label69'))

                                    cm_label34 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label34,state=HIDDEN,tags=('label70'))

                                    cm_label25 = Label(sr_Canvas_5,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label25,tags=('label40'))

                                    cm_label26 = Label(sr_Canvas_5,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label26,tags=('label41'))

                                    cm_label27 = Label(sr_Canvas_5,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label27,tags=('label42'))

                                    cmt_entry8 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry8,tags=("entry23"))

                                    cmt_entry9 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry9,tags=("entry24"))

                                    cmt_entry10 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cmt_entry10,tags=("entry25"))

                                    def save_salesreceipt():

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2[0]

                                        
                                        saleno = cm_srpdentry.get()
                                        salename = cm_custCombo.get()
                                        saleemail = cm_email.get()
                                        saleaddress = cm_baddress.get("1.0","end-1c")
                                        saledate = cm_srdate.get_date()
                                        salepay = cm_pmethod.get()
                                        salerefno = cm_ref.get()
                                        saledeposit = cm_depto.get()
                                        if cmt_entry1.get() == "Select Product":
                                            salepro = ''
                                        else:
                                            salepro = cmt_entry1.get()
                                        salesplace = cm_pofsupply.get()
                                        salehsn = cmt_entry2.get()
                                        saledescription = cmt_entry3.get()
                                        saleqty = cmt_entry4.get()
                                        saleprice = cmt_entry5.get()
                                        saaletotal = cmt_entry6.get()
                                        try:
                                            tax = split_gst(cmt_entry7.get())
                                        except:
                                            tax = 0
                                        salesubtotal = cmt_entry8.get()
                                        saletaxamount = cmt_entry9.get()
                                        salegrandtotal = cmt_entry10.get()
                                        if cmt_entry11.get() == "Select Product":
                                            category2 = ''
                                        else:
                                            category2 = cmt_entry11.get()
                                        categoryhsn2 = cmt_entry12.get()
                                        descrptin2 = cmt_entry13.get()
                                        catqty2 = cmt_entry14.get()
                                        catprice2 = cmt_entry15.get()
                                        cattotal2 = cmt_entry16.get()
                                        try:
                                            tax1 = split_gst(cmt_entry17.get())
                                        except:
                                            tax1 = 0
                                        if cmt_entry18.get() == "Select Product":
                                            category3 = ''
                                        else:
                                            category3 = cmt_entry18.get()
                                        categoryhsn3 = cmt_entry19.get()
                                        descrptin3 = cmt_entry20.get()
                                        catqty3 = cmt_entry21.get()
                                        catprice3 = cmt_entry22.get()
                                        cattotal3 = cmt_entry23.get()
                                        try:
                                            tax2 = split_gst(cmt_entry24.get())
                                        except:
                                            tax2 = 0
                                        if cmt_entry25.get() == "Select Product":
                                            category4 = ''
                                        else:
                                            category4 = cmt_entry25.get()
                                        categoryhsn4 = cmt_entry26.get()
                                        descrptin4 = cmt_entry27.get()
                                        catqty4 = cmt_entry28.get()
                                        catprice4 = cmt_entry29.get()
                                        cattotal4 = cmt_entry30.get()
                                        try:
                                            tax3 = split_gst(cmt_entry31.get())
                                        except:
                                            tax3 = 0
                                        cid_id = comp_data[0]

                                        if salename == "Select Customer" or salename == '' or salesplace == '' or salepay == '' or salerefno == '':
                                            pass
                                        else:
                                            try:
                                                get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                get_accts1_val = (saledeposit,comp_data[0])
                                                fbcursor.execute(get_accts1_sql,get_accts1_val)
                                                get_accts1_data = fbcursor.fetchone()

                                                if not get_accts1_data:
                                                    pass
                                                else:
                                                    if saledeposit == get_salesrcpt_data[9]:
                                                        if float(salegrandtotal) > float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(salegrandtotal) - float(get_salesrcpt_data[19])
                                                            upd_bal = get_accts1_data[0] + float(newgrandtot)
                                                            upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val = (upd_bal,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                                            finsysdb.commit()
                                                        elif float(salegrandtotal) < float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(get_salesrcpt_data[19]) - float(salegrandtotal)
                                                            upd_bal = get_accts1_data[0] - float(newgrandtot)
                                                            upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val = (upd_bal,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                                            finsysdb.commit()
                                                        else:
                                                            pass
                                                    else:
                                                        get_accts_sql = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val = (get_salesrcpt_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts_sql,get_accts_val)
                                                        get_accts_data = fbcursor.fetchone()

                                                        get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val1 = (get_salesrcpt_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                        get_accts1_data1 = fbcursor.fetchone()

                                                        if not get_accts_data:
                                                            pass
                                                        else:
                                                            upd_bal = get_accts_data[0] - \
                                                                float(get_salesrcpt_data[19])

                                                            upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val = (upd_bal,get_salesrcpt_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql,upd_accts_val)
                                                            finsysdb.commit()

                                                        if not get_accts1_data1:
                                                            pass
                                                        else:
                                                            upd_bal1 = get_accts1_data1[0] - \
                                                                float(get_salesrcpt_data[19])

                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,get_salesrcpt_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()

                                                        if float(salegrandtotal) > float(get_salesrcpt_data[19]):
                                                            newgrandtot = salegrandtotal
                                                            upd_bal1 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()
                                                        elif float(salegrandtotal) < float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(get_salesrcpt_data[19]) - float(salegrandtotal)
                                                            upd_bal1 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()
                                                        else:
                                                            newgrandtot = float(get_salesrcpt_data[19])
                                                            upd_bal1 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()

                                                #-------------------------------------------------

                                                get_accts_sql = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                get_accts_val = (saledeposit,comp_data[0])
                                                fbcursor.execute(get_accts_sql,get_accts_val)
                                                get_accts_data = fbcursor.fetchone()

                                                if not get_accts_data:
                                                    pass
                                                else:
                                                    if saledeposit == get_salesrcpt_data[9]:
                                                        if float(salegrandtotal) > float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(salegrandtotal) - float(get_salesrcpt_data[19])
                                                            
                                                            upd_bal = get_accts_data[0] + newgrandtot
                                                            upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val = (upd_bal,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts_sql,upd_accts_val)
                                                            finsysdb.commit()
                                                        elif float(salegrandtotal) < float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(get_salesrcpt_data[19]) - float(salegrandtotal)

                                                            upd_bal = get_accts_data[0] - newgrandtot
                                                            upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val = (upd_bal,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts_sql,upd_accts_val)
                                                            finsysdb.commit()
                                                        else:
                                                            pass
                                                    else:
                                                        get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val2 = (get_salesrcpt_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                        get_accts_data2 = fbcursor.fetchone()

                                                        get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val2 = (get_salesrcpt_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                        get_accts1_data2 = fbcursor.fetchone()

                                                        if not get_accts_data2:
                                                            pass
                                                        else:
                                                            upd_bal2 = get_accts_data2[0] - \
                                                                float(get_salesrcpt_data[19])

                                                            upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val2 = (upd_bal2,get_salesrcpt_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                            finsysdb.commit()

                                                        if not get_accts1_data2:
                                                            pass
                                                        else:
                                                            upd_bal2 = get_accts1_data2[0] - \
                                                                float(get_salesrcpt_data[19])

                                                            upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val2 = (upd_bal2,get_salesrcpt_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                            finsysdb.commit()

                                                        if float(salegrandtotal) > float(get_salesrcpt_data[19]):
                                                            newgrandtot = salegrandtotal
                                                            upd_bal3 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val3 = (upd_bal3,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                            finsysdb.commit()
                                                        elif float(salegrandtotal) < float(get_salesrcpt_data[19]):
                                                            newgrandtot = float(get_salesrcpt_data[19]) - float(salegrandtotal)
                                                            upd_bal3 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val3 = (upd_bal3,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                            finsysdb.commit()
                                                        else:
                                                            newgrandtot = float(get_salesrcpt_data[19])
                                                            upd_bal3 = get_accts1_data[0] + float(newgrandtot)

                                                            upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val3 = (upd_bal3,saledeposit,comp_data[0])
                                                            fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                            finsysdb.commit()

                                                current_qtys = [get_salesrcpt_data[13],get_salesrcpt_data[23],get_salesrcpt_data[30],get_salesrcpt_data[37]]

                                                current_taxs = [get_salesrcpt_data[17]/100,get_salesrcpt_data[26]/100,get_salesrcpt_data[33]/100,get_salesrcpt_data[40]/100]

                                                current_taxamnt = [float(get_salesrcpt_data[15]) * float(current_taxs[0]),float(get_salesrcpt_data[25]) * float(current_taxs[1]),
                                                float(get_salesrcpt_data[32]) * float(current_taxs[2]),float(get_salesrcpt_data[39]) * float(current_taxs[3])]

                                                current_total = [get_salesrcpt_data[15],get_salesrcpt_data[25],get_salesrcpt_data[32],get_salesrcpt_data[39]]
                                                try:
                                                    lth=tax_tot1
                                                except:
                                                    lth=0.0

                                                try:
                                                    lth1=tax_tot2
                                                except:
                                                    lth1=0.0

                                                try:
                                                    lth2=tax_tot3
                                                except:
                                                    lth2=0.0
                                                try:
                                                    lth3=tax_tot4
                                                except:
                                                    lth3=0.0

                                                tax_amounts = [lth,lth1,lth2,lth3]

                                                # tax_amounts = [tax_tot1,tax_tot2,tax_tot3,tax_tot4]

                                                quantities = [saleqty,catqty2,catqty3,catqty4]

                                                totals = [saaletotal,cattotal2,cattotal3,cattotal4]

                                                products = [salepro,category2,category3,category4]

                                                for (p,q,t,tx,cq,ct,ctx) in zip(products,quantities,totals,tax_amounts,current_qtys,current_total,current_taxamnt):
                                                    try:
                                                        get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                        get_invent_val = (p,comp_data[0])
                                                        fbcursor.execute(get_invent_sql,get_invent_val)
                                                        get_invent_data = fbcursor.fetchone()

                                                        if not get_invent_data:
                                                            pass
                                                        else:
                                                            if int(q) > int(cq):
                                                                initial_qty = int(get_invent_data[7]) - (int(q) - int(cq))

                                                                upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                                upd_invent_val = (initial_qty,p,comp_data[0])
                                                                fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                                finsysdb.commit()

                                                                cxq = float(get_invent_data[16]) * (float(q) - float(cq))

                                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                get_accts1_data1 = fbcursor.fetchone()

                                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                get_accts_data1 = fbcursor.fetchone()

                                                                if not get_accts_data1 and not get_accts1_data1:
                                                                    pass
                                                                elif get_accts1_data1:
                                                                    upd_bal1 = get_accts1_data1[0] - float(cxq)
                                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                    finsysdb.commit()
                                                                elif get_accts_data1:
                                                                    upd_bal1 = get_accts_data1[0] - float(cxq)
                                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                #----------------------------------------------------------
                                                                newtot = float(t) - float(ct)

                                                                get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                                get_accts1_data2 = fbcursor.fetchone()

                                                                get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                                get_accts_data2 = fbcursor.fetchone()

                                                                if not get_accts_data2 and not get_accts1_data2:
                                                                    pass
                                                                elif get_accts1_data2:
                                                                    upd_bal2 = get_accts1_data2[0] + float(newtot)
                                                                    upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                                    finsysdb.commit()
                                                                elif get_accts_data2:
                                                                    upd_bal2 = get_accts_data2[0] + float(newtot)
                                                                    upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                #---------------------------------------------------
                                                                get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                                get_accts1_data3 = fbcursor.fetchone()

                                                                get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                                get_accts_data3= fbcursor.fetchone()

                                                                if not get_accts_data3 and not get_accts1_data3:
                                                                    pass
                                                                elif get_accts1_data3:
                                                                    upd_bal3 = get_accts1_data3[0] + float(cxq)
                                                                    upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                                    finsysdb.commit()
                                                                elif get_accts_data3:
                                                                    upd_bal3 = get_accts_data3[0] + float(cxq)
                                                                    upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                try:
                                                                    if salesplace == comp_data[4]:
                                                                        tax = tx/2
                                                                        ctax = ctx/2
                                                                        ta = tax - ctax
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        upd_bal4 = get_accts1_data4[0] + ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()

                                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                        get_accts1_data5 = fbcursor.fetchone()

                                                                        upd_bal5 = get_accts1_data5[0] + ta
                                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        ta = tx - ctx

                                                                        upd_bal4 = get_accts1_data4[0] + ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()
                                                                except:
                                                                    pass
                                                            elif int(q) < int(cq):
                                                                initial_qty = int(get_invent_data[7]) + (int(cq) - int(q))

                                                                upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                                upd_invent_val = (initial_qty,p,comp_data[0])
                                                                fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                                finsysdb.commit()

                                                                cxq = float(get_invent_data[16]) * (float(cq) - float(q))

                                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                get_accts1_data1 = fbcursor.fetchone()

                                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                get_accts_data1 = fbcursor.fetchone()

                                                                if not get_accts_data1 and not get_accts1_data1:
                                                                    pass
                                                                elif get_accts1_data1:
                                                                    upd_bal1 = get_accts1_data1[0] + float(cxq)
                                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                    finsysdb.commit()
                                                                elif get_accts_data1:
                                                                    upd_bal1 = get_accts_data1[0] + float(cxq)
                                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                newtot = float(ct) - float(t)

                                                                #----------------------------------------------------------
                                                                get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                                get_accts1_data2 = fbcursor.fetchone()

                                                                get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                                get_accts_data2 = fbcursor.fetchone()

                                                                if not get_accts_data2 and not get_accts1_data2:
                                                                    pass
                                                                elif get_accts1_data2:
                                                                    upd_bal2 = get_accts1_data2[0] - float(newtot)
                                                                    upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                                    finsysdb.commit()
                                                                elif get_accts_data2:
                                                                    upd_bal2 = get_accts_data2[0] - float(newtot)
                                                                    upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                #---------------------------------------------------
                                                                get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                                get_accts1_data3 = fbcursor.fetchone()

                                                                get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                                get_accts_data3= fbcursor.fetchone()

                                                                if not get_accts_data3 and not get_accts1_data3:
                                                                    pass
                                                                elif get_accts1_data3:
                                                                    upd_bal3 = get_accts1_data3[0] - float(cxq)
                                                                    upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                                    finsysdb.commit()
                                                                elif get_accts_data3:
                                                                    upd_bal3 = get_accts_data3[0] - float(cxq)
                                                                    upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                try:
                                                                    if salesplace == comp_data[4]:
                                                                        tax = tx/2
                                                                        ctax = ctx/2
                                                                        ta = ctax - tax
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        upd_bal4 = get_accts1_data4[0] - ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()

                                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                        get_accts1_data5 = fbcursor.fetchone()

                                                                        upd_bal5 = get_accts1_data5[0] - ta
                                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        ta = ctx - tx

                                                                        upd_bal4 = get_accts1_data4[0] - ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()
                                                                except:
                                                                    pass
                                                    except:
                                                        pass

                                                    try:
                                                        get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                        get_noninvent_val = (p,comp_data[0])
                                                        fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                        get_noninvent_data = fbcursor.fetchone()

                                                        if not get_noninvent_data:
                                                            pass
                                                        else:
                                                            if int(q) > int(cq):
                                                                qty = int(get_noninvent_data[17]) - (int(q) - int(cq))
                                                                newtot = float(t) - float(ct)

                                                                upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                                upd_noninvent_val = (qty,p,comp_data[0])
                                                                fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                                finsysdb.commit()

                                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                get_accts1_data1 = fbcursor.fetchone()

                                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                get_accts_data1 = fbcursor.fetchone()

                                                                if not get_accts_data1 and not get_accts1_data1:
                                                                    pass
                                                                elif get_accts1_data1:
                                                                    upd_bal1 = get_accts1_data1[0] + float(newtot)
                                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                    finsysdb.commit()
                                                                elif get_accts_data1:
                                                                    upd_bal1 = get_accts_data1[0] + float(newtot)
                                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                try:
                                                                    if salesplace == comp_data[4]:
                                                                        tax = tx/2
                                                                        ctax = ctx/2
                                                                        ta = tax - ctax
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        upd_bal4 = get_accts1_data4[0] + ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()

                                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                        get_accts1_data5 = fbcursor.fetchone()

                                                                        upd_bal5 = get_accts1_data5[0] + ta
                                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        ta = tx - ctx

                                                                        upd_bal4 = get_accts1_data4[0] + ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()
                                                                except:
                                                                    pass
                                                            elif int(q) < int(cq):
                                                                qty = int(get_noninvent_data[17]) + (int(cq) - int(q))
                                                                newtot = float(ct) - float(t)

                                                                upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                                upd_noninvent_val = (qty,p,comp_data[0])
                                                                fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                                finsysdb.commit()

                                                                get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                get_accts1_data1 = fbcursor.fetchone()

                                                                get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                get_accts_data1 = fbcursor.fetchone()

                                                                if not get_accts_data1 and not get_accts1_data1:
                                                                    pass
                                                                elif get_accts1_data1:
                                                                    upd_bal1 = get_accts1_data1[0] - float(newtot)
                                                                    upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                    finsysdb.commit()
                                                                elif get_accts_data1:
                                                                    upd_bal1 = get_accts_data1[0] - float(newtot)
                                                                    upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                    finsysdb.commit()
                                                                else:
                                                                    pass

                                                                try:
                                                                    if salesplace == comp_data[4]:
                                                                        tax = tx/2
                                                                        ctax = ctx/2
                                                                        ta = ctax - tax
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        upd_bal4 = get_accts1_data4[0] - ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()

                                                                        get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                        get_accts1_data5 = fbcursor.fetchone()

                                                                        upd_bal5 = get_accts1_data5[0] - ta
                                                                        upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                        get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                        fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                        get_accts1_data4 = fbcursor.fetchone()

                                                                        ta = ctx - tx

                                                                        upd_bal4 = get_accts1_data4[0] - ta
                                                                        upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                        finsysdb.commit()
                                                                except:
                                                                    pass

                                                    except:
                                                        pass

                                                #-------------------------------------------------------------

                                                try:
                                                    get_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_bun_val1 = (cmt_entry1.get(),comp_data[0])
                                                    fbcursor.execute(get_bun_sql1,get_bun_val1)
                                                    get_bun_data1 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                try:
                                                    get_bun_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_bun_val2 = (cmt_entry11.get(),comp_data[0])
                                                    fbcursor.execute(get_bun_sql2,get_bun_val2)
                                                    get_bun_data2 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                try:
                                                    get_bun_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_bun_val3 = (cmt_entry18.get(),comp_data[0])
                                                    fbcursor.execute(get_bun_sql3,get_bun_val3)
                                                    get_bun_data3 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                try:
                                                    get_bun_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_bun_val4 = (cmt_entry25.get(),comp_data[0])
                                                    fbcursor.execute(get_bun_sql4,get_bun_val4)
                                                    get_bun_data4 = fbcursor.fetchone()
                                                except:
                                                    pass

                                                if get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get(),]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get(),]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get(),]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq5,bq6,bq7,bq8,bq9,bq10,bq11,bq12,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto5,bto6,bto7,bto8,bto9,bto10,bto11,bto12,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta5,bta6,bta7,bta8,bta9,bta10,bta11,bta12,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4]

                                                    bctotal = [bto1,bto2,bto3,bto4]

                                                    bctax_amount = [bta1,bta2,bta3,bta4]
                                                elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq5,bq6,bq7,bq8]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto5,bto6,bto7,bto8]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta5,bta6,bta7,bta8]
                                                elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq5,bq6,bq7,bq8,bq9,bq10,bq11,bq12]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto5,bto6,bto7,bto8,bto9,bto10,bto11,bto12]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta5,bta6,bta7,bta8,bta9,bta10,bta11,bta12]
                                                elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                                    btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                                    bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                                    btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                                    bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]

                                                    bcqty = [bq5,bq6,bq7,bq8]

                                                    bctotal = [bto5,bto6,bto7,bto8]

                                                    bctax_amount = [bta5,bta6,bta7,bta8]
                                                elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                                    btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                    bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                    btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                    bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]

                                                    bcqty = [bq5,bq6,bq7,bq8,bq9,bq10,bq11,bq12]

                                                    bctotal = [bto5,bto6,bto7,bto8,bto9,bto10,bto11,bto12]

                                                    bctax_amount = [bta5,bta6,bta7,bta8,bta9,bta10,bta11,bta12]
                                                elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                                    btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq5,bq6,bq7,bq8,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto5,bto6,bto7,bto8,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta5,bta6,bta7,bta8,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                    btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq5,bq6,bq7,bq8,bq9,bq10,bq11,bq12,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto5,bto6,bto7,bto8,bto9,bto10,bto11,bto12,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta5,bta6,bta7,bta8,bta9,bta10,bta11,bta12,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                                    btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                    bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                    btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                    bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]

                                                    bcqty = [bq9,bq10,bq11,bq12]

                                                    bctotal = [bto9,bto10,bto11,bto12]

                                                    bctax_amount = [bta9,bta10,bta11,bta12]
                                                elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq9,bq10,bq11,bq12]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto9,bto10,bto11,bto12]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta9,bta10,bta11,bta12]
                                                elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                    btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq9,bq10,bq11,bq12,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto9,bto10,bto11,bto12,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta9,bta10,bta11,bta12,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq9,bq10,bq11,bq12,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto9,bto10,bto11,bto12,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta9,bta10,bta11,bta12,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                                    btax_amount = [b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq13,bq14,bq15,bq16]

                                                    bctotal = [bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta13,bta14,bta15,bta16]
                                                elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                                    btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                    b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                    b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                    bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                    bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                    bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                    btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                    bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                    bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                    bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                    bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                    bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]

                                                    bcqty = [bq1,bq2,bq3,bq4,bq5,bq6,bq7,bq8,bq13,bq14,bq15,bq16]

                                                    bctotal = [bto1,bto2,bto3,bto4,bto5,bto6,bto7,bto8,bto13,bto14,bto15,bto16]

                                                    bctax_amount = [bta1,bta2,bta3,bta4,bta5,bta6,bta7,bta8,bta13,bta14,bta15,bta16]
                                                else:
                                                    pass

                                                
                                                try:
                                                    for (p,q,t,tx,cq,ct,ctx) in zip(bproducts,bqty,btotals,btax_amount,bcqty,bctotal,bctax_amount):
                                                        try:
                                                            get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                            get_invent_val = (p,comp_data[0])
                                                            fbcursor.execute(get_invent_sql,get_invent_val)
                                                            get_invent_data = fbcursor.fetchone()

                                                            if not get_invent_data:
                                                                pass
                                                            else:
                                                                if int(q) > int(cq):
                                                                    initial_qty = int(get_invent_data[7]) - (int(q) - int(cq))

                                                                    upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_invent_val = (initial_qty,p,comp_data[0])
                                                                    fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                                    finsysdb.commit()

                                                                    cxq = float(get_invent_data[16]) * (float(q) - float(cq))

                                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                    get_accts1_data1 = fbcursor.fetchone()

                                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                    get_accts_data1 = fbcursor.fetchone()

                                                                    if not get_accts_data1 and not get_accts1_data1:
                                                                        pass
                                                                    elif get_accts1_data1:
                                                                        upd_bal1 = get_accts1_data1[0] - float(cxq)
                                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data1:
                                                                        upd_bal1 = get_accts_data1[0] - float(cxq)
                                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    #----------------------------------------------------------

                                                                    newtot = float(t) - float(ct)
                                                                    get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                                    get_accts1_data2 = fbcursor.fetchone()

                                                                    get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                                    get_accts_data2 = fbcursor.fetchone()

                                                                    if not get_accts_data2 and not get_accts1_data2:
                                                                        pass
                                                                    elif get_accts1_data2:
                                                                        upd_bal2 = get_accts1_data2[0] + float(newtot)
                                                                        upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data2:
                                                                        upd_bal2 = get_accts_data2[0] + float(newtot)
                                                                        upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    #---------------------------------------------------
                                                                    get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                                    get_accts1_data3 = fbcursor.fetchone()

                                                                    get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                                    get_accts_data3= fbcursor.fetchone()

                                                                    if not get_accts_data3 and not get_accts1_data3:
                                                                        pass
                                                                    elif get_accts1_data3:
                                                                        upd_bal3 = get_accts1_data3[0] + float(cxq)
                                                                        upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data3:
                                                                        upd_bal3 = get_accts_data3[0] + float(cxq)
                                                                        upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    try:
                                                                        if salesplace == comp_data[4]:
                                                                            tax = tx/2
                                                                            ctax = ctx/2
                                                                            ta = tax - ctax
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            upd_bal4 = get_accts1_data4[0] + ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()

                                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                            get_accts1_data5 = fbcursor.fetchone()

                                                                            upd_bal5 = get_accts1_data5[0] + ta
                                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                            finsysdb.commit()
                                                                        else:
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            ta = tx - ctx

                                                                            upd_bal4 = get_accts1_data4[0] + ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()
                                                                    except:
                                                                        pass
                                                                elif int(q) < int(cq):
                                                                    initial_qty = int(get_invent_data[7]) + (int(cq) - int(q))

                                                                    upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_invent_val = (initial_qty,p,comp_data[0])
                                                                    fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                                    finsysdb.commit()

                                                                    cxq = float(get_invent_data[16]) * (float(cq) - float(q))

                                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                    get_accts1_data1 = fbcursor.fetchone()

                                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                    get_accts_data1 = fbcursor.fetchone()

                                                                    if not get_accts_data1 and not get_accts1_data1:
                                                                        pass
                                                                    elif get_accts1_data1:
                                                                        upd_bal1 = get_accts1_data1[0] + float(cxq)
                                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data1:
                                                                        upd_bal1 = get_accts_data1[0] + float(cxq)
                                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    #----------------------------------------------------------

                                                                    newtot = float(ct) - float(t)
                                                                    get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                                    get_accts1_data2 = fbcursor.fetchone()

                                                                    get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                                    get_accts_data2 = fbcursor.fetchone()

                                                                    if not get_accts_data2 and not get_accts1_data2:
                                                                        pass
                                                                    elif get_accts1_data2:
                                                                        upd_bal2 = get_accts1_data2[0] - float(newtot)
                                                                        upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data2:
                                                                        upd_bal2 = get_accts_data2[0] - float(newtot)
                                                                        upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    #---------------------------------------------------
                                                                    get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                                    get_accts1_data3 = fbcursor.fetchone()

                                                                    get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                                    get_accts_data3= fbcursor.fetchone()

                                                                    if not get_accts_data3 and not get_accts1_data3:
                                                                        pass
                                                                    elif get_accts1_data3:
                                                                        upd_bal3 = get_accts1_data3[0] - float(cxq)
                                                                        upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data3:
                                                                        upd_bal3 = get_accts_data3[0] - float(cxq)
                                                                        upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    try:
                                                                        if salesplace == comp_data[4]:
                                                                            tax = tx/2
                                                                            ctax = ctx/2
                                                                            ta = ctax - tax
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            upd_bal4 = get_accts1_data4[0] - ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()

                                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                            get_accts1_data5 = fbcursor.fetchone()

                                                                            upd_bal5 = get_accts1_data5[0] - ta
                                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                            finsysdb.commit()
                                                                        else:
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            ta = ctx - tx

                                                                            upd_bal4 = get_accts1_data4[0] - ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()
                                                                    except:
                                                                        pass
                                                        except:
                                                            pass

                                                        try:
                                                            get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                            get_noninvent_val = (p,comp_data[0])
                                                            fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                            get_noninvent_data = fbcursor.fetchone()

                                                            if not get_noninvent_data:
                                                                pass
                                                            else:
                                                                if int(q) > int(cq):
                                                                    qty = int(get_noninvent_data[17]) - (int(q) - int(cq))

                                                                    upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_noninvent_val = (qty,p,comp_data[0])
                                                                    fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                                    finsysdb.commit()

                                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                    get_accts1_data1 = fbcursor.fetchone()

                                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                    get_accts_data1 = fbcursor.fetchone()

                                                                    newtot = float(t) - float(ct)

                                                                    if not get_accts_data1 and not get_accts1_data1:
                                                                        pass
                                                                    elif get_accts1_data1:
                                                                        upd_bal1 = get_accts1_data1[0] + float(newtot)
                                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data1:
                                                                        upd_bal1 = get_accts_data1[0] + float(newtot)
                                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    try:
                                                                        if salesplace == comp_data[4]:
                                                                            tax = tx/2
                                                                            ctax = ctx/2
                                                                            ta = tax - ctax
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            upd_bal4 = get_accts1_data4[0] + ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()

                                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                            get_accts1_data5 = fbcursor.fetchone()

                                                                            upd_bal5 = get_accts1_data5[0] + ta
                                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                            finsysdb.commit()
                                                                        else:
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            ta = tx - ctx

                                                                            upd_bal4 = get_accts1_data4[0] + ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()
                                                                    except:
                                                                        pass
                                                                elif int(q) < int(cq):
                                                                    qty = int(get_noninvent_data[17]) + (int(cq) - int(q))

                                                                    upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_noninvent_val = (qty,p,comp_data[0])
                                                                    fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                                    finsysdb.commit()

                                                                    get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                                    get_accts1_data1 = fbcursor.fetchone()

                                                                    get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                                    get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                                    fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                                    get_accts_data1 = fbcursor.fetchone()

                                                                    newtot = float(ct) - float(t)

                                                                    if not get_accts_data1 and not get_accts1_data1:
                                                                        pass
                                                                    elif get_accts1_data1:
                                                                        upd_bal1 = get_accts1_data1[0] - float(newtot)
                                                                        upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                        fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                        finsysdb.commit()
                                                                    elif get_accts_data1:
                                                                        upd_bal1 = get_accts_data1[0] - float(newtot)
                                                                        upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                        upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                        fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                        finsysdb.commit()
                                                                    else:
                                                                        pass

                                                                    try:
                                                                        if salesplace == comp_data[4]:
                                                                            tax = tx/2
                                                                            ctax = ctx/2
                                                                            ta = ctax - tax
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            upd_bal4 = get_accts1_data4[0] - ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()

                                                                            get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                            get_accts1_data5 = fbcursor.fetchone()

                                                                            upd_bal5 = get_accts1_data5[0] - ta
                                                                            upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                            finsysdb.commit()
                                                                        else:
                                                                            get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                            get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                            fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                            get_accts1_data4 = fbcursor.fetchone()

                                                                            ta = ctx - tx

                                                                            upd_bal4 = get_accts1_data4[0] - ta
                                                                            upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                            upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                            fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                            finsysdb.commit()
                                                                    except:
                                                                        pass

                                                        except:
                                                            pass
                                                except:
                                                    pass

                                                upd_salesr_sql = "UPDATE app1_salesrecpts SET salename=%s,saleemail=%s,saleaddress=%s,saledate=%s,salepay=%s,salerefno=%s,saledeposit=%s,salepro=%s,salesplace=%s,salehsn=%s,saledescription=%s,saleqty=%s,saleprice=%s,saaletotal=%s,tax=%s,salesubtotal=%s,saletaxamount=%s,salegrandtotal=%s,category2=%s,categoryhsn2=%s,descrptin2=%s,catqty2=%s,catprice2=%s,cattotal2=%s,tax1=%s,category3=%s,categoryhsn3=%s,descrptin3=%s,catqty3=%s,catprice3=%s,cattotal3=%s,tax2=%s,category4=%s,categoryhsn4=%s,descrptin4=%s,catqty4=%s,catprice4=%s,cattotal4=%s,tax3=%s WHERE saleno=%s AND cid_id=%s"
                                                upd_salesr_val = (salename,saleemail,saleaddress,saledate,salepay,salerefno,saledeposit,salepro,salesplace,salehsn,saledescription,saleqty,saleprice,saaletotal,tax,salesubtotal,saletaxamount,salegrandtotal,category2,categoryhsn2,descrptin2,catqty2,catprice2,cattotal2,tax1,category3,categoryhsn3,descrptin3,catqty3,catprice3,cattotal3,tax2,category4,categoryhsn4,descrptin4,catqty4,catprice4,cattotal4,tax3,saleno,cid_id)
                                                fbcursor.execute(upd_salesr_sql,upd_salesr_val)
                                                finsysdb.commit()

                                                sr_Frame_1.destroy()
                                                sr_Frame.grid(row=0,column=0,sticky='nsew')

                                                show_sr_treeData()
                                            except:
                                                pass

                                    save_btn = Button(sr_Canvas_5,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:save_salesreceipt())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button7")) 

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3"))
                                    #--------------
                                    cm_label6 = Label(sr_Canvas_5,width=20,height=1,text="Sales receipt date:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cm_label6,tags=('label24'))

                                    cwidth = root.winfo_screenwidth()

                                    cm_srdate = DateEntry(sr_Canvas_5,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')
                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(495,442,anchor='nw',window=cm_srdate,tags=("date"))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(370,455,anchor='nw',window=cm_srdate,tags=("date"))
                                    else:
                                        sr_Canvas_5.create_window(465,407,anchor='nw',window=cm_srdate,tags=("date"))

                                    cm_custCombo.delete(0,END)
                                    cm_custCombo.insert(0,get_salesrcpt_data[1])
                                    cm_email.delete(0,END)
                                    cm_email.insert(0,get_salesrcpt_data[2])
                                    cm_srpdentry.delete(0,END)
                                    cm_srpdentry.insert(0,get_salesrcpt_data[5])
                                    cm_baddress.delete("1.0","end-1c")
                                    cm_baddress.insert("1.0",get_salesrcpt_data[3])
                                    cm_pofsupply.delete(0,END)
                                    cm_pofsupply.insert(0,get_salesrcpt_data[6])
                                    cm_pmethod.delete(0,END)
                                    cm_pmethod.insert(0,get_salesrcpt_data[7])
                                    cm_depto.delete(0,END)
                                    cm_depto.insert(0,get_salesrcpt_data[9])
                                    cm_ref.delete(0,END)
                                    cm_ref.insert(0,get_salesrcpt_data[8])
                                    cm_srdate.delete(0,END)
                                    cm_srdate.insert(0,get_salesrcpt_data[4])

                                    sel_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                    sel_bun_val = (comp_data[0],)
                                    fbcursor.execute(sel_bun_sql,sel_bun_val)
                                    sel_bun_data = fbcursor.fetchall()

                                    bundle_list = []
                                    for b in sel_bun_data:
                                        bundle_list.append(b[0])
                                    
                                    cmt_entry1.delete(0,END)
                                    cmt_entry1.insert(0,get_salesrcpt_data[10])
                                    cmt_entry2.delete(0,END)
                                    cmt_entry2.insert(0,get_salesrcpt_data[11])
                                    cmt_entry3.delete(0,END)
                                    cmt_entry3.insert(0,get_salesrcpt_data[12])
                                    cmt_entry4.delete(0,END)
                                    cmt_entry4.insert(0,get_salesrcpt_data[13])
                                    cmt_entry5.delete(0,END)
                                    cmt_entry5.insert(0,get_salesrcpt_data[14])
                                    cmt_entry6.delete(0,END)
                                    cmt_entry6.insert(0,get_salesrcpt_data[15])
                                    cmt_entry7.delete(0,END)
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cmt_entry7.insert(0,f'{get_salesrcpt_data[17]}% GST({get_salesrcpt_data[17]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cmt_entry7.insert(0,f'{get_salesrcpt_data[17]}% IGST({get_salesrcpt_data[17]}%)')
                                    else:
                                        pass

                                    cmt_entry11.delete(0,END)
                                    cmt_entry11.insert(0,get_salesrcpt_data[20])
                                    cmt_entry12.delete(0,END)
                                    cmt_entry12.insert(0,get_salesrcpt_data[21])
                                    cmt_entry13.delete(0,END)
                                    cmt_entry13.insert(0,get_salesrcpt_data[22])
                                    cmt_entry14.delete(0,END)
                                    cmt_entry14.insert(0,get_salesrcpt_data[23])
                                    cmt_entry15.delete(0,END)
                                    cmt_entry15.insert(0,get_salesrcpt_data[24])
                                    cmt_entry16.delete(0,END)
                                    cmt_entry16.insert(0,get_salesrcpt_data[25])
                                    cmt_entry17.delete(0,END)
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cmt_entry17.insert(0,f'{get_salesrcpt_data[26]}% GST({get_salesrcpt_data[26]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cmt_entry17.insert(0,f'{get_salesrcpt_data[26]}% IGST({get_salesrcpt_data[26]}%)')
                                    else:
                                        pass

                                    cmt_entry18.delete(0,END)
                                    cmt_entry18.insert(0,get_salesrcpt_data[27])
                                    cmt_entry19.delete(0,END)
                                    cmt_entry19.insert(0,get_salesrcpt_data[28])
                                    cmt_entry20.delete(0,END)
                                    cmt_entry20.insert(0,get_salesrcpt_data[29])
                                    cmt_entry21.delete(0,END)
                                    cmt_entry21.insert(0,get_salesrcpt_data[30])
                                    cmt_entry22.delete(0,END)
                                    cmt_entry22.insert(0,get_salesrcpt_data[31])
                                    cmt_entry23.delete(0,END)
                                    cmt_entry23.insert(0,get_salesrcpt_data[32])
                                    cmt_entry24.delete(0,END)
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cmt_entry24.insert(0,f'{get_salesrcpt_data[33]}% GST({get_salesrcpt_data[33]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cmt_entry24.insert(0,f'{get_salesrcpt_data[33]}% IGST({get_salesrcpt_data[33]}%)')
                                    else:
                                        pass

                                    cmt_entry25.delete(0,END)
                                    cmt_entry25.insert(0,get_salesrcpt_data[34])
                                    cmt_entry26.delete(0,END)
                                    cmt_entry26.insert(0,get_salesrcpt_data[35])
                                    cmt_entry27.delete(0,END)
                                    cmt_entry27.insert(0,get_salesrcpt_data[36])
                                    cmt_entry28.delete(0,END)
                                    cmt_entry28.insert(0,get_salesrcpt_data[37])
                                    cmt_entry29.delete(0,END)
                                    cmt_entry29.insert(0,get_salesrcpt_data[38])
                                    cmt_entry30.delete(0,END)
                                    cmt_entry30.insert(0,get_salesrcpt_data[39])
                                    cmt_entry31.delete(0,END)
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cmt_entry31.insert(0,f'{get_salesrcpt_data[40]}% GST({get_salesrcpt_data[40]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cmt_entry31.insert(0,f'{get_salesrcpt_data[40]}% IGST({get_salesrcpt_data[40]}%)')
                                    else:
                                        pass

                                    if get_salesrcpt_data[10] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry21",state='hidden')
                                            sr_Canvas_5.itemconfig("entry22",state='hidden')
                                            sr_Canvas_5.itemconfig("combo6",state='hidden')
                                            sr_Canvas_5.itemconfig("button12",state='normal')
                                            sr_Canvas_5.itemconfig("label67",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[10],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq1 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[17])
                                            bq2 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[18])
                                            bq3 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[19])
                                            bq4 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[20])

                                            bto1 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[21])
                                            bto2 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[22])
                                            bto3 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[23])
                                            bto4 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[20] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry42",state='hidden')
                                            sr_Canvas_5.itemconfig("entry43",state='hidden')
                                            sr_Canvas_5.itemconfig("combo15",state='hidden')
                                            sr_Canvas_5.itemconfig("button13",state='normal')
                                            sr_Canvas_5.itemconfig("label68",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[20],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq5 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[17])
                                            bq6 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[18])
                                            bq7 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[19])
                                            bq8 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[20])

                                            bto5 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[21])
                                            bto6 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[22])
                                            bto7 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[23])
                                            bto8 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[27] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry47",state='hidden')
                                            sr_Canvas_5.itemconfig("entry48",state='hidden')
                                            sr_Canvas_5.itemconfig("combo17",state='hidden')
                                            sr_Canvas_5.itemconfig("button14",state='normal')
                                            sr_Canvas_5.itemconfig("label69",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[27],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq9 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[17])
                                            bq10 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[18])
                                            bq11 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[19])
                                            bq12 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[20])

                                            bto9 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[21])
                                            bto10 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[22])
                                            bto11 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[23])
                                            bto12 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[34] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry52",state='hidden')
                                            sr_Canvas_5.itemconfig("entry53",state='hidden')
                                            sr_Canvas_5.itemconfig("combo19",state='hidden')
                                            sr_Canvas_5.itemconfig("button15",state='normal')
                                            sr_Canvas_5.itemconfig("label70",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[34],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq13 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[17])
                                            bq14 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[18])
                                            bq15 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[19])
                                            bq16 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[20])

                                            bto13 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[21])
                                            bto14 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[22])
                                            bto15 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[23])
                                            bto16 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    cmt_entry8.delete(0,END)
                                    cmt_entry8.insert(0,get_salesrcpt_data[16])
                                    cmt_entry9.delete(0,END)
                                    cmt_entry9.insert(0,get_salesrcpt_data[18])
                                    cmt_entry10.delete(0,END)
                                    cmt_entry10.insert(0,get_salesrcpt_data[19])
                                elif row[1] == "Credit Note":
                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    cn_label1 = Label(sr_Canvas_5,width=18,height=1,text="CREDIT NOTE",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=cn_label1,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))   

                                    cn_label2 = Label(sr_Canvas_5,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=cn_label2,tags=("label2"))

                                    cn_label3 = Label(sr_Canvas_5,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=cn_label3,tags=("label21"))

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                                    cust_val = (comp_data[0],)
                                    fbcursor.execute(cust_sql,cust_val)
                                    cust_data = fbcursor.fetchall()

                                    cust_list = []
                                    if not cust_data:
                                        cust_list.append('Select Customer')
                                    else:
                                        for c in cust_data:
                                            cust_list.append(c[0] + " " + c[1])
                                        cust_list.insert(0,'Select Customer')

                                    def cn_fetch_custDetails(event):
                                        cust_name = cn_custCombo.get()
                                        cust_fname = cust_name.split(" ")[0]
                                        cust_lname = cust_name.split(" ")[1]

                                        cust_sql = "SELECT * FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                        cust_val = (cust_fname,cust_lname,comp_data[0])
                                        fbcursor.execute(cust_sql,cust_val)
                                        cust_data = fbcursor.fetchone()

                                        inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                        inv_val = (cust_name,comp_data[0])
                                        fbcursor.execute(inv_sql,inv_val)
                                        inv_data = fbcursor.fetchall()

                                        if not cust_data:
                                            pass
                                        else:
                                            cn_email.delete(0,END)
                                            cn_email.insert(0,cust_data[9])
                                            cn_baddress.delete("1.0","end-1c")
                                            cn_baddress.insert("1.0",cust_data[2] + " " + cust_data[3] + "\n" + cust_data[4] + "\n" + cust_data[12] + "\n" + cust_data[13] + "\n" + cust_data[14] + "\n" + cust_data[15] + "\n" + cust_data[16])

                                        # if not inv_data:
                                        #     pass
                                        # else:
                                        #     count = 1
                                        #     for i in inv_data:
                                        #         rp_tree.insert(parent='',index='end',iid=i,text='',values=(count,str(i[3]) + " " + i[5],i[6],i[17],i[41],0))

                                    cn_custCombo = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'))
                                    cn_custCombo["values"] = cust_list
                                    cn_custCombo.current(0)
                                    cn_custCombo.bind("<<ComboboxSelected>>",cn_fetch_custDetails)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_custCombo,tags=("combo3"))

                                    cn_label4 = Label(sr_Canvas_5,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label4,tags=('label22'))

                                    cn_email = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_email,tags=("entry13"))

                                    cn_labelcnn = Label(sr_Canvas_5,width=15,height=1,text="Credit Note No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_labelcnn,tags=('label107'))

                                    cn_cnn = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_cnn,tags=("entry112"))

                                    cn_label5 = Label(sr_Canvas_5,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label5,tags=('label23'))

                                    cn_baddress = Text(sr_Canvas_5,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_baddress,tags=("entry14"))

                                    cn_label7 = Label(sr_Canvas_5,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label7,tags=('label25'))

                                    def cn_gst_selection(event):
                                        cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']

                                        ncplace_gstlist = ['Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                        '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']

                                        if not comp_data:
                                            pass
                                        elif comp_data[4] == cn_pofsupply.get():
                                            cnt_entry6["values"] = cplace_gstlist
                                            cnt_entry15["values"] = cplace_gstlist
                                            cnt_entry21["values"] = cplace_gstlist
                                            cnt_entry27["values"] = cplace_gstlist
                                        else:
                                            cnt_entry6["values"] = ncplace_gstlist
                                            cnt_entry15["values"] = ncplace_gstlist
                                            cnt_entry21["values"] = ncplace_gstlist
                                            cnt_entry27["values"] = ncplace_gstlist

                                    cn_pofsupply = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f')
                                    cn_pofsupply_list = ['Kerala','Andaman and Nicobar Islads','Andhra Predhesh','Arunachal Predesh',
                                    'Assam','Bihar','Chandigarh','Chhattisgarh','Dadra and Nagar Haveli','Damn anad Diu','Delhi',
                                    'Goa','Gujarat','Haryana','Himachal Predesh','Jammu and Kashmir','Jharkhand','Karnataka','Ladakh',
                                    'Lakshadweep','Madhya Predesh','Maharashtra','Manipur','Meghalaya','Mizoram','Nagaland','Odisha',
                                    'Puducherry','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura','Uttar Predesh','Uttarakhand',
                                    'West Bengal','Other Territory',]
                                    cn_pofsupply["values"] = cn_pofsupply_list
                                    cn_pofsupply.bind("<<ComboboxSelected>>",cn_gst_selection)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_pofsupply,tags=("entry15"))

                                    cn_label8 = Label(sr_Canvas_5,width=20,height=1,text="Invoice Period",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label8,tags=('label26'))

                                    today = datetime.today()
                                    current_year = today.strftime("%Y")
                                    previous_year = int(current_year) - 1

                                    cn_invperiod = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f')
                                    cn_invperiod['values'] = [f'October {current_year} - December {current_year}',
                                    f'July {current_year} - September {current_year}',
                                    f'April {current_year} - June {current_year}',
                                    f'January {current_year} - March {current_year}',
                                    f'October {previous_year} - December {previous_year}',
                                    f'July {previous_year} - September {previous_year}',
                                    f'April {previous_year} - June {previous_year}',
                                    f'January {previous_year} - March {previous_year}']
                                    cn_invperiod.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_invperiod,tags=("entry16"))

                                    cn_label9 = Label(sr_Canvas_5,width=20,height=1,text="Invoice No.",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label9,tags=('label27'))

                                    inv_sql = "SELECT * FROM app1_invoice WHERE cid_id=%s"
                                    inv_val = (comp_data[0],)
                                    fbcursor.execute(inv_sql,inv_val)
                                    inv_data = fbcursor.fetchall()

                                    inv_list = []
                                    if not inv_data:
                                        pass
                                    else:
                                        for i in inv_data:
                                            inv_list.append(str( i[3]) + " - " + i[1])

                                    inv_list.insert(0,"Select Invoice No")

                                    def cn_fetchInvoDetails(event):
                                        inv_no = (cn_invoiceno.get()).split(' - ')[0]

                                        get_inv_sql = "SELECT * FROM app1_invoice WHERE cid_id=%s AND invoiceno=%s"
                                        get_inv_val = (comp_data[0],inv_no)
                                        fbcursor.execute(get_inv_sql,get_inv_val)
                                        get_inv_data = fbcursor.fetchone()

                                        try:
                                            get_bundle1_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_bundle1_val = (get_inv_data[9],comp_data[0])
                                            fbcursor.execute(get_bundle1_sql,get_bundle1_val)
                                            get_bundle1_data = fbcursor.fetchone()
                                        except:
                                            pass
                                        try:
                                            get_bundle2_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_bundle2_val = (get_inv_data[18],comp_data[0])
                                            fbcursor.execute(get_bundle2_sql,get_bundle2_val)
                                            get_bundle2_data = fbcursor.fetchone()
                                        except:
                                            pass
                                        try:
                                            get_bundle3_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_bundle3_val = (get_inv_data[25],comp_data[0])
                                            fbcursor.execute(get_bundle3_sql,get_bundle3_val)
                                            get_bundle3_data = fbcursor.fetchone()
                                        except:
                                            pass
                                        try:
                                            get_bundle4_sql = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_bundle4_val = (get_inv_data[32],comp_data[0])
                                            fbcursor.execute(get_bundle4_sql,get_bundle4_val)
                                            get_bundle4_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        if not get_bundle1_data and not get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry71",state='normal')
                                                sr_Canvas_5.itemconfig("entry72",state='normal')
                                                sr_Canvas_5.itemconfig("combo27",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and not get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and get_bundle2_data and not get_bundle3_data and not get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry71",state='normal')
                                                sr_Canvas_5.itemconfig("entry72",state='normal')
                                                sr_Canvas_5.itemconfig("combo27",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry71",state='normal')
                                                sr_Canvas_5.itemconfig("entry72",state='normal')
                                                sr_Canvas_5.itemconfig("combo27",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and not get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry71",state='normal')
                                                sr_Canvas_5.itemconfig("entry72",state='normal')
                                                sr_Canvas_5.itemconfig("combo27",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and not get_bundle2_data and get_bundle3_data and not get_bundle4_data:
                                                                        
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry71",state='normal')
                                                sr_Canvas_5.itemconfig("entry72",state='normal')
                                                sr_Canvas_5.itemconfig("combo27",state='normal')
                                                sr_Canvas_5.itemconfig("button15",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])
                                                    cnt_entry25.delete(0,END)
                                                    cnt_entry25.insert(0,get_inv_data[36])
                                                    cnt_entry26.delete(0,END)
                                                    cnt_entry26.insert(0,get_inv_data[37])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% GST({get_inv_data[38]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry27.delete(0,END)
                                                        cnt_entry27.insert(0,f'{get_inv_data[38]}% IGST({get_inv_data[38]}%)')
                                                    else:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and not get_bundle2_data and get_bundle3_data and get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and not get_bundle2_data and get_bundle3_data and get_bundle4_data:                                
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry67",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry68",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo25",state='hidden')
                                                        sr_Canvas_5.itemconfig("button14",state='normal')
                                                        sr_Canvas_5.itemconfig("label84",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif not get_bundle1_data and not get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry59",state='normal')
                                                sr_Canvas_5.itemconfig("entry60",state='normal')
                                                sr_Canvas_5.itemconfig("combo21",state='normal')
                                                sr_Canvas_5.itemconfig("button12",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])
                                                    cnt_entry4.delete(0,END)
                                                    cnt_entry4.insert(0,get_inv_data[13])
                                                    cnt_entry5.delete(0,END)
                                                    cnt_entry5.insert(0,get_inv_data[14])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% GST({get_inv_data[15]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry6.delete(0,END)
                                                        cnt_entry6.insert(0,f'{get_inv_data[15]}% IGST({get_inv_data[15]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and not get_bundle2_data and not get_bundle3_data and get_bundle4_data:                                
                                            try:
                                                sr_Canvas_5.itemconfig("entry63",state='normal')
                                                sr_Canvas_5.itemconfig("entry64",state='normal')
                                                sr_Canvas_5.itemconfig("combo23",state='normal')
                                                sr_Canvas_5.itemconfig("button13",state='hidden')
                                            except:
                                                pass

                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])
                                                    cnt_entry13.delete(0,END)
                                                    cnt_entry13.insert(0,get_inv_data[22])
                                                    cnt_entry14.delete(0,END)
                                                    cnt_entry14.insert(0,get_inv_data[23])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% GST({get_inv_data[24]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry15.delete(0,END)
                                                        cnt_entry15.insert(0,f'{get_inv_data[24]}% IGST({get_inv_data[24]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        elif get_bundle1_data and get_bundle2_data and not get_bundle3_data and get_bundle4_data:
                                            try:
                                                sr_Canvas_5.itemconfig("entry67",state='normal')
                                                sr_Canvas_5.itemconfig("entry68",state='normal')
                                                sr_Canvas_5.itemconfig("combo25",state='normal')
                                                sr_Canvas_5.itemconfig("button14",state='hidden')
                                            except:
                                                pass
                                            
                                            try:
                                                if get_inv_data[9] == '' or get_inv_data[9] is None:
                                                    pass
                                                else:
                                                    cnt_entry1.delete(0,END)
                                                    cnt_entry1.insert(0,get_inv_data[9])
                                                    cnt_entry2.delete(0,END)
                                                    cnt_entry2.insert(0,get_inv_data[11])
                                                    cnt_entry3.delete(0,END)
                                                    cnt_entry3.insert(0,get_inv_data[12])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry59",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry60",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo21",state='hidden')
                                                        sr_Canvas_5.itemconfig("button12",state='normal')
                                                        sr_Canvas_5.itemconfig("label82",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[18] == '' or get_inv_data[18] is None:
                                                    pass
                                                else:
                                                    cnt_entry10.delete(0,END)
                                                    cnt_entry10.insert(0,get_inv_data[18])
                                                    cnt_entry11.delete(0,END)
                                                    cnt_entry11.insert(0,get_inv_data[20])
                                                    cnt_entry12.delete(0,END)
                                                    cnt_entry12.insert(0,get_inv_data[21])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry63",state='hidden')
                                                        sr_Canvas_5.itemconfig("entry64",state='hidden')
                                                        sr_Canvas_5.itemconfig("combo23",state='hidden')
                                                        sr_Canvas_5.itemconfig("button13",state='normal')
                                                        sr_Canvas_5.itemconfig("label83",state='hidden')
                                                    except:
                                                        pass
                                                
                                                if get_inv_data[25] == '' or get_inv_data[25] is None:
                                                    pass
                                                else:
                                                    cnt_entry16.delete(0,END)
                                                    cnt_entry16.insert(0,get_inv_data[25])
                                                    cnt_entry17.delete(0,END)
                                                    cnt_entry17.insert(0,get_inv_data[27])
                                                    cnt_entry18.delete(0,END)
                                                    cnt_entry18.insert(0,get_inv_data[28])
                                                    cnt_entry19.delete(0,END)
                                                    cnt_entry19.insert(0,get_inv_data[29])
                                                    cnt_entry20.delete(0,END)
                                                    cnt_entry20.insert(0,get_inv_data[30])
                                                    if comp_data[4] == cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% GST({get_inv_data[31]}%)')
                                                    elif comp_data[4] != cn_pofsupply.get():
                                                        cnt_entry21.delete(0,END)
                                                        cnt_entry21.insert(0,f'{get_inv_data[31]}% IGST({get_inv_data[31]}%)')
                                                    else:
                                                        pass
                                                
                                                if get_inv_data[32] == '' or get_inv_data[32] is None:
                                                    pass
                                                else:
                                                    cnt_entry22.delete(0,END)
                                                    cnt_entry22.insert(0,get_inv_data[32])
                                                    cnt_entry23.delete(0,END)
                                                    cnt_entry23.insert(0,get_inv_data[34])
                                                    cnt_entry24.delete(0,END)
                                                    cnt_entry24.insert(0,get_inv_data[35])

                                                    try:
                                                        sr_Canvas_5.itemconfig("entry71",state='normal')
                                                        sr_Canvas_5.itemconfig("entry72",state='normal')
                                                        sr_Canvas_5.itemconfig("combo27",state='normal')
                                                        sr_Canvas_5.itemconfig("button15",state='hidden')
                                                        sr_Canvas_5.itemconfig("label85",state='hidden')
                                                    except:
                                                        pass
                                            except:
                                                pass
                                        else:
                                            pass

                                        cnt_entry7.delete(0,END)
                                        cnt_entry7.insert(0,get_inv_data[16])
                                        cnt_entry8.delete(0,END)
                                        cnt_entry8.insert(0,get_inv_data[40])
                                        cnt_entry9.delete(0,END)
                                        cnt_entry9.insert(0,get_inv_data[17])
                                        

                                    cn_invoiceno = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'),background='#2f516f',foreground='black')
                                    cn_invoiceno['values'] = inv_list
                                    cn_invoiceno.current(0)
                                    cn_invoiceno.bind("<<ComboboxSelected>>",cn_fetchInvoDetails)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cn_invoiceno,tags=("entry17"))

                                    cn_label11 = Label(sr_Canvas_5,width=20,height=1,text="AMOUNT",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label11,tags=('label29'))

                                    cn_label12 = Label(sr_Canvas_5,width=20,height=1,text="0.00",font=('arial 14'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label12,tags=('label30'))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line59"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line60"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line61"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line62"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line63"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line64"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line65"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line66"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line67"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line68"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line69"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line70"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line71"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line72"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line73"))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line74"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line75"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line76"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line77"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line78"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line79"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line80"))

                                    cn_label13 = Label(sr_Canvas_5,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label13,tags=('label71'))

                                    cn_label14 = Label(sr_Canvas_5,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label14,tags=('label72'))

                                    cn_label28 = Label(sr_Canvas_5,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label28,tags=('label73'))

                                    cn_label29 = Label(sr_Canvas_5,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label29,tags=('label74'))

                                    cn_label30 = Label(sr_Canvas_5,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label30,tags=('label75'))

                                    cn_label18 = Label(sr_Canvas_5,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label18,tags=('label76'))

                                    cn_label20 = Label(sr_Canvas_5,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label20,tags=('label77'))

                                    cn_label21 = Label(sr_Canvas_5,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label21,tags=('label78'))

                                    cn_label22 = Label(sr_Canvas_5,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label22,tags=('label79'))

                                    cn_label23 = Label(sr_Canvas_5,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label23,tags=('label80'))

                                    cn_label24 = Label(sr_Canvas_5,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label24,tags=('label81'))

                                    get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                                    get_inventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_inventory_sql,get_inventory_val)
                                    get_inventory_data = fbcursor.fetchall()

                                    get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                                    get_noninventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                                    get_noninventory_data = fbcursor.fetchall()

                                    get_service_sql = "SELECT * FROM app1_service WHERE cid_id=%s" 
                                    get_service_val = (comp_data[0],)                      
                                    fbcursor.execute(get_service_sql,get_service_val)
                                    get_service_data = fbcursor.fetchall()

                                    get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                                    get_bundle_val = (comp_data[0],)                      
                                    fbcursor.execute(get_bundle_sql,get_bundle_val)
                                    get_bundle_data = fbcursor.fetchall()

                                    cn_product_list = []

                                    if not get_inventory_data:
                                        pass
                                    else:
                                        for i in get_inventory_data:
                                            cn_product_list.append(i[2])

                                    if not get_noninventory_data:
                                        pass
                                    else:
                                        for n in get_noninventory_data:
                                            cn_product_list.append(n[2])

                                    if not get_bundle_data:
                                        pass
                                    else:
                                        for b in get_bundle_data:
                                            cn_product_list.append(b[2])


                                    def cn_view_bundleitems(b):
                                        sr_Frame_1.grid_forget()
                                        sr_Frame_4 = Frame(tab3_1,)
                                        sr_Frame_4.grid(row=0,column=0,sticky='nsew')

                                        def responsive_widgets3(event):
                                            dwidth = event.width
                                            dheight = event.height
                                            dcanvas = event.widget

                                            r1 = 25
                                            x1 = dwidth/63
                                            x2 = dwidth/1.021
                                            y1 = dheight/14 
                                            y2 = dheight/3.505

                                            dcanvas.coords("poly1",x1 + r1,y1,
                                            x1 + r1,y1,
                                            x2 - r1,y1,
                                            x2 - r1,y1,     
                                            x2,y1,     
                                            #--------------------
                                            x2,y1 + r1,     
                                            x2,y1 + r1,     
                                            x2,y2 - r1,     
                                            x2,y2 - r1,     
                                            x2,y2,
                                            #--------------------
                                            x2 - r1,y2,     
                                            x2 - r1,y2,     
                                            x1 + r1,y2,
                                            x1 + r1,y2,
                                            x1,y2,
                                            #--------------------
                                            x1,y2 - r1,
                                            x1,y2 - r1,
                                            x1,y1 + r1,
                                            x1,y1 + r1,
                                            x1,y1,
                                            )

                                            dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                            
                                            r2 = 25
                                            x11 = dwidth/63
                                            x21 = dwidth/1.021
                                            y11 = dheight/2.8
                                            y21 = dheight/0.9


                                            dcanvas.coords("poly2",x11 + r2,y11,
                                            x11 + r2,y11,
                                            x21 - r2,y11,
                                            x21 - r2,y11,     
                                            x21,y11,     
                                            #--------------------
                                            x21,y11 + r2,     
                                            x21,y11 + r2,     
                                            x21,y21 - r2,     
                                            x21,y21 - r2,     
                                            x21,y21,
                                            #--------------------
                                            x21 - r2,y21,     
                                            x21 - r2,y21,     
                                            x11 + r2,y21,
                                            x11 + r2,y21,
                                            x11,y21,
                                            #--------------------
                                            x11,y21 - r2,
                                            x11,y21 - r2,
                                            x11,y11 + r2,
                                            x11,y11 + r2,
                                            x11,y11,
                                            )

                                            dcanvas.coords("label1",dwidth/2,dheight/8.24)

                                            dcanvas.coords("line1",dwidth/13,dheight/2.2,dwidth/1.09,dheight/2.2)
                                            dcanvas.coords("line2",dwidth/13,dheight/1.65,dwidth/1.09,dheight/1.65)
                                            dcanvas.coords("line3",dwidth/13,dheight/1.32,dwidth/1.09,dheight/1.32)
                                            dcanvas.coords("line4",dwidth/13,dheight/1.1,dwidth/1.09,dheight/1.1)
                                            dcanvas.coords("line5",dwidth/13,dheight/0.945,dwidth/1.09,dheight/0.945)
                                            dcanvas.coords("line6",dwidth/13,dheight/2.2,dwidth/13,dheight/0.945)
                                            dcanvas.coords("line7",dwidth/1.09,dheight/2.2,dwidth/1.09,dheight/0.945)
                                            dcanvas.coords("line8",dwidth/5.35,dheight/2.2,dwidth/5.35,dheight/0.945)
                                            dcanvas.coords("line9",dwidth/3.5,dheight/2.2,dwidth/3.5,dheight/0.945)
                                            dcanvas.coords("line10",dwidth/2.28,dheight/2.2,dwidth/2.28,dheight/0.945)
                                            dcanvas.coords("line11",dwidth/1.84,dheight/2.2,dwidth/1.84,dheight/0.945)
                                            dcanvas.coords("line12",dwidth/1.49,dheight/2.2,dwidth/1.49,dheight/0.945)
                                            dcanvas.coords("line13",dwidth/1.25,dheight/2.2,dwidth/1.25,dheight/0.945)

                                            dcanvas.coords("entry1",dwidth/11.5,dheight/1.99)
                                            dcanvas.coords("entry2",dwidth/5.1,dheight/1.99)
                                            dcanvas.coords("entry3",dwidth/3.38,dheight/1.99)
                                            dcanvas.coords("entry4",dwidth/2.249,dheight/1.99)
                                            dcanvas.coords("entry5",dwidth/1.81,dheight/1.99)
                                            dcanvas.coords("entry6",dwidth/1.465,dheight/1.99)

                                            dcanvas.coords("entry7",dwidth/11.5,dheight/1.525)
                                            dcanvas.coords("entry8",dwidth/5.1,dheight/1.525)
                                            dcanvas.coords("entry9",dwidth/3.38,dheight/1.525)
                                            dcanvas.coords("entry10",dwidth/2.249,dheight/1.525)
                                            dcanvas.coords("entry11",dwidth/1.81,dheight/1.525)
                                            dcanvas.coords("entry12",dwidth/1.465,dheight/1.525)

                                            dcanvas.coords("entry13",dwidth/11.5,dheight/1.24)
                                            dcanvas.coords("entry14",dwidth/5.1,dheight/1.24)
                                            dcanvas.coords("entry15",dwidth/3.38,dheight/1.24)
                                            dcanvas.coords("entry16",dwidth/2.249,dheight/1.24)
                                            dcanvas.coords("entry17",dwidth/1.81,dheight/1.24)
                                            dcanvas.coords("entry18",dwidth/1.465,dheight/1.24)

                                            dcanvas.coords("entry19",dwidth/11.5,dheight/1.045)
                                            dcanvas.coords("entry20",dwidth/5.1,dheight/1.045)
                                            dcanvas.coords("entry21",dwidth/3.38,dheight/1.045)
                                            dcanvas.coords("entry22",dwidth/2.249,dheight/1.045)
                                            dcanvas.coords("entry23",dwidth/1.81,dheight/1.045)
                                            dcanvas.coords("entry24",dwidth/1.465,dheight/1.045)

                                            dcanvas.coords("combo1",dwidth/1.165,dheight/1.88)
                                            dcanvas.coords("combo2",dwidth/1.165,dheight/1.46)
                                            dcanvas.coords("combo3",dwidth/1.165,dheight/1.2)
                                            dcanvas.coords("combo4",dwidth/1.165,dheight/1.019)

                                            dcanvas.coords("button2",dwidth/27,dheight/3)
                                        
                                        sr_Canvas_4 = Canvas(sr_Frame_4,bg='#2f516f',scrollregion=(0,0,700,1200))

                                        sr_Frame_4.grid_columnconfigure(0,weight=1)
                                        sr_Frame_4.grid_rowconfigure(0,weight=1)

                                        sr_Scroll_3 = Scrollbar(sr_Frame_4,orient=VERTICAL)
                                        sr_Scroll_3.grid(row=0,column=1,sticky='ns')
                                        sr_Scroll_3.config(command=sr_Canvas_4.yview)
                                        sr_Canvas_4.bind("<Configure>", responsive_widgets3)
                                        sr_Canvas_4.config(yscrollcommand=sr_Scroll_3.set)
                                        sr_Canvas_4.grid(row=0,column=0,sticky='nsew')

                                        sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                        sr_Canvas_4.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                        sr_Canvas_4.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line1"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line2"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line3"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line4"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line5"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line6"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line7"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line8"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line9"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line10"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line11"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line12"))
                                        sr_Canvas_4.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line13"))

                                        def bt_goBack():
                                            sr_Frame_4.grid_forget()
                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        back_btn = Button(sr_Canvas_4,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:bt_goBack())
                                        sr_Canvas_4.create_window(0,0,window=back_btn,tags=("button2"))

                                        global bt1_entry1,bt1_entry4,bt1_entry6,bt1_entry7,bt1_entry8,bt1_entry11,bt1_entry13,bt1_entry14,bt1_entry15,bt1_entry18,bt1_entry20,bt1_entry21,bt1_entry22,bt1_entry25,bt1_entry27,bt1_entry28
                                        global bt2_entry1,bt2_entry4,bt2_entry6,bt2_entry7,bt2_entry8,bt2_entry11,bt2_entry13,bt2_entry14,bt2_entry15,bt2_entry18,bt2_entry20,bt2_entry21,bt2_entry22,bt2_entry25,bt2_entry27,bt2_entry28
                                        global bt3_entry1,bt3_entry4,bt3_entry6,bt3_entry7,bt3_entry8,bt3_entry11,bt3_entry13,bt3_entry14,bt3_entry15,bt3_entry18,bt3_entry20,bt3_entry21,bt3_entry22,bt3_entry25,bt3_entry27,bt3_entry28
                                        global bt4_entry1,bt4_entry4,bt4_entry6,bt4_entry7,bt4_entry8,bt4_entry11,bt4_entry13,bt4_entry14,bt4_entry15,bt4_entry18,bt4_entry20,bt4_entry21,bt4_entry22,bt4_entry25,bt4_entry27,bt4_entry28

                                        if b == 1:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry1.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt1_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry1,tags=("entry1"))

                                            bt1_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry2,tags=("entry2"))

                                            bt1_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry3,tags=("entry3"))

                                            bt1_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry4,tags=("entry4"))

                                            bt1_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry5,tags=("entry5"))

                                            bt1_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry6,tags=("entry6"))

                                            bt1_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry7,tags=("combo1"))

                                            bt1_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry8,tags=("entry7"))

                                            bt1_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry9,tags=("entry8"))

                                            bt1_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry10,tags=("entry9"))

                                            bt1_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry11,tags=("entry10"))

                                            bt1_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry12,tags=("entry11"))

                                            bt1_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry13,tags=("entry12"))

                                            bt1_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry14,tags=("combo2"))

                                            bt1_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry15,tags=("entry13"))

                                            bt1_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry16,tags=("entry14"))

                                            bt1_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry17,tags=("entry15"))

                                            bt1_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry18,tags=("entry16"))

                                            bt1_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry19,tags=("entry17"))

                                            bt1_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry20,tags=("entry18"))

                                            bt1_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry21,tags=("combo3"))

                                            bt1_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry22,tags=("entry19"))

                                            bt1_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry23,tags=("entry20"))

                                            bt1_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry24,tags=("entry21"))

                                            bt1_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry25,tags=("entry22"))

                                            bt1_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry26,tags=("entry23"))

                                            bt1_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt1_entry27,tags=("entry24"))

                                            bt1_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt1_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt1_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt1_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val1 = (cnt_entry1.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql1,get_bundle_val1)
                                                get_bundle_data1 = fbcursor.fetchone()
                                            except:
                                                pass 
                                            try:
                                                bt1_entry1.delete(0,END)
                                                bt1_entry1.insert(0,get_bundle_data1[5])
                                                bt1_entry2.delete(0,END)
                                                bt1_entry2.insert(0,get_bundle_data1[9])
                                                bt1_entry3.delete(0,END)
                                                bt1_entry3.insert(0,get_bundle_data1[13])
                                                bt1_entry4.delete(0,END)
                                                bt1_entry5.delete(0,END)
                                                bt1_entry6.delete(0,END)
                                                if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                                    bt1_entry4.insert(0,0)
                                                else:
                                                    bt1_entry4.insert(0,get_bundle_data1[17])
                                                if get_bundle_data1[21] == '' or get_bundle_data1[21] is None or get_bundle_data1[21] == NULL:
                                                    bt1_entry5.insert(0,0)
                                                else:
                                                    bt1_entry5.insert(0,get_bundle_data1[21])
                                                if get_bundle_data1[25] == '' or get_bundle_data1[25] is None or get_bundle_data1[25] == NULL:
                                                    bt1_entry6.insert(0,0)
                                                else:
                                                    bt1_entry6.insert(0,get_bundle_data1[25])
                                                
                                                bt1_entry7.delete(0,END)
                                                bt1_entry8.delete(0,END)
                                                bt1_entry8.insert(0,get_bundle_data1[6])
                                                bt1_entry9.delete(0,END)
                                                bt1_entry9.insert(0,get_bundle_data1[10])
                                                bt1_entry10.delete(0,END)
                                                bt1_entry10.insert(0,get_bundle_data1[14])
                                                bt1_entry11.delete(0,END)
                                                bt1_entry12.delete(0,END)
                                                bt1_entry13.delete(0,END)
                                                if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[22] == NULL:
                                                    bt1_entry11.insert(0,0)
                                                else:
                                                    bt1_entry11.insert(0,get_bundle_data1[18])
                                                if get_bundle_data1[22] == '' or get_bundle_data1[22] is None or get_bundle_data1[22] == NULL:
                                                    bt1_entry12.insert(0,0)
                                                else:
                                                    bt1_entry12.insert(0,get_bundle_data1[22])
                                                if get_bundle_data1[26] == '' or get_bundle_data1[26] is None or get_bundle_data1[26] == NULL:
                                                    bt1_entry13.insert(0,0)
                                                else:
                                                    bt1_entry13.insert(0,get_bundle_data1[26])

                                                bt1_entry14.delete(0,END)
                                                bt1_entry15.delete(0,END)
                                                bt1_entry15.insert(0,get_bundle_data1[7])
                                                bt1_entry16.delete(0,END)
                                                bt1_entry16.insert(0,get_bundle_data1[11])
                                                bt1_entry17.delete(0,END)
                                                bt1_entry17.insert(0,get_bundle_data1[15])
                                                bt1_entry18.delete(0,END)
                                                bt1_entry19.delete(0,END)
                                                bt1_entry20.delete(0,END)
                                                if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                                    bt1_entry18.insert(0,0)
                                                else:
                                                    bt1_entry18.insert(0,get_bundle_data1[19])
                                                if get_bundle_data1[23] == '' or get_bundle_data1[23] is None or get_bundle_data1[23] == NULL:
                                                    bt1_entry19.insert(0,0)
                                                else:
                                                    bt1_entry19.insert(0,get_bundle_data1[23])
                                                if get_bundle_data1[27] == '' or get_bundle_data1[27] is None or get_bundle_data1[27] == NULL:
                                                    bt1_entry20.insert(0,0)
                                                else:
                                                    bt1_entry20.insert(0,get_bundle_data1[27])
                                                
                                                bt1_entry21.delete(0,END)
                                                bt1_entry22.delete(0,END)
                                                bt1_entry22.insert(0,get_bundle_data1[8])
                                                bt1_entry23.delete(0,END)
                                                bt1_entry23.insert(0,get_bundle_data1[12])
                                                bt1_entry24.delete(0,END)
                                                bt1_entry24.insert(0,get_bundle_data1[16])
                                                bt1_entry25.delete(0,END)
                                                bt1_entry26.delete(0,END)
                                                bt1_entry27.delete(0,END)
                                                bt1_entry28.delete(0,END)
                                                if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                                    bt1_entry25.insert(0,0)
                                                else:
                                                    bt1_entry25.insert(0,get_bundle_data1[20])
                                                if get_bundle_data1[24] == '' or get_bundle_data1[24] is None or get_bundle_data1[24] == NULL:
                                                    bt1_entry26.insert(0,0)
                                                else:
                                                    bt1_entry26.insert(0,get_bundle_data1[24])
                                                if get_bundle_data1[28] == '' or get_bundle_data1[28] is None or get_bundle_data1[28] == NULL:
                                                    bt1_entry27.insert(0,0)
                                                else:
                                                    bt1_entry27.insert(0,get_bundle_data1[28])
                                                
                                                if comp_data[4] == cn_pofsupply.get():
                                                    if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                        bt1_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry7.insert(0,f'{get_bundle_data1[29]}% GST({get_bundle_data1[29]}%)')
                                                    if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                        bt1_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry14.insert(0,f'{get_bundle_data1[30]}% GST({get_bundle_data1[30]}%)')
                                                    if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                        bt1_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry21.insert(0,f'{get_bundle_data1[31]}% GST({get_bundle_data1[31]}%)')
                                                    if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                        bt1_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt1_entry28.insert(0,f'{get_bundle_data1[32]}% GST({get_bundle_data1[32]}%)')
                                                elif comp_data[4] != cn_pofsupply.get():
                                                    if get_bundle_data1[29] == "" or get_bundle_data1[29] is None or get_bundle_data1[29] == NULL:
                                                        bt1_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry7.insert(0,f'{get_bundle_data1[29]}% IGST({get_bundle_data1[29]}%)')
                                                    if get_bundle_data1[30] == "" or get_bundle_data1[30] is None or get_bundle_data1[30] == NULL:
                                                        bt1_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry14.insert(0,f'{get_bundle_data1[30]}% IGST({get_bundle_data1[30]}%)')
                                                    if get_bundle_data1[31] == "" or get_bundle_data1[31] is None or get_bundle_data1[31] == NULL:
                                                        bt1_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry21.insert(0,f'{get_bundle_data1[31]}% IGST({get_bundle_data1[31]}%)')
                                                    if get_bundle_data1[32] == "" or get_bundle_data1[32] is None or get_bundle_data1[32] == NULL:
                                                        bt1_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt1_entry28.insert(0,f'{get_bundle_data1[32]}% IGST({get_bundle_data1[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data1[17] == '' or get_bundle_data1[17] is None or get_bundle_data1[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data1[17]) * int(cnt_entry3.get())
                                                if get_bundle_data1[18] == '' or get_bundle_data1[18] is None or get_bundle_data1[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data1[18]) * int(cnt_entry3.get())
                                                if get_bundle_data1[19] == '' or get_bundle_data1[19] is None or get_bundle_data1[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data1[19]) * int(cnt_entry3.get())
                                                if get_bundle_data1[20] == '' or get_bundle_data1[20] is None or get_bundle_data1[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data1[20]) * int(cnt_entry3.get())
                                                
                                            except:
                                                pass

                                            
                                            bt1_entry4.delete(0,END)
                                            bt1_entry4.insert(0,qty1)
                                            bt1_entry11.delete(0,END)
                                            bt1_entry11.insert(0,qty2)
                                            bt1_entry18.delete(0,END)
                                            bt1_entry18.insert(0,qty3)
                                            bt1_entry25.delete(0,END)
                                            bt1_entry25.insert(0,qty4)

                                            tot1 = int(bt1_entry4.get()) * int(float(bt1_entry5.get()))
                                            tot2 = int(bt1_entry11.get()) * int(float(bt1_entry12.get()))
                                            tot3 = int(bt1_entry18.get()) * int(float(bt1_entry19.get()))
                                            tot4 = int(bt1_entry25.get()) * int(float(bt1_entry26.get()))

                                            bt1_entry6.delete(0,END)
                                            bt1_entry6.insert(0,tot1)
                                            bt1_entry13.delete(0,END)
                                            bt1_entry13.insert(0,tot2)
                                            bt1_entry20.delete(0,END)
                                            bt1_entry20.insert(0,tot3)
                                            bt1_entry27.delete(0,END)
                                            bt1_entry27.insert(0,tot4)
                                        elif b == 2:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry10.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt2_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry1,tags=("entry1"))

                                            bt2_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry2,tags=("entry2"))

                                            bt2_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry3,tags=("entry3"))

                                            bt2_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry4,tags=("entry4"))

                                            bt2_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry5,tags=("entry5"))

                                            bt2_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry6,tags=("entry6"))

                                            bt2_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry7,tags=("combo1"))

                                            bt2_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry8,tags=("entry7"))

                                            bt2_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry9,tags=("entry8"))

                                            bt2_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry10,tags=("entry9"))

                                            bt2_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry11,tags=("entry10"))

                                            bt2_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry12,tags=("entry11"))

                                            bt2_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry13,tags=("entry12"))

                                            bt2_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry14,tags=("combo2"))

                                            bt2_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry15,tags=("entry13"))

                                            bt2_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry16,tags=("entry14"))

                                            bt2_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry17,tags=("entry15"))

                                            bt2_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry18,tags=("entry16"))

                                            bt2_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry19,tags=("entry17"))

                                            bt2_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry20,tags=("entry18"))

                                            bt2_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry21,tags=("combo3"))

                                            bt2_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry22,tags=("entry19"))

                                            bt2_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry23,tags=("entry20"))

                                            bt2_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry24,tags=("entry21"))

                                            bt2_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry25,tags=("entry22"))

                                            bt2_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry26,tags=("entry23"))

                                            bt2_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt2_entry27,tags=("entry24"))

                                            bt2_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt2_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt2_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt2_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val2 = (cnt_entry10.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql2,get_bundle_val2)
                                                get_bundle_data2 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt2_entry1.delete(0,END)
                                                bt2_entry1.insert(0,get_bundle_data2[5])
                                                bt2_entry2.delete(0,END)
                                                bt2_entry2.insert(0,get_bundle_data2[9])
                                                bt2_entry3.delete(0,END)
                                                bt2_entry3.insert(0,get_bundle_data2[13])
                                                bt2_entry4.delete(0,END)
                                                bt2_entry5.delete(0,END)
                                                bt2_entry6.delete(0,END)
                                                if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                                    bt2_entry4.insert(0,0)
                                                else:
                                                    bt2_entry4.insert(0,get_bundle_data2[17])
                                                if get_bundle_data2[21] == '' or get_bundle_data2[21] is None or get_bundle_data2[21] == NULL:
                                                    bt2_entry5.insert(0,0)
                                                else:
                                                    bt2_entry5.insert(0,get_bundle_data2[21])
                                                if get_bundle_data2[25] == '' or get_bundle_data2[25] is None or get_bundle_data2[25] == NULL:
                                                    bt2_entry6.insert(0,0)
                                                else:
                                                    bt2_entry6.insert(0,get_bundle_data2[25])

                                                bt2_entry7.delete(0,END)
                                                bt2_entry8.delete(0,END)
                                                bt2_entry8.insert(0,get_bundle_data2[6])
                                                bt2_entry9.delete(0,END)
                                                bt2_entry9.insert(0,get_bundle_data2[10])
                                                bt2_entry10.delete(0,END)
                                                bt2_entry10.insert(0,get_bundle_data2[14])
                                                bt2_entry11.delete(0,END)
                                                bt2_entry12.delete(0,END)
                                                bt2_entry13.delete(0,END)
                                                if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[22] == NULL:
                                                    bt2_entry11.insert(0,0)
                                                else:
                                                    bt2_entry11.insert(0,get_bundle_data2[18])
                                                if get_bundle_data2[22] == '' or get_bundle_data2[22] is None or get_bundle_data2[22] == NULL:
                                                    bt2_entry12.insert(0,0)
                                                else:
                                                    bt2_entry12.insert(0,get_bundle_data2[22])
                                                if get_bundle_data2[26] == '' or get_bundle_data2[26] is None or get_bundle_data2[26] == NULL:
                                                    bt2_entry13.insert(0,0)
                                                else:
                                                    bt2_entry13.insert(0,get_bundle_data2[26])

                                                bt2_entry14.delete(0,END)
                                                bt2_entry15.delete(0,END)
                                                bt2_entry15.insert(0,get_bundle_data2[7])
                                                bt2_entry16.delete(0,END)
                                                bt2_entry16.insert(0,get_bundle_data2[11])
                                                bt2_entry17.delete(0,END)
                                                bt2_entry17.insert(0,get_bundle_data2[15])
                                                bt2_entry18.delete(0,END)
                                                bt2_entry19.delete(0,END)
                                                bt2_entry20.delete(0,END)
                                                if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                                    bt2_entry18.insert(0,0)
                                                else:
                                                    bt2_entry18.insert(0,get_bundle_data2[19])
                                                if get_bundle_data2[23] == '' or get_bundle_data2[23] is None or get_bundle_data2[23] == NULL:
                                                    bt2_entry19.insert(0,0)
                                                else:
                                                    bt2_entry19.insert(0,get_bundle_data2[23])
                                                if get_bundle_data2[27] == '' or get_bundle_data2[27] is None or get_bundle_data2[27] == NULL:
                                                    bt2_entry20.insert(0,0)
                                                else:
                                                    bt2_entry20.insert(0,get_bundle_data2[27])
                                                bt2_entry21.delete(0,END)
                                                bt2_entry22.delete(0,END)
                                                bt2_entry22.insert(0,get_bundle_data2[8])
                                                bt2_entry23.delete(0,END)
                                                bt2_entry23.insert(0,get_bundle_data2[12])
                                                bt2_entry24.delete(0,END)
                                                bt2_entry24.insert(0,get_bundle_data2[16])
                                                bt2_entry25.delete(0,END)
                                                bt2_entry26.delete(0,END)
                                                bt2_entry27.delete(0,END)
                                                bt2_entry28.delete(0,END)
                                                if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                                    bt2_entry25.insert(0,0)
                                                else:
                                                    bt2_entry25.insert(0,get_bundle_data2[20])
                                                if get_bundle_data2[24] == '' or get_bundle_data2[24] is None or get_bundle_data2[24] == NULL:
                                                    bt2_entry26.insert(0,0)
                                                else:
                                                    bt2_entry26.insert(0,get_bundle_data2[24])
                                                if get_bundle_data2[28] == '' or get_bundle_data2[28] is None or get_bundle_data2[28] == NULL:
                                                    bt2_entry27.insert(0,0)
                                                else:
                                                    bt2_entry27.insert(0,get_bundle_data2[28])

                                                if comp_data[4] == cn_pofsupply.get():
                                                    if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                        bt2_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry7.insert(0,f'{get_bundle_data2[29]}% GST({get_bundle_data2[29]}%)')
                                                    if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                        bt2_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry14.insert(0,f'{get_bundle_data2[30]}% GST({get_bundle_data2[30]}%)')
                                                    if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                        bt2_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry21.insert(0,f'{get_bundle_data2[31]}% GST({get_bundle_data2[31]}%)')
                                                    if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                        bt2_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt2_entry28.insert(0,f'{get_bundle_data2[32]}% GST({get_bundle_data2[32]}%)')
                                                elif comp_data[4] != cn_pofsupply.get():
                                                    if get_bundle_data2[29] == "" or get_bundle_data2[29] is None or get_bundle_data2[29] == NULL:
                                                        bt2_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry7.insert(0,f'{get_bundle_data2[29]}% IGST({get_bundle_data2[29]}%)')
                                                    if get_bundle_data2[30] == "" or get_bundle_data2[30] is None or get_bundle_data2[30] == NULL:
                                                        bt2_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry14.insert(0,f'{get_bundle_data2[30]}% IGST({get_bundle_data2[30]}%)')
                                                    if get_bundle_data2[31] == "" or get_bundle_data2[31] is None or get_bundle_data2[31] == NULL:
                                                        bt2_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry21.insert(0,f'{get_bundle_data2[31]}% IGST({get_bundle_data2[31]}%)')
                                                    if get_bundle_data2[32] == "" or get_bundle_data2[32] is None or get_bundle_data2[32] == NULL:
                                                        bt2_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt2_entry28.insert(0,f'{get_bundle_data2[32]}% IGST({get_bundle_data2[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data2[17] == '' or get_bundle_data2[17] is None or get_bundle_data2[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data2[17]) * int(cnt_entry12.get())
                                                if get_bundle_data2[18] == '' or get_bundle_data2[18] is None or get_bundle_data2[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data2[18]) * int(cnt_entry12.get())
                                                if get_bundle_data2[19] == '' or get_bundle_data2[19] is None or get_bundle_data2[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data2[19]) * int(cnt_entry12.get())
                                                if get_bundle_data2[20] == '' or get_bundle_data2[20] is None or get_bundle_data2[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data2[20]) * int(cnt_entry12.get())
                                                
                                            except:
                                                pass

                                            
                                            bt2_entry4.delete(0,END)
                                            bt2_entry4.insert(0,qty1)
                                            bt2_entry11.delete(0,END)
                                            bt2_entry11.insert(0,qty2)
                                            bt2_entry18.delete(0,END)
                                            bt2_entry18.insert(0,qty3)
                                            bt2_entry25.delete(0,END)
                                            bt2_entry25.insert(0,qty4)

                                            tot1 = int(bt2_entry4.get()) * int(float(bt2_entry5.get()))
                                            tot2 = int(bt2_entry11.get()) * int(float(bt2_entry12.get()))
                                            tot3 = int(bt2_entry18.get()) * int(float(bt2_entry19.get()))
                                            tot4 = int(bt2_entry25.get()) * int(float(bt2_entry26.get()))

                                            bt2_entry6.delete(0,END)
                                            bt2_entry6.insert(0,tot1)
                                            bt2_entry13.delete(0,END)
                                            bt2_entry13.insert(0,tot2)
                                            bt2_entry20.delete(0,END)
                                            bt2_entry20.insert(0,tot3)
                                            bt2_entry27.delete(0,END)
                                            bt2_entry27.insert(0,tot4)
                                        elif b == 3:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry16.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt3_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry1,tags=("entry1"))

                                            bt3_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry2,tags=("entry2"))

                                            bt3_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry3,tags=("entry3"))

                                            bt3_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry4,tags=("entry4"))

                                            bt3_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry5,tags=("entry5"))

                                            bt3_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry6,tags=("entry6"))

                                            bt3_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry7,tags=("combo1"))

                                            bt3_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry8,tags=("entry7"))

                                            bt3_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry9,tags=("entry8"))

                                            bt3_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry10,tags=("entry9"))

                                            bt3_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry11,tags=("entry10"))

                                            bt3_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry12,tags=("entry11"))

                                            bt3_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry13,tags=("entry12"))

                                            bt3_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry14,tags=("combo2"))

                                            bt3_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry15,tags=("entry13"))

                                            bt3_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry16,tags=("entry14"))

                                            bt3_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry17,tags=("entry15"))

                                            bt3_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry18,tags=("entry16"))

                                            bt3_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry19,tags=("entry17"))

                                            bt3_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry20,tags=("entry18"))

                                            bt3_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry21,tags=("combo3"))

                                            bt3_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry22,tags=("entry19"))

                                            bt3_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry23,tags=("entry20"))

                                            bt3_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry24,tags=("entry21"))

                                            bt3_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry25,tags=("entry22"))

                                            bt3_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry26,tags=("entry23"))

                                            bt3_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt3_entry27,tags=("entry24"))

                                            bt3_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt3_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt3_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt3_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val3 = (cnt_entry16.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql3,get_bundle_val3)
                                                get_bundle_data3 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt3_entry1.delete(0,END)
                                                bt3_entry1.insert(0,get_bundle_data3[5])
                                                bt3_entry2.delete(0,END)
                                                bt3_entry2.insert(0,get_bundle_data3[9])
                                                bt3_entry3.delete(0,END)
                                                bt3_entry3.insert(0,get_bundle_data3[13])
                                                bt3_entry4.delete(0,END)
                                                bt3_entry5.delete(0,END)
                                                bt3_entry6.delete(0,END)
                                                if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                                    bt3_entry4.insert(0,0)
                                                else:
                                                    bt3_entry4.insert(0,get_bundle_data3[17])
                                                if get_bundle_data3[21] == '' or get_bundle_data3[21] is None or get_bundle_data3[21] == NULL:
                                                    bt3_entry5.insert(0,0)
                                                else:
                                                    bt3_entry5.insert(0,get_bundle_data3[21])
                                                if get_bundle_data3[25] == '' or get_bundle_data3[25] is None or get_bundle_data3[25] == NULL:
                                                    bt3_entry6.insert(0,0)
                                                else:
                                                    bt3_entry6.insert(0,get_bundle_data3[25])
                                                bt3_entry7.delete(0,END)
                                                bt3_entry8.delete(0,END)
                                                bt3_entry8.insert(0,get_bundle_data3[6])
                                                bt3_entry9.delete(0,END)
                                                bt3_entry9.insert(0,get_bundle_data3[10])
                                                bt3_entry10.delete(0,END)
                                                bt3_entry10.insert(0,get_bundle_data3[14])
                                                bt3_entry11.delete(0,END)
                                                bt3_entry12.delete(0,END)
                                                bt3_entry13.delete(0,END)
                                                if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[22] == NULL:
                                                    bt3_entry11.insert(0,0)
                                                else:
                                                    bt3_entry11.insert(0,get_bundle_data3[18])
                                                if get_bundle_data3[22] == '' or get_bundle_data3[22] is None or get_bundle_data3[22] == NULL:
                                                    bt3_entry12.insert(0,0)
                                                else:
                                                    bt3_entry12.insert(0,get_bundle_data3[22])
                                                if get_bundle_data3[26] == '' or get_bundle_data3[26] is None or get_bundle_data3[26] == NULL:
                                                    bt3_entry13.insert(0,0)
                                                else:
                                                    bt3_entry13.insert(0,get_bundle_data3[26])

                                                bt3_entry14.delete(0,END)
                                                bt3_entry15.delete(0,END)
                                                bt3_entry15.insert(0,get_bundle_data3[7])
                                                bt3_entry16.delete(0,END)
                                                bt3_entry16.insert(0,get_bundle_data3[11])
                                                bt3_entry17.delete(0,END)
                                                bt3_entry17.insert(0,get_bundle_data3[15])
                                                bt3_entry18.delete(0,END)
                                                bt3_entry19.delete(0,END)
                                                bt3_entry20.delete(0,END)
                                                if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                                    bt3_entry18.insert(0,0)
                                                else:
                                                    bt3_entry18.insert(0,get_bundle_data3[19])
                                                if get_bundle_data3[23] == '' or get_bundle_data3[23] is None or get_bundle_data3[23] == NULL:
                                                    bt3_entry19.insert(0,0)
                                                else:
                                                    bt3_entry19.insert(0,get_bundle_data3[23])
                                                if get_bundle_data3[27] == '' or get_bundle_data3[27] is None or get_bundle_data3[27] == NULL:
                                                    bt3_entry20.insert(0,0)
                                                else:
                                                    bt3_entry20.insert(0,get_bundle_data3[27])

                                                bt3_entry21.delete(0,END)
                                                bt3_entry22.delete(0,END)
                                                bt3_entry22.insert(0,get_bundle_data3[8])
                                                bt3_entry23.delete(0,END)
                                                bt3_entry23.insert(0,get_bundle_data3[12])
                                                bt3_entry24.delete(0,END)
                                                bt3_entry24.insert(0,get_bundle_data3[16])
                                                bt3_entry25.delete(0,END)
                                                bt3_entry26.delete(0,END)
                                                bt3_entry27.delete(0,END)
                                                bt3_entry28.delete(0,END)
                                                if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                                    bt3_entry25.insert(0,0)
                                                else:
                                                    bt3_entry25.insert(0,get_bundle_data3[20])
                                                if get_bundle_data3[24] == '' or get_bundle_data3[24] is None or get_bundle_data3[24] == NULL:
                                                    bt3_entry26.insert(0,0)
                                                else:
                                                    bt3_entry26.insert(0,get_bundle_data3[24])
                                                if get_bundle_data3[28] == '' or get_bundle_data3[28] is None or get_bundle_data3[28] == NULL:
                                                    bt3_entry27.insert(0,0)
                                                else:
                                                    bt3_entry27.insert(0,get_bundle_data3[28])


                                                if comp_data[4] == cn_pofsupply.get():
                                                    if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                        bt3_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry7.insert(0,f'{get_bundle_data3[29]}% GST({get_bundle_data3[29]}%)')
                                                    if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                        bt3_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry14.insert(0,f'{get_bundle_data3[30]}% GST({get_bundle_data3[30]}%)')
                                                    if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                        bt3_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry21.insert(0,f'{get_bundle_data3[31]}% GST({get_bundle_data3[31]}%)')
                                                    if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                        bt3_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt3_entry28.insert(0,f'{get_bundle_data3[32]}% GST({get_bundle_data3[32]}%)')
                                                elif comp_data[4] != cn_pofsupply.get():
                                                    if get_bundle_data3[29] == "" or get_bundle_data3[29] is None or get_bundle_data3[29] == NULL:
                                                        bt3_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry7.insert(0,f'{get_bundle_data3[29]}% IGST({get_bundle_data3[29]}%)')
                                                    if get_bundle_data3[30] == "" or get_bundle_data3[30] is None or get_bundle_data3[30] == NULL:
                                                        bt3_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry14.insert(0,f'{get_bundle_data3[30]}% IGST({get_bundle_data3[30]}%)')
                                                    if get_bundle_data3[31] == "" or get_bundle_data3[31] is None or get_bundle_data3[31] == NULL:
                                                        bt3_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry21.insert(0,f'{get_bundle_data3[31]}% IGST({get_bundle_data3[31]}%)')
                                                    if get_bundle_data3[32] == "" or get_bundle_data3[32] is None or get_bundle_data3[32] == NULL:
                                                        bt3_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt3_entry28.insert(0,f'{get_bundle_data3[32]}% IGST({get_bundle_data3[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data3[17] == '' or get_bundle_data3[17] is None or get_bundle_data3[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data3[17]) * int(cnt_entry18.get())
                                                if get_bundle_data3[18] == '' or get_bundle_data3[18] is None or get_bundle_data3[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data3[18]) * int(cnt_entry18.get())
                                                if get_bundle_data3[19] == '' or get_bundle_data3[19] is None or get_bundle_data3[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data3[19]) * int(cnt_entry18.get())
                                                if get_bundle_data3[20] == '' or get_bundle_data3[20] is None or get_bundle_data3[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data3[20]) * int(cnt_entry18.get())
                                                
                                            except:
                                                pass
                                            
                                            bt3_entry4.delete(0,END)
                                            bt3_entry4.insert(0,qty1)
                                            bt3_entry11.delete(0,END)
                                            bt3_entry11.insert(0,qty2)
                                            bt3_entry18.delete(0,END)
                                            bt3_entry18.insert(0,qty3)
                                            bt3_entry25.delete(0,END)
                                            bt3_entry25.insert(0,qty4)

                                            tot1 = int(bt3_entry4.get()) * int(float(bt3_entry5.get()))
                                            tot2 = int(bt3_entry11.get()) * int(float(bt3_entry12.get()))
                                            tot3 = int(bt3_entry18.get()) * int(float(bt3_entry19.get()))
                                            tot4 = int(bt3_entry25.get()) * int(float(bt3_entry26.get()))

                                            bt3_entry6.delete(0,END)
                                            bt3_entry6.insert(0,tot1)
                                            bt3_entry13.delete(0,END)
                                            bt3_entry13.insert(0,tot2)
                                            bt3_entry20.delete(0,END)
                                            bt3_entry20.insert(0,tot3)
                                            bt3_entry27.delete(0,END)
                                            bt3_entry27.insert(0,tot4)
                                        else:
                                            bt_label1 = Label(sr_Canvas_4,width=18,height=1,text=cnt_entry22.get(),font=('arial 25'),background='#1b3857',fg="white")
                                            sr_Canvas_4.create_window(0,0,anchor="c",window=bt_label1,tags=("label1"))

                                            bt4_entry1 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry1,tags=("entry1"))

                                            bt4_entry2 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry2,tags=("entry2"))

                                            bt4_entry3 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry3,tags=("entry3"))

                                            bt4_entry4 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry4,tags=("entry4"))

                                            bt4_entry5 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry5,tags=("entry5"))

                                            bt4_entry6 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry6,tags=("entry6"))

                                            bt4_entry7 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry7["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry7.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry7,tags=("combo1"))

                                            bt4_entry8 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry8,tags=("entry7"))

                                            bt4_entry9 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry9,tags=("entry8"))

                                            bt4_entry10 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry10,tags=("entry9"))

                                            bt4_entry11 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry11,tags=("entry10"))

                                            bt4_entry12 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry12,tags=("entry11"))

                                            bt4_entry13 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry13,tags=("entry12"))

                                            bt4_entry14 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry14["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry14.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry14,tags=("combo2"))

                                            bt4_entry15 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry15,tags=("entry13"))

                                            bt4_entry16 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry16,tags=("entry14"))

                                            bt4_entry17 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry17,tags=("entry15"))

                                            bt4_entry18 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry18,tags=("entry16"))

                                            bt4_entry19 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry19,tags=("entry17"))

                                            bt4_entry20 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry20,tags=("entry18"))

                                            bt4_entry21 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry21["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry21.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry21,tags=("combo3"))

                                            bt4_entry22 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry22,tags=("entry19"))

                                            bt4_entry23 = Entry(sr_Canvas_4,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry23,tags=("entry20"))

                                            bt4_entry24 = Entry(sr_Canvas_4,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry24,tags=("entry21"))

                                            bt4_entry25 = Entry(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry25,tags=("entry22"))

                                            bt4_entry26 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry26,tags=("entry23"))

                                            bt4_entry27 = Entry(sr_Canvas_4,width=12,font=('arial 15'),background='#2f516f',foreground='white')
                                            sr_Canvas_4.create_window(0,0,anchor='nw',window=bt4_entry27,tags=("entry24"))

                                            bt4_entry28 = ttk.Combobox(sr_Canvas_4,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                            bt4_entry28["values"] = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                            '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)','Choose','28.0% IGST(28%)','18.0% IGST(18%)','12.0% IGST(12%)','06.0% IGST(06%)',
                                            '05.0% IGST(05%)','03.0% IGST(03%)','0.25% IGST(0.25%)','0.0% IGST(0%)','Exempt IGST(0%)','Out of Scope(0%)']
                                            bt4_entry28.current(0)
                                            sr_Canvas_4.create_window(0,0,anchor='c',window=bt4_entry28,tags=("combo4"))

                                            try:
                                                get_bundle_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bundle_val4 = (cnt_entry22.get(),comp_data[0])
                                                fbcursor.execute(get_bundle_sql4,get_bundle_val4)
                                                get_bundle_data4 = fbcursor.fetchone()
                                            except:
                                                pass

                                            try:
                                                bt4_entry1.delete(0,END)
                                                bt4_entry1.insert(0,get_bundle_data4[5])
                                                bt4_entry2.delete(0,END)
                                                bt4_entry2.insert(0,get_bundle_data4[9])
                                                bt4_entry3.delete(0,END)
                                                bt4_entry3.insert(0,get_bundle_data4[13])
                                                bt4_entry4.delete(0,END)
                                                bt4_entry5.delete(0,END)
                                                bt4_entry6.delete(0,END)
                                                if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                                    bt4_entry4.insert(0,0)
                                                else:
                                                    bt4_entry4.insert(0,get_bundle_data4[17])
                                                if get_bundle_data4[21] == '' or get_bundle_data4[21] is None or get_bundle_data4[21] == NULL:
                                                    bt4_entry5.insert(0,0)
                                                else:
                                                    bt4_entry5.insert(0,get_bundle_data4[21])
                                                if get_bundle_data4[25] == '' or get_bundle_data4[25] is None or get_bundle_data4[25] == NULL:
                                                    bt4_entry6.insert(0,0)
                                                else:
                                                    bt4_entry6.insert(0,get_bundle_data4[25])
                                                bt4_entry7.delete(0,END)
                                                bt4_entry8.delete(0,END)
                                                bt4_entry8.insert(0,get_bundle_data4[6])
                                                bt4_entry9.delete(0,END)
                                                bt4_entry9.insert(0,get_bundle_data4[10])
                                                bt4_entry10.delete(0,END)
                                                bt4_entry10.insert(0,get_bundle_data4[14])
                                                bt4_entry11.delete(0,END)
                                                bt4_entry12.delete(0,END)
                                                bt4_entry13.delete(0,END)
                                                if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[22] == NULL:
                                                    bt4_entry11.insert(0,0)
                                                else:
                                                    bt4_entry11.insert(0,get_bundle_data4[18])
                                                if get_bundle_data4[22] == '' or get_bundle_data4[22] is None or get_bundle_data4[22] == NULL:
                                                    bt4_entry12.insert(0,0)
                                                else:
                                                    bt4_entry12.insert(0,get_bundle_data4[22])
                                                if get_bundle_data4[26] == '' or get_bundle_data4[26] is None or get_bundle_data4[26] == NULL:
                                                    bt4_entry13.insert(0,0)
                                                else:
                                                    bt4_entry13.insert(0,get_bundle_data4[26])
                                                bt4_entry14.delete(0,END)
                                                bt4_entry15.delete(0,END)
                                                bt4_entry15.insert(0,get_bundle_data4[7])
                                                bt4_entry16.delete(0,END)
                                                bt4_entry16.insert(0,get_bundle_data4[11])
                                                bt4_entry17.delete(0,END)
                                                bt4_entry17.insert(0,get_bundle_data4[15])
                                                bt4_entry18.delete(0,END)
                                                bt4_entry19.delete(0,END)
                                                bt4_entry20.delete(0,END)
                                                if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                                    bt4_entry18.insert(0,0)
                                                else:
                                                    bt4_entry18.insert(0,get_bundle_data4[19])
                                                if get_bundle_data4[23] == '' or get_bundle_data4[23] is None or get_bundle_data4[23] == NULL:
                                                    bt4_entry19.insert(0,0)
                                                else:
                                                    bt4_entry19.insert(0,get_bundle_data4[23])
                                                if get_bundle_data4[27] == '' or get_bundle_data4[27] is None or get_bundle_data4[27] == NULL:
                                                    bt4_entry20.insert(0,0)
                                                else:
                                                    bt4_entry20.insert(0,get_bundle_data4[27])
                                                bt4_entry21.delete(0,END)
                                                bt4_entry22.delete(0,END)
                                                bt4_entry22.insert(0,get_bundle_data4[8])
                                                bt4_entry23.delete(0,END)
                                                bt4_entry23.insert(0,get_bundle_data4[12])
                                                bt4_entry24.delete(0,END)
                                                bt4_entry24.insert(0,get_bundle_data4[16])
                                                bt4_entry25.delete(0,END)
                                                bt4_entry26.delete(0,END)
                                                bt4_entry27.delete(0,END)
                                                bt4_entry28.delete(0,END)
                                                if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                                    bt4_entry25.insert(0,0)
                                                else:
                                                    bt4_entry25.insert(0,get_bundle_data4[20])
                                                if get_bundle_data4[24] == '' or get_bundle_data4[24] is None or get_bundle_data4[24] == NULL:
                                                    bt4_entry26.insert(0,0)
                                                else:
                                                    bt4_entry26.insert(0,get_bundle_data4[24])
                                                if get_bundle_data4[28] == '' or get_bundle_data4[28] is None or get_bundle_data4[28] == NULL:
                                                    bt4_entry27.insert(0,0)
                                                else:
                                                    bt4_entry27.insert(0,get_bundle_data4[28])

                                                if comp_data[4] == cn_pofsupply.get():
                                                    if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                        bt4_entry7.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry7.insert(0,f'{get_bundle_data4[29]}% GST({get_bundle_data4[29]}%)')
                                                    if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                        bt4_entry14.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry14.insert(0,f'{get_bundle_data4[30]}% GST({get_bundle_data4[30]}%)')
                                                    if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                        bt4_entry21.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry21.insert(0,f'{get_bundle_data4[31]}% GST({get_bundle_data4[31]}%)')
                                                    if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                        bt4_entry28.insert(0,f'{0}% GST({0}%)')
                                                    else:
                                                        bt4_entry28.insert(0,f'{get_bundle_data4[32]}% GST({get_bundle_data4[32]}%)')
                                                elif comp_data[4] != cn_pofsupply.get():
                                                    if get_bundle_data4[29] == "" or get_bundle_data4[29] is None or get_bundle_data4[29] == NULL:
                                                        bt4_entry7.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry7.insert(0,f'{get_bundle_data4[29]}% IGST({get_bundle_data4[29]}%)')
                                                    if get_bundle_data4[30] == "" or get_bundle_data4[30] is None or get_bundle_data4[30] == NULL:
                                                        bt4_entry14.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry14.insert(0,f'{get_bundle_data4[30]}% IGST({get_bundle_data4[30]}%)')
                                                    if get_bundle_data4[31] == "" or get_bundle_data4[31] is None or get_bundle_data4[31] == NULL:
                                                        bt4_entry21.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry21.insert(0,f'{get_bundle_data4[31]}% IGST({get_bundle_data4[31]}%)')
                                                    if get_bundle_data4[32] == "" or get_bundle_data4[32] is None or get_bundle_data4[32] == NULL:
                                                        bt4_entry28.insert(0,f'{0}% IGST({0}%)')
                                                    else:
                                                        bt4_entry28.insert(0,f'{get_bundle_data4[32]}% IGST({get_bundle_data4[32]}%)')
                                                else:
                                                    pass
                                            except:
                                                pass

                                            try:
                                                if get_bundle_data4[17] == '' or get_bundle_data4[17] is None or get_bundle_data4[17] == NULL:
                                                    qty1 = 0
                                                else:
                                                    qty1 = int(get_bundle_data4[17]) * int(cnt_entry24.get())
                                                if get_bundle_data4[18] == '' or get_bundle_data4[18] is None or get_bundle_data4[18] == NULL:
                                                    qty2 = 0
                                                else:
                                                    qty2 = int(get_bundle_data4[18]) * int(cnt_entry24.get())
                                                if get_bundle_data4[19] == '' or get_bundle_data4[19] is None or get_bundle_data4[19] == NULL:
                                                    qty3 = 0
                                                else:
                                                    qty3 = int(get_bundle_data4[19]) * int(cnt_entry24.get())
                                                if get_bundle_data4[20] == '' or get_bundle_data4[20] is None or get_bundle_data4[20] == NULL:
                                                    qty4 = 0
                                                else:
                                                    qty4 = int(get_bundle_data4[20]) * int(cnt_entry24.get())
                                                
                                            except:
                                                pass
                                            
                                            bt4_entry4.delete(0,END)
                                            bt4_entry4.insert(0,qty1)
                                            bt4_entry11.delete(0,END)
                                            bt4_entry11.insert(0,qty2)
                                            bt4_entry18.delete(0,END)
                                            bt4_entry18.insert(0,qty3)
                                            bt4_entry25.delete(0,END)
                                            bt4_entry25.insert(0,qty4)

                                            tot1 = int(bt4_entry4.get()) * int(float(bt4_entry5.get()))
                                            tot2 = int(bt4_entry11.get()) * int(float(bt4_entry12.get()))
                                            tot3 = int(bt4_entry18.get()) * int(float(bt4_entry19.get()))
                                            tot4 = int(bt4_entry25.get()) * int(float(bt4_entry26.get()))

                                            bt4_entry6.delete(0,END)
                                            bt4_entry6.insert(0,tot1)
                                            bt4_entry13.delete(0,END)
                                            bt4_entry13.insert(0,tot2)
                                            bt4_entry20.delete(0,END)
                                            bt4_entry20.insert(0,tot3)
                                            bt4_entry27.delete(0,END)
                                            bt4_entry27.insert(0,tot4)

                                    cnt_entry1 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry1["values"] = cn_product_list
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry1,tags=("combo20"))

                                    cnt_entry2 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry2,tags=("entry57"))

                                    def cnt_calculateTotal1(event,s):
                                        # try:
                                            if s == 1:
                                                name = cnt_entry1.get()
                                                qty = cnt_entry3.get()
                                            elif s == 2:
                                                name = cnt_entry10.get()
                                                qty = cnt_entry12.get()
                                            elif s == 3:
                                                name = cnt_entry16.get()
                                                qty = cnt_entry18.get()
                                            elif s == 4:
                                                name = cnt_entry22.get()
                                                qty = cnt_entry24.get()


                                            if qty != 0:
                                                global tax_tot1,tax_tot2,tax_tot3,tax_tot4,b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4
                                                tax_tot1 = 0.0
                                                tax_tot2 = 0.0
                                                tax_tot3 = 0.0
                                                tax_tot4 = 0.0

                                                b1tax_tot1 = 0.0
                                                b1tax_tot2 = 0.0
                                                b1tax_tot3 = 0.0
                                                b1tax_tot4 = 0.0

                                                b2tax_tot1 = 0.0
                                                b2tax_tot2 = 0.0
                                                b2tax_tot3 = 0.0
                                                b2tax_tot4 = 0.0

                                                b3tax_tot1 = 0.0
                                                b3tax_tot2 = 0.0
                                                b3tax_tot3 = 0.0
                                                b3tax_tot4 = 0.0

                                                b4tax_tot1 = 0.0
                                                b4tax_tot2 = 0.0
                                                b4tax_tot3 = 0.0
                                                b4tax_tot4 = 0.0
                                                try:
                                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                                    get_pro_data = fbcursor.fetchone()

                                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val1 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                                    get_pro_data1 = fbcursor.fetchone()

                                                    get_pro_sql2 = "SELECT * FROM app1_service WHERE name=%s AND cid_id=%s"
                                                    get_pro_val2 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql2,get_pro_val2)
                                                    get_pro_data2 = fbcursor.fetchone()

                                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_pro_val3 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                                    get_pro_data3 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                if s == 1:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cnt_entry5.delete(0,END)
                                                        cnt_entry5.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cnt_entry5.delete(0,END)
                                                        cnt_entry5.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        cn_view_bundleitems(b=1)
                                                elif s == 2:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cnt_entry14.delete(0,END)
                                                        cnt_entry14.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cnt_entry14.delete(0,END)
                                                        cnt_entry14.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        cn_view_bundleitems(b=2)
                                                elif s == 3:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cnt_entry20.delete(0,END)
                                                        cnt_entry20.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cnt_entry20.delete(0,END)
                                                        cnt_entry20.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        cn_view_bundleitems(b=3)
                                                elif s == 4:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        cnt_entry26.delete(0,END)
                                                        cnt_entry26.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        cnt_entry26.delete(0,END)
                                                        cnt_entry26.insert(0,tot)
                                                    elif get_pro_data2 is not None:
                                                        pass
                                                    else:
                                                        cn_view_bundleitems(b=4)

                                                cnt_entry7.delete(0,END)
                                                cnt_entry8.delete(0,END)
                                                cnt_entry9.delete(0,END)

                                                def split_gst(string):
                                                    pattern1 = r'\(+'
                                                    pattern2 = r'\%+'
                                                    split1 = re.split(pattern1,string)
                                                    split2 = re.split(pattern2,split1[1])
                                                    return split2[0]

                                                #product gst -----------------------------
                                                try:
                                                    gst_value1 = split_gst(cnt_entry6.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value2 = split_gst(cnt_entry15.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value3 = split_gst(cnt_entry21.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value4 = split_gst(cnt_entry27.get())
                                                except:
                                                    pass

                                                #bundle gst ------------------------------ 
                                                try:
                                                    bgst_value1 = split_gst(bt1_entry7.get())
                                                    bgst_value2 = split_gst(bt1_entry14.get())
                                                    bgst_value3 = split_gst(bt1_entry21.get())
                                                    bgst_value4 = split_gst(bt1_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value5 = split_gst(bt2_entry7.get())
                                                    bgst_value6 = split_gst(bt2_entry14.get())
                                                    bgst_value7 = split_gst(bt2_entry21.get())
                                                    bgst_value8 = split_gst(bt2_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value9 = split_gst(bt3_entry7.get())
                                                    bgst_value10 = split_gst(bt3_entry14.get())
                                                    bgst_value11 = split_gst(bt3_entry21.get())
                                                    bgst_value12 = split_gst(bt3_entry28.get())
                                                except:
                                                    pass
                                                try:
                                                    bgst_value13 = split_gst(bt4_entry7.get())
                                                    bgst_value14 = split_gst(bt4_entry14.get())
                                                    bgst_value15 = split_gst(bt4_entry21.get())
                                                    bgst_value16 = split_gst(bt4_entry28.get())
                                                except:
                                                    pass

                                                get_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                                get_bun_val = (comp_data[0],)
                                                fbcursor.execute(get_bun_sql,get_bun_val)
                                                get_bun_data = fbcursor.fetchall()
                                                
                                                b_list = []
                                                for g in get_bun_data:
                                                    b_list.append(g[0])

                                    #=====================================================================================
                                                #Bundle1--------------------------------------------
                                                try:
                                                    if bt1_entry7.get() == "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        pass
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() == "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                        tax_total1 = b1tax_tot1
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() == "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() == "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                        if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                            b1tax_tot3 = 0
                                                        else:
                                                            b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3
                                                    elif bt1_entry7.get() != "Choose" and bt1_entry14.get() != "Choose" and bt1_entry21.get() != "Choose" and bt1_entry28.get() != "Choose":
                                                        if bgst_value1[0] == "0" or bt1_entry7.get() == "Exempt GST(0%)" or bt1_entry7.get() == "Out of Scope(0%)":
                                                            b1tax_tot1 = 0
                                                        else:
                                                            b1tax_tot1 = (float(bt1_entry6.get()) * float(float((bgst_value1[0]))))/100
                                                        
                                                        if bgst_value2[0] == "0" or bt1_entry14.get() == "Exempt GST(0%)" or bt1_entry14.get() == "Out of Scope(0%)":
                                                            b1tax_tot2 = 0
                                                        else:
                                                            b1tax_tot2 = (float(bt1_entry13.get()) * float(float((bgst_value2[0]))))/100

                                                        if bgst_value3[0] == "0" or bt1_entry21.get() == "Exempt GST(0%)" or bt1_entry21.get() == "Out of Scope(0%)":
                                                            b1tax_tot3 = 0
                                                        else:
                                                            b1tax_tot3 = (float(bt1_entry20.get()) * float(float((bgst_value3[0]))))/100

                                                        if bgst_value4[0] == "0" or bt1_entry28.get() == "Exempt GST(0%)" or bt1_entry28.get() == "Out of Scope(0%)":
                                                            b1tax_tot4 = 0
                                                        else:
                                                            b1tax_tot4 = (float(bt1_entry27.get()) * float(float((bgst_value4[0]))))/100
                                                        tax_total1 = b1tax_tot1 + b1tax_tot2 + b1tax_tot3 + b1tax_tot4
                                                except:
                                                    pass

                                                #Bundle2--------------------------------------------
                                                try:
                                                    if bt2_entry7.get() == "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        pass
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() == "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                        tax_total2 = b2tax_tot1
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() == "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() == "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                        if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                            b2tax_tot3 = 0
                                                        else:
                                                            b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3
                                                    elif bt2_entry7.get() != "Choose" and bt2_entry14.get() != "Choose" and bt2_entry21.get() != "Choose" and bt2_entry28.get() != "Choose":
                                                        if bgst_value5[0] == "0" or bt2_entry7.get() == "Exempt GST(0%)" or bt2_entry7.get() == "Out of Scope(0%)":
                                                            b2tax_tot1 = 0
                                                        else:
                                                            b2tax_tot1 = (float(bt2_entry6.get()) * float(float((bgst_value5[0]))))/100
                                                        
                                                        if bgst_value6[0] == "0" or bt2_entry14.get() == "Exempt GST(0%)" or bt2_entry14.get() == "Out of Scope(0%)":
                                                            b2tax_tot2 = 0
                                                        else:
                                                            b2tax_tot2 = (float(bt2_entry13.get()) * float(float((bgst_value6[0]))))/100

                                                        if bgst_value7[0] == "0" or bt2_entry21.get() == "Exempt GST(0%)" or bt2_entry21.get() == "Out of Scope(0%)":
                                                            b2tax_tot3 = 0
                                                        else:
                                                            b2tax_tot3 = (float(bt2_entry20.get()) * float(float((bgst_value7[0]))))/100

                                                        if bgst_value8[0] == "0" or bt2_entry28.get() == "Exempt GST(0%)" or bt2_entry28.get() == "Out of Scope(0%)":
                                                            b2tax_tot4 = 0
                                                        else:
                                                            b2tax_tot4 = (float(bt2_entry27.get()) * float(float((bgst_value8[0]))))/100
                                                        tax_total2 = b2tax_tot1 + b2tax_tot2 + b2tax_tot3 + b2tax_tot4
                                                except:
                                                    pass

                                                #Bundle3--------------------------------------------
                                                try:
                                                    if bt3_entry7.get() == "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        pass
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() == "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                        tax_total3 = b3tax_tot1
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() == "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() == "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                        if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                            b3tax_tot3 = 0
                                                        else:
                                                            b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3
                                                    elif bt3_entry7.get() != "Choose" and bt3_entry14.get() != "Choose" and bt3_entry21.get() != "Choose" and bt3_entry28.get() != "Choose":
                                                        if bgst_value9[0] == "0" or bt3_entry7.get() == "Exempt GST(0%)" or bt3_entry7.get() == "Out of Scope(0%)":
                                                            b3tax_tot1 = 0
                                                        else:
                                                            b3tax_tot1 = (float(bt3_entry6.get()) * float(float((bgst_value9[0]))))/100
                                                        
                                                        if bgst_value10[0] == "0" or bt3_entry14.get() == "Exempt GST(0%)" or bt3_entry14.get() == "Out of Scope(0%)":
                                                            b3tax_tot2 = 0
                                                        else:
                                                            b3tax_tot2 = (float(bt3_entry13.get()) * float(float((bgst_value10[0]))))/100

                                                        if bgst_value11[0] == "0" or bt3_entry21.get() == "Exempt GST(0%)" or bt3_entry21.get() == "Out of Scope(0%)":
                                                            b3tax_tot3 = 0
                                                        else:
                                                            b3tax_tot3 = (float(bt3_entry20.get()) * float(float((bgst_value11[0]))))/100

                                                        if bgst_value12[0] == "0" or bt3_entry28.get() == "Exempt GST(0%)" or bt3_entry28.get() == "Out of Scope(0%)":
                                                            b3tax_tot4 = 0
                                                        else:
                                                            b3tax_tot4 = (float(bt3_entry27.get()) * float(float((bgst_value12[0]))))/100
                                                        tax_total3 = b3tax_tot1 + b3tax_tot2 + b3tax_tot3 + b3tax_tot4
                                                except:
                                                    pass

                                                #Bundle4--------------------------------------------
                                                try:
                                                    if bt4_entry7.get() == "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        pass
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() == "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                        tax_total4 = b4tax_tot1
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() == "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() == "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                        if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                            b4tax_tot3 = 0
                                                        else:
                                                            b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3
                                                    elif bt4_entry7.get() != "Choose" and bt4_entry14.get() != "Choose" and bt4_entry21.get() != "Choose" and bt4_entry28.get() != "Choose":
                                                        if bgst_value13[0] == "0" or bt4_entry7.get() == "Exempt GST(0%)" or bt4_entry7.get() == "Out of Scope(0%)":
                                                            b4tax_tot1 = 0
                                                        else:
                                                            b4tax_tot1 = (float(bt4_entry6.get()) * float(float((bgst_value13[0]))))/100
                                                        
                                                        if bgst_value14[0] == "0" or bt4_entry14.get() == "Exempt GST(0%)" or bt4_entry14.get() == "Out of Scope(0%)":
                                                            b4tax_tot2 = 0
                                                        else:
                                                            b4tax_tot2 = (float(bt4_entry13.get()) * float(float((bgst_value14[0]))))/100

                                                        if bgst_value15[0] == "0" or bt4_entry21.get() == "Exempt GST(0%)" or bt4_entry21.get() == "Out of Scope(0%)":
                                                            b4tax_tot3 = 0
                                                        else:
                                                            b4tax_tot3 = (float(bt4_entry20.get()) * float(float((bgst_value15[0]))))/100

                                                        if bgst_value16[0] == "0" or bt4_entry28.get() == "Exempt GST(0%)" or bt4_entry28.get() == "Out of Scope(0%)":
                                                            b4tax_tot4 = 0
                                                        else:
                                                            b4tax_tot4 = (float(bt4_entry27.get()) * float(float((bgst_value16[0]))))/100
                                                        tax_total4 = b4tax_tot1 + b4tax_tot2 + b4tax_tot3 + b4tax_tot4
                                                except:
                                                    pass

                                        #=============================================================================================

                                                #All products ----------------------------------------------------------------------------------------
                                                if cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + float(cnt_entry20.get()) + float(cnt_entry26.get()))
                                                    if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    elif cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                                    cnt_entry8.insert(0,ptax_total)

                                                #All bundles -----------------------------------------------------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + b2_tot + b3_tot + b4_tot)

                                                    cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total3 + tax_total4)

                                                #First row bundle-----------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                                    #Rest products--------------------------------------
                                                    if cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":                                               
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":                                              
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    cnt_entry8.insert(0,tax_total1 + ptax_total)

                                                #First and Second row Bundle -------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + b2_tot + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                                    #Rest products--------------------------------------
                                                    if cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4

                                                    cnt_entry8.insert(0,tax_total1 + tax_total2 + ptax_total)

                                                #First,Second and Third row Bundle -------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + b2_tot + b3_tot + float(cnt_entry26.get()))

                                                    #Rest products--------------------------------------
                                                    if cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry27.get() != "Choose":
                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total3 + ptax_total)
                                                
                                                #Second row Bundle------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() not in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + float(cnt_entry20.get()) + float(cnt_entry26.get()))

                                                    if cnt_entry6.get() == "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry21.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    cnt_entry8.insert(0,tax_total2 + ptax_total)

                                                #Second,Third row Bundle------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + b3_tot + float(cnt_entry26.get()))

                                                    if cnt_entry6.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    cnt_entry8.insert(0,tax_total2 + tax_total3 + ptax_total)

                                                #Second,Fourth row Bundle------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + float(cnt_entry20.get()) + b4_tot)

                                                    if cnt_entry6.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry21.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry21.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    cnt_entry8.insert(0,tax_total2 + tax_total4 + ptax_total)

                                                #Second,Third and Fourth row Bundle------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + b2_tot + b3_tot + b4_tot)

                                                    if cnt_entry6.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    cnt_entry8.insert(0,tax_total2 + tax_total3 + tax_total4 + ptax_total)
                                                
                                                #Third row Bundle---------------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + b3_tot + float(cnt_entry26.get()))

                                                    if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry27.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry27.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    
                                                    cnt_entry8.insert(0,tax_total3 + ptax_total)

                                                #Third,first row Bundle---------------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() not in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + b3_tot + float(cnt_entry26.get()))

                                                    if cnt_entry15.get() == "Choose" and cnt_entry27.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry27.get() == "Choose":                                            
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry27.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or cnt_entry27.get() == "Exempt GST(0%)" or cnt_entry27.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(cnt_entry26.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    
                                                    cnt_entry8.insert(0,tax_total1 + tax_total3 + ptax_total)

                                                #Third,fourth row Bundle---------------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + b3_tot + b4_tot)

                                                    if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    
                                                    cnt_entry8.insert(0,tax_total3 + tax_total4 + ptax_total)

                                                #Third,first and fourth row Bundle---------------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() in b_list and cnt_entry22.get() in b_list:
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b3_tot = float(bt3_entry6.get()) + float(bt3_entry13.get()) + float(bt3_entry20.get()) + float(bt3_entry27.get())
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + b3_tot + b4_tot)

                                                    if cnt_entry15.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry15.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    
                                                    cnt_entry8.insert(0,tax_total1 + tax_total3 + tax_total4 + ptax_total)

                                                #Fourth row Bundle -----------------------------------------------------
                                                elif cnt_entry1.get() not in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    cnt_entry7.insert(0,float(cnt_entry5.get()) + float(cnt_entry14.get()) + float(cnt_entry20.get()) + b4_tot)

                                                    if cnt_entry6.get() == "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif cnt_entry6.get() != "Choose" and cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose":
                                                        if gst_value1[0] == "0" or cnt_entry6.get() == "Exempt GST(0%)" or cnt_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(cnt_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    cnt_entry8.insert(0,tax_total4 + ptax_total)

                                                #Fourth,First row Bundle -----------------------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() not in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + float(cnt_entry14.get()) + float(cnt_entry20.get()) + b4_tot)

                                                    if cnt_entry15.get() == "Choose" and cnt_entry21.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry21.get() == "Choose":                                            
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif cnt_entry15.get() != "Choose" and cnt_entry21.get() != "Choose":                                            
                                                        if gst_value2[0] == "0" or cnt_entry15.get() == "Exempt GST(0%)" or cnt_entry15.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(cnt_entry14.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    cnt_entry8.insert(0,tax_total1 + tax_total4 + ptax_total)

                                                #Fourth,First and Second row Bundle -----------------------------------------------------
                                                elif cnt_entry1.get() in b_list and cnt_entry10.get() in b_list and cnt_entry16.get() not in b_list and cnt_entry22.get() in b_list:
                                                    b4_tot = float(bt4_entry6.get()) + float(bt4_entry13.get()) + float(bt4_entry20.get()) + float(bt4_entry27.get())
                                                    b1_tot = float(bt1_entry6.get()) + float(bt1_entry13.get()) + float(bt1_entry20.get()) + float(bt1_entry27.get())
                                                    b2_tot = float(bt2_entry6.get()) + float(bt2_entry13.get()) + float(bt2_entry20.get()) + float(bt2_entry27.get())
                                                    cnt_entry7.insert(0,b1_tot + b2_tot + float(cnt_entry20.get()) + b4_tot)

                                                    if cnt_entry21.get() == "Choose":
                                                        ptax_total = 0
                                                    elif cnt_entry21.get() != "Choose":
                                                        if gst_value3[0] == "0" or cnt_entry21.get() == "Exempt GST(0%)" or cnt_entry21.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(cnt_entry20.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    cnt_entry8.insert(0,tax_total1 + tax_total2 + tax_total4 + ptax_total)
                                                cnt_entry9.insert(0,float(cnt_entry7.get()) + float(float(cnt_entry8.get())))
                                            else:
                                                pass
                                        # except:
                                        #     pass

                                    cnt_entry3 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry3.bind("<Key>",lambda event,sp = 1:cnt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry3,tags=("entry58"))

                                    cnt_entry4 = Entry(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry4,tags=("entry59"))

                                    cnt_entry5 = Entry(sr_Canvas_5,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry5.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry5,tags=("entry60"))

                                    cnt_entry6 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                                    cnt_entry6["values"] = cplace_gstlist
                                    cnt_entry6.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry6,tags=("combo21"))

                                    cnt_button1 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b1 = 1:cn_view_bundleitems(b1))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button1,tags=("button12"))

                                    cnt_entry10 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry10["values"] = cn_product_list
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry10,tags=("combo22"))

                                    cnt_entry11 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry11,tags=("entry61"))

                                    cnt_entry12 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry12.bind("<Key>",lambda event,sp = 2:cnt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry12,tags=("entry62"))

                                    cnt_entry13 = Entry(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry13,tags=("entry63"))

                                    cnt_entry14 = Entry(sr_Canvas_5,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry14.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry14,tags=("entry64"))

                                    cnt_entry15 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry15["values"] = cplace_gstlist
                                    cnt_entry15.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry15,tags=("combo23"))

                                    cnt_button2 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b2 = 2:cn_view_bundleitems(b2))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button2,tags=("button13"))

                                    cnt_entry16 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry16["values"] = cn_product_list
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry16,tags=("combo24"))

                                    cnt_entry17 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry17,tags=("entry65"))

                                    cnt_entry18 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry18.bind("<Key>",lambda event,sp = 3:cnt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry18,tags=("entry66"))

                                    cnt_entry19 = Entry(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry19,tags=("entry67"))

                                    cnt_entry20 = Entry(sr_Canvas_5,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry20.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry20,tags=("entry68"))

                                    cnt_entry21 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry21["values"] = cplace_gstlist
                                    cnt_entry21.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry21,tags=("combo25"))

                                    cnt_button3 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b3 = 3:cn_view_bundleitems(b3))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button3,tags=("button14"))

                                    cnt_entry22 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry22["values"] = cn_product_list
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry22,tags=("combo26"))

                                    cnt_entry23 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry23,tags=("entry69"))

                                    cnt_entry24 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry24.bind("<Key>",lambda event,sp = 4:cnt_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry24,tags=("entry70"))

                                    cnt_entry25 = Entry(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry25,tags=("entry71"))

                                    cnt_entry26 = Entry(sr_Canvas_5,width=13,font=('arial 15'),background='#2f516f',foreground='white')
                                    cnt_entry26.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry26,tags=("entry72"))

                                    cnt_entry27 = ttk.Combobox(sr_Canvas_5,width=7,font=('arial 15'),background='#2f516f',foreground='black')
                                    cnt_entry27["values"] = cplace_gstlist
                                    cnt_entry27.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=cnt_entry27,tags=("combo27"))

                                    cnt_button4 = Button(sr_Canvas_5,text='View',width=7,font=('arial 12'),background='#1b3857',activebackground='#1b3857',foreground='white',command=lambda b4 = 4:cn_view_bundleitems(b4))
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=cnt_button4,tags=("button15"))

                                    # cn_label31 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    # sr_Canvas_1.create_window(0,0,window=cn_label31,state=HIDDEN,tags=('label82'))

                                    # cn_label32 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    # sr_Canvas_1.create_window(0,0,window=cn_label32,state=HIDDEN,tags=('label83'))

                                    # cn_label33 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    # sr_Canvas_1.create_window(0,0,window=cn_label33,state=HIDDEN,tags=('label84'))

                                    # cn_label34 = Label(sr_Canvas_1,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    # sr_Canvas_1.create_window(0,0,window=cn_label34,state=HIDDEN,tags=('label85'))

                                    cn_label25 = Label(sr_Canvas_5,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label25,tags=('label40'))

                                    cn_label26 = Label(sr_Canvas_5,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label26,tags=('label41'))

                                    cn_label27 = Label(sr_Canvas_5,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label27,tags=('label42'))

                                    cnt_entry7 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry7,tags=("entry23"))

                                    cnt_entry8 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry8,tags=("entry24"))

                                    cnt_entry9 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=cnt_entry9,tags=("entry25"))

                                    def cn_saveCreditnote():
                                        get_credit_sql = "SELECT * FROM app1_credit ORDER BY creditnoteid DESC LIMIT 1"
                                        fbcursor.execute(get_credit_sql)
                                        get_credit_data = fbcursor.fetchone()

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2[0]

                                        customer = cn_custCombo.get()
                                        mail = cn_email.get()
                                        biladdr = cn_baddress.get("1.0","end-1c")
                                        creditdate = cn_creditdate.get_date()
                                        place = cn_pofsupply.get()

                                        if not get_credit_data:
                                            creditno = "1001"
                                        else:
                                            creditno = int(get_credit_data[5]) + 1
                                        
                                        invnum = (cn_invoiceno.get()).split(' - ')[0]
                                        subtot = cnt_entry7.get()
                                        try:
                                            tax = split_gst(cnt_entry6.get())
                                        except:
                                            tax = 0
                                        taxamnt = cnt_entry8.get()
                                        grndtot = cnt_entry9.get()
                                        product = cnt_entry1.get()
                                        descrip = cnt_entry2.get()
                                        qty = cnt_entry3.get()
                                        price = cnt_entry4.get()
                                        total = cnt_entry5.get()
                                        product1 = cnt_entry10.get()
                                        descrip1 = cnt_entry11.get()
                                        qty1 = cnt_entry12.get()
                                        price1 = cnt_entry13.get()
                                        total1 = cnt_entry14.get()
                                        try:
                                            tax1 = split_gst(cnt_entry15.get()) 
                                        except:
                                            tax1 = 0
                                        product2 = cnt_entry16.get()
                                        descrip2 = cnt_entry17.get()
                                        qty2 = cnt_entry18.get()
                                        price2 = cnt_entry19.get()
                                        total2 = cnt_entry20.get()
                                        try:
                                            tax2 = split_gst(cnt_entry21.get())
                                        except:
                                            tax2 = 0
                                        product3 = cnt_entry22.get()
                                        descrip3 = cnt_entry23.get()
                                        qty3 = cnt_entry24.get()
                                        price3 = cnt_entry25.get()
                                        total3 = cnt_entry26.get()
                                        try:
                                            tax3 = split_gst(cnt_entry27.get())
                                        except:
                                            tax3 = 0
                                        cid_id = comp_data[0]

                                        if customer == "Select Customer" or customer == '' or place == '' or cn_invoiceno.get() == 'Select Invoice No':
                                            pass
                                        else:
                                            ins_credit_sql = "update app1_credit set customer=%s,mail=%s,biladdr=%s,creditdate=%s,place=%s,creditno=%s,invnum=%s,subtot=%s,tax=%s,taxamnt=%s,grndtot=%s,product=%s,descrip=%s,qty=%s,price=%s,total=%s,product1=%s,descrip1=%s,qty1=%s,price1=%s,total1=%s,tax1=%s,product2=%s,descrip2=%s,qty2=%s,price2=%s,total2=%s,tax2=%s,product3=%s,descrip3=%s,qty3=%s,price3=%s,total3=%s,tax3=%s where cid_id=%s and creditno=%s"
                                            ins_credit_val = (customer,mail,biladdr,creditdate,place,creditno,invnum,subtot,tax,taxamnt,grndtot,product,descrip,qty,price,total,product1,descrip1,qty1,price1,total1,tax1,product2,descrip2,qty2,price2,total2,tax2,product3,descrip3,qty3,price3,total3,tax3,cid_id,row[2])
                                            fbcursor.execute(ins_credit_sql,ins_credit_val)
                                            finsysdb.commit()

                                            get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                            get_accts1_val = ('Account Receivable(Debtors)',comp_data[0])
                                            fbcursor.execute(get_accts1_sql,get_accts1_val)
                                            get_accts1_data = fbcursor.fetchone()

                                            if not get_accts1_data:
                                                pass
                                            else:
                                                if grndtot != 0:
                                                    upd_bal = get_accts1_data[0] - float(grndtot)
                                                    upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                    upd_accts1_val = (upd_bal,'Account Receivable(Debtors)',comp_data[0])
                                                    fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                                    finsysdb.commit()
                                                else:
                                                    pass

                                            try:
                                                lth=tax_tot1
                                            except:
                                                lth=0.0

                                            try:
                                                lth1=tax_tot2
                                            except:
                                                lth1=0.0

                                            try:
                                                lth2=tax_tot3
                                            except:
                                                lth2=0.0
                                            try:
                                                lth3=tax_tot4
                                            except:
                                                lth3=0.0

                                            tax_amounts = [lth,lth1,lth2,lth3]


                                            
                                            quantities = [qty,qty1,qty2,qty3]
                                            totals = [total,total1,total2,total3]
                                            products = [product,product1,product2,product3]

                                            for (p,q,t,tx) in zip(products,quantities,totals,tax_amounts):
                                                try:
                                                    get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                    get_invent_val = (p,comp_data[0])
                                                    fbcursor.execute(get_invent_sql,get_invent_val)
                                                    get_invent_data = fbcursor.fetchone()

                                                    if not get_invent_data:
                                                        pass
                                                    else:
                                                        initial_qty = int(get_invent_data[7]) + int(q)

                                                        upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                        upd_invent_val = (initial_qty,p,comp_data[0])
                                                        fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                        finsysdb.commit()

                                                        newcost = float(get_invent_data[16]) * float(q)

                                                        get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                        get_accts1_data1 = fbcursor.fetchone()

                                                        get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                        fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                        get_accts_data1 = fbcursor.fetchone()

                                                        if not get_accts_data1 and not get_accts1_data1:
                                                            pass
                                                        elif get_accts1_data1:
                                                            upd_bal1 = get_accts1_data1[0] + float(newcost)
                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()
                                                        elif get_accts_data1:
                                                            upd_bal1 = get_accts_data1[0] + float(newcost)
                                                            upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                            finsysdb.commit()
                                                        else:
                                                            pass

                                                        #----------------------------------------------------------
                                                        get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                        get_accts1_data2 = fbcursor.fetchone()

                                                        get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                        fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                        get_accts_data2 = fbcursor.fetchone()

                                                        if not get_accts_data2 and not get_accts1_data2:
                                                            pass
                                                        elif get_accts1_data2:
                                                            upd_bal2 = get_accts1_data2[0] - float(t)
                                                            upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                            finsysdb.commit()
                                                        elif get_accts_data2:
                                                            upd_bal2 = get_accts_data2[0] - float(t)
                                                            upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                            finsysdb.commit()
                                                        else:
                                                            pass

                                                        #---------------------------------------------------
                                                        get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                        get_accts1_data3 = fbcursor.fetchone()

                                                        get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                        fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                        get_accts_data3= fbcursor.fetchone()

                                                        if not get_accts_data3 and not get_accts1_data3:
                                                            pass
                                                        elif get_accts1_data3:
                                                            upd_bal3 = get_accts1_data3[0] - float(newcost)
                                                            upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                            finsysdb.commit()
                                                        elif get_accts_data3:
                                                            upd_bal3 = get_accts_data3[0] - float(newcost)
                                                            upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                            finsysdb.commit()
                                                        else:
                                                            pass

                                                        try:
                                                            if place == comp_data[4]:
                                                                tax = tx/2
                                                                get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                get_accts1_data4 = fbcursor.fetchone()

                                                                upd_bal4 = get_accts1_data4[0] - tax
                                                                upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                finsysdb.commit()

                                                                get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                get_accts1_data5 = fbcursor.fetchone()

                                                                upd_bal5 = get_accts1_data5[0] - tax
                                                                upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                finsysdb.commit()
                                                            else:
                                                                get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                get_accts1_data4 = fbcursor.fetchone()

                                                                upd_bal4 = get_accts1_data4[0] - tx
                                                                upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                finsysdb.commit()
                                                        except:
                                                            pass
                                                except:
                                                    pass

                                                try:
                                                    get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                    get_noninvent_val = (p,comp_data[0])
                                                    fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                    get_noninvent_data = fbcursor.fetchone()

                                                    if not get_noninvent_data:
                                                        pass
                                                    else:
                                                        qty = int(get_noninvent_data[17]) + int(q)

                                                        upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                        upd_noninvent_val = (qty,p,comp_data[0])
                                                        fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                        finsysdb.commit()

                                                        get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                        get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                        get_accts1_data1 = fbcursor.fetchone()

                                                        get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                        get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                        fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                        get_accts_data1 = fbcursor.fetchone()

                                                        if not get_accts_data1 and not get_accts1_data1:
                                                            pass
                                                        elif get_accts1_data1:
                                                            upd_bal1 = get_accts1_data1[0] - float(t)
                                                            upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                            finsysdb.commit()
                                                        elif get_accts_data1:
                                                            upd_bal1 = get_accts_data1[0] - float(t)
                                                            upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                            upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                            fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                            finsysdb.commit()
                                                        else:
                                                            pass

                                                        try:
                                                            if place == comp_data[4]:
                                                                tax = tx/2
                                                                get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                get_accts1_data4 = fbcursor.fetchone()

                                                                upd_bal4 = get_accts1_data4[0] - tax
                                                                upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                finsysdb.commit()

                                                                get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                get_accts1_data5 = fbcursor.fetchone()

                                                                upd_bal5 = get_accts1_data5[0] - tax
                                                                upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                finsysdb.commit()
                                                            else:
                                                                get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                get_accts1_data4 = fbcursor.fetchone()

                                                                upd_bal4 = get_accts1_data4[0] - tx
                                                                upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                finsysdb.commit()
                                                        except:
                                                            pass

                                                except:
                                                    pass

                                            #-------------------------------------------------------------

                                            try:
                                                get_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bun_val1 = (cnt_entry1.get(),comp_data[0])
                                                fbcursor.execute(get_bun_sql1,get_bun_val1)
                                                get_bun_data1 = fbcursor.fetchone()
                                            except:
                                                pass
                                            try:
                                                get_bun_sql2 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bun_val2 = (cnt_entry10.get(),comp_data[0])
                                                fbcursor.execute(get_bun_sql2,get_bun_val2)
                                                get_bun_data2 = fbcursor.fetchone()
                                            except:
                                                pass
                                            try:
                                                get_bun_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bun_val3 = (cnt_entry16.get(),comp_data[0])
                                                fbcursor.execute(get_bun_sql3,get_bun_val3)
                                                get_bun_data3 = fbcursor.fetchone()
                                            except:
                                                pass
                                            try:
                                                get_bun_sql4 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                get_bun_val4 = (cnt_entry22.get(),comp_data[0])
                                                fbcursor.execute(get_bun_sql4,get_bun_val4)
                                                get_bun_data4 = fbcursor.fetchone()
                                            except:
                                                pass

                                            if get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get(),]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get(),]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get(),]
                                            elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is None:
                                                btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4]

                                                bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get()]

                                                btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get()]

                                                bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is None:
                                                btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                                btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is not None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                btax_amount = [b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                                btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                btax_amount = [b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is not None and get_bun_data4 is not None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b3tax_tot1,b3tax_tot2,b3tax_tot3,b3tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt3_entry4.get(),bt3_entry11.get(),bt3_entry18.get(),bt3_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt3_entry6.get(),bt3_entry13.get(),bt3_entry20.get(),bt3_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt3_entry1.get(),bt3_entry8.get(),bt3_entry15.get(),bt3_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                                btax_amount = [b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is None and get_bun_data3 is None and get_bun_data4 is not None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            elif get_bun_data1 is not None and get_bun_data2 is not None and get_bun_data3 is None and get_bun_data4 is not None:
                                                btax_amount = [b1tax_tot1,b1tax_tot2,b1tax_tot3,b1tax_tot4,
                                                b2tax_tot1,b2tax_tot2,b2tax_tot3,b2tax_tot4,
                                                b4tax_tot1,b4tax_tot2,b4tax_tot3,b4tax_tot4]

                                                bqty = [bt1_entry4.get(),bt1_entry11.get(),bt1_entry18.get(),bt1_entry25.get(),
                                                bt2_entry4.get(),bt2_entry11.get(),bt2_entry18.get(),bt2_entry25.get(),
                                                bt4_entry4.get(),bt4_entry11.get(),bt4_entry18.get(),bt4_entry25.get()]

                                                btotals = [bt1_entry6.get(),bt1_entry13.get(),bt1_entry20.get(),bt1_entry27.get(),
                                                bt2_entry6.get(),bt2_entry13.get(),bt2_entry20.get(),bt2_entry27.get(),
                                                bt4_entry6.get(),bt4_entry13.get(),bt4_entry20.get(),bt4_entry27.get()]

                                                bproducts = [bt1_entry1.get(),bt1_entry8.get(),bt1_entry15.get(),bt1_entry22.get(),
                                                bt2_entry1.get(),bt2_entry8.get(),bt2_entry15.get(),bt2_entry22.get(),
                                                bt4_entry1.get(),bt4_entry8.get(),bt4_entry15.get(),bt4_entry22.get()]
                                            else:
                                                pass
                                            
                                            try:
                                                for (p,q,t,tx) in zip(bproducts,bqty,btotals,btax_amount):
                                                    try:
                                                        get_invent_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                        get_invent_val = (p,comp_data[0])
                                                        fbcursor.execute(get_invent_sql,get_invent_val)
                                                        get_invent_data = fbcursor.fetchone()

                                                        if not get_invent_data:
                                                            pass
                                                        else:
                                                            initial_qty = int(get_invent_data[7]) + int(q)

                                                            upd_invent_sql = "UPDATE app1_inventory SET initialqty=%s WHERE name=%s AND cid_id=%s"
                                                            upd_invent_val = (initial_qty,p,comp_data[0])
                                                            fbcursor.execute(upd_invent_sql,upd_invent_val)
                                                            finsysdb.commit()

                                                            newcost = float(get_invent_data[16]) * float(q)

                                                            get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val1 = (get_invent_data[10],comp_data[0])
                                                            fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                            get_accts1_data1 = fbcursor.fetchone()

                                                            get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                            get_accts_val1 = (get_invent_data[10],comp_data[0])
                                                            fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                            get_accts_data1 = fbcursor.fetchone()

                                                            if not get_accts_data1 and not get_accts1_data1:
                                                                pass
                                                            elif get_accts1_data1:
                                                                upd_bal1 = get_accts1_data1[0] + float(newcost)
                                                                upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                finsysdb.commit()
                                                            elif get_accts_data1:
                                                                upd_bal1 = get_accts_data1[0] + float(newcost)
                                                                upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts_val1 = (upd_bal1,get_invent_data[10],comp_data[0])
                                                                fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                finsysdb.commit()
                                                            else:
                                                                pass

                                                            #----------------------------------------------------------
                                                            get_accts1_sql2 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val2 = (get_invent_data[13],comp_data[0])
                                                            fbcursor.execute(get_accts1_sql2,get_accts1_val2)
                                                            get_accts1_data2 = fbcursor.fetchone()

                                                            get_accts_sql2 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                            get_accts_val2 = (get_invent_data[13],comp_data[0])
                                                            fbcursor.execute(get_accts_sql2,get_accts_val2)
                                                            get_accts_data2 = fbcursor.fetchone()

                                                            if not get_accts_data2 and not get_accts1_data2:
                                                                pass
                                                            elif get_accts1_data2:
                                                                upd_bal2 = get_accts1_data2[0] - float(t)
                                                                upd_accts1_sql2 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql2,upd_accts1_val2)
                                                                finsysdb.commit()
                                                            elif get_accts_data2:
                                                                upd_bal2 = get_accts_data2[0] - float(t)
                                                                upd_accts_sql2 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts_val2 = (upd_bal2,get_invent_data[13],comp_data[0])
                                                                fbcursor.execute(upd_accts_sql2,upd_accts_val2)
                                                                finsysdb.commit()
                                                            else:
                                                                pass

                                                            #---------------------------------------------------
                                                            get_accts1_sql3 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val3 = (get_invent_data[17],comp_data[0])
                                                            fbcursor.execute(get_accts1_sql3,get_accts1_val3)
                                                            get_accts1_data3 = fbcursor.fetchone()

                                                            get_accts_sql3 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                            get_accts_val3 = (get_invent_data[17],comp_data[0])
                                                            fbcursor.execute(get_accts_sql3,get_accts_val3)
                                                            get_accts_data3= fbcursor.fetchone()

                                                            if not get_accts_data3 and not get_accts1_data3:
                                                                pass
                                                            elif get_accts1_data3:
                                                                upd_bal3 = get_accts1_data3[0] - float(newcost)
                                                                upd_accts1_sql3 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql3,upd_accts1_val3)
                                                                finsysdb.commit()
                                                            elif get_accts_data3:
                                                                upd_bal3 = get_accts_data3[0] - float(newcost)
                                                                upd_accts_sql3 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts_val3 = (upd_bal3,get_invent_data[17],comp_data[0])
                                                                fbcursor.execute(upd_accts_sql3,upd_accts_val3)
                                                                finsysdb.commit()
                                                            else:
                                                                pass

                                                            try:
                                                                if place == comp_data[4]:
                                                                    tax = tx/2
                                                                    get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                    get_accts1_data4 = fbcursor.fetchone()

                                                                    upd_bal4 = get_accts1_data4[0] - tax
                                                                    upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                    finsysdb.commit()

                                                                    get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                    get_accts1_data5 = fbcursor.fetchone()

                                                                    upd_bal5 = get_accts1_data5[0] - tax
                                                                    upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                    finsysdb.commit()
                                                                else:
                                                                    get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                    get_accts1_data4 = fbcursor.fetchone()

                                                                    upd_bal4 = get_accts1_data4[0] - tx
                                                                    upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                    finsysdb.commit()
                                                            except:
                                                                pass
                                                    except:
                                                        pass

                                                    try:
                                                        get_noninvent_sql = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                        get_noninvent_val = (p,comp_data[0])
                                                        fbcursor.execute(get_noninvent_sql,get_noninvent_val)
                                                        get_noninvent_data = fbcursor.fetchone()

                                                        if not get_noninvent_data:
                                                            pass
                                                        else:
                                                            qty = int(get_noninvent_data[17]) + int(q)

                                                            upd_noninvent_sql = "UPDATE app1_noninventory SET qty=%s WHERE name=%s AND cid_id=%s"
                                                            upd_noninvent_val = (qty,p,comp_data[0])
                                                            fbcursor.execute(upd_noninvent_sql,upd_noninvent_val)
                                                            finsysdb.commit()

                                                            get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                            get_accts1_val1 = (get_noninvent_data[9],comp_data[0])
                                                            fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                                            get_accts1_data1 = fbcursor.fetchone()

                                                            get_accts_sql1 = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                                            get_accts_val1 = (get_noninvent_data[9],comp_data[0])
                                                            fbcursor.execute(get_accts_sql1,get_accts_val1)
                                                            get_accts_data1 = fbcursor.fetchone()

                                                            if not get_accts_data1 and not get_accts1_data1:
                                                                pass
                                                            elif get_accts1_data1:
                                                                upd_bal1 = get_accts1_data1[0] - float(t)
                                                                upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts1_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                                finsysdb.commit()
                                                            elif get_accts_data1:
                                                                upd_bal1 = get_accts_data1[0] - float(t)
                                                                upd_accts_sql1 = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                upd_accts_val1 = (upd_bal1,get_noninvent_data[9],comp_data[0])
                                                                fbcursor.execute(upd_accts_sql1,upd_accts_val1)
                                                                finsysdb.commit()
                                                            else:
                                                                pass

                                                            try:
                                                                if place == comp_data[4]:
                                                                    tax = tx/2
                                                                    get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val4 = ('Output CGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                    get_accts1_data4 = fbcursor.fetchone()

                                                                    upd_bal4 = get_accts1_data4[0] - tax
                                                                    upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val4 = (upd_bal4,'Output CGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                    finsysdb.commit()

                                                                    get_accts1_sql5 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val5 = ('Output SGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql5,get_accts1_val5)
                                                                    get_accts1_data5 = fbcursor.fetchone()

                                                                    upd_bal5 = get_accts1_data5[0] - tax
                                                                    upd_accts1_sql5 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val5 = (upd_bal5,'Output SGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql5,upd_accts1_val5)
                                                                    finsysdb.commit()
                                                                else:
                                                                    get_accts1_sql4 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                                                    get_accts1_val4 = ('Output IGST',comp_data[0])
                                                                    fbcursor.execute(get_accts1_sql4,get_accts1_val4)
                                                                    get_accts1_data4 = fbcursor.fetchone()

                                                                    upd_bal4 = get_accts1_data4[0] - tx
                                                                    upd_accts1_sql4 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                                    upd_accts1_val4 = (upd_bal4,'Output IGST',comp_data[0])
                                                                    fbcursor.execute(upd_accts1_sql4,upd_accts1_val4)
                                                                    finsysdb.commit()
                                                            except:
                                                                pass

                                                    except:
                                                        pass
                                            except:
                                                pass
                                        
                                            sr_Frame_1.destroy()
                                            sr_Frame.grid(row=0,column=0,sticky='nsew')

                                            show_sr_treeData()

                                    save_btn = Button(sr_Canvas_5,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:cn_saveCreditnote())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button7")) 

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3"))
                                    #--------------
                                    cn_label6 = Label(sr_Canvas_5,width=20,height=1,text="Credit Note Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=cn_label6,tags=('label24'))

                                    cwidth = root.winfo_screenwidth()

                                    cn_creditdate = DateEntry(sr_Canvas_5,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')

                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(495,442,anchor='nw',window=cn_creditdate,tags=("date"))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(370,455,anchor='nw',window=cn_creditdate,tags=("date"))
                                    else:
                                        sr_Canvas_5.create_window(465,407,anchor='nw',window=cn_creditdate,tags=("date"))

                                    
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_salesrcpt_sql = "SELECT * FROM app1_credit WHERE creditno=%s AND cid_id=%s"
                                    get_salesrcpt_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_salesrcpt_sql,get_salesrcpt_val)
                                    get_salesrcpt_data = fbcursor.fetchone()

                                    cn_custCombo.delete(0,END)
                                    cn_custCombo.insert(0,get_salesrcpt_data[1])
                                    cn_email.delete(0,END)
                                    cn_email.insert(0,get_salesrcpt_data[2])
                                    cn_cnn.delete(0,END)
                                    cn_cnn.insert(0,get_salesrcpt_data[5])
                                    cn_baddress.delete("1.0","end-1c")
                                    cn_baddress.insert("1.0",get_salesrcpt_data[3])
                                    cn_pofsupply.delete(0,END)
                                    cn_pofsupply.insert(0,get_salesrcpt_data[6])
                                    cn_invoiceno.delete(0,END)
                                    cn_invoiceno.insert(0,get_salesrcpt_data[7])
                                   

                                    sel_bun_sql = "SELECT name FROM app1_bundle WHERE cid_id=%s"
                                    sel_bun_val = (comp_data[0],)
                                    fbcursor.execute(sel_bun_sql,sel_bun_val)
                                    sel_bun_data = fbcursor.fetchall()

                                    bundle_list = []
                                    for b in sel_bun_data:
                                        bundle_list.append(b[0])
                                    
                                    cnt_entry1.delete(0,END)
                                    cnt_entry1.insert(0,get_salesrcpt_data[9])
                                    cnt_entry2.delete(0,END)
                                    cnt_entry2.insert(0,get_salesrcpt_data[10])
                                    cnt_entry3.delete(0,END)
                                    cnt_entry3.insert(0,get_salesrcpt_data[11])
                                    cnt_entry4.delete(0,END)
                                    cnt_entry4.insert(0,get_salesrcpt_data[12])
                                    cnt_entry5.delete(0,END)
                                    cnt_entry5.insert(0,get_salesrcpt_data[15])
                                    # cnt_entry6.delete(0,END)
                                    # cnt_entry6.insert(0,get_salesrcpt_data[13])
                                    
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cnt_entry6.insert(0,f'{get_salesrcpt_data[13]}% GST({get_salesrcpt_data[13]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cnt_entry6.insert(0,f'{get_salesrcpt_data[13]}% IGST({get_salesrcpt_data[13]}%)')
                                    else:
                                        pass
                                    cnt_entry10.delete(0,END)
                                    cnt_entry10.insert(0,get_salesrcpt_data[18])

                                    cnt_entry11.delete(0,END)
                                    cnt_entry11.insert(0,get_salesrcpt_data[19])
                                    cnt_entry12.delete(0,END)
                                    cnt_entry12.insert(0,get_salesrcpt_data[20])
                                    cnt_entry13.delete(0,END)
                                    cnt_entry13.insert(0,get_salesrcpt_data[21])
                                    cnt_entry14.delete(0,END)
                                    cnt_entry14.insert(0,get_salesrcpt_data[23])
                                    cnt_entry15.delete(0,END)
                                    cnt_entry15.insert(0,get_salesrcpt_data[22])
                                    
                                    
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cnt_entry15.insert(0,f'{get_salesrcpt_data[22]}% GST({get_salesrcpt_data[22]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cnt_entry15.insert(0,f'{get_salesrcpt_data[22]}% IGST({get_salesrcpt_data[22]}%)')
                                    else:
                                        pass
                                    
                                    cnt_entry16.delete(0,END)
                                    cnt_entry16.insert(0,get_salesrcpt_data[24])
                                    cnt_entry17.delete(0,END)
                                    cnt_entry17.insert(0,get_salesrcpt_data[25])

                                    cnt_entry18.delete(0,END)
                                    cnt_entry18.insert(0,get_salesrcpt_data[26])
                                    cnt_entry19.delete(0,END)
                                    cnt_entry19.insert(0,get_salesrcpt_data[27])
                                    cnt_entry20.delete(0,END)
                                    cnt_entry20.insert(0,get_salesrcpt_data[29])
                                    cnt_entry21.delete(0,END)
                                    # cnt_entry21.insert(0,get_salesrcpt_data[28])
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cnt_entry21.insert(0,f'{get_salesrcpt_data[28]}% GST({get_salesrcpt_data[28]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cnt_entry21.insert(0,f'{get_salesrcpt_data[28]}% IGST({get_salesrcpt_data[28]}%)')
                                    else:
                                        pass

                                    cnt_entry22.delete(0,END)
                                    cnt_entry22.insert(0,get_salesrcpt_data[30])
                                    cnt_entry23.delete(0,END)
                                    cnt_entry23.insert(0,get_salesrcpt_data[31])
                                    cnt_entry24.delete(0,END)
                                    cnt_entry24.insert(0,get_salesrcpt_data[32])

                                    cnt_entry25.delete(0,END)
                                    cnt_entry25.insert(0,get_salesrcpt_data[33])
                                    cnt_entry26.delete(0,END)
                                    cnt_entry26.insert(0,get_salesrcpt_data[34])
                                    cnt_entry27.delete(0,END)
                                    
                                    print(get_salesrcpt_data[35])
                                    if comp_data[4] == get_salesrcpt_data[6]:
                                        cnt_entry27.insert(0,f'{get_salesrcpt_data[35]}% GST({get_salesrcpt_data[35]}%)')
                                    elif comp_data[4] != get_salesrcpt_data[6]:
                                        cnt_entry27.insert(0,f'{get_salesrcpt_data[35]}% IGST({get_salesrcpt_data[35]}%)')
                                    else:
                                        pass

                                    if get_salesrcpt_data[10] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry21",state='hidden')
                                            sr_Canvas_5.itemconfig("entry22",state='hidden')
                                            sr_Canvas_5.itemconfig("combo6",state='hidden')
                                            sr_Canvas_5.itemconfig("button12",state='normal')
                                            sr_Canvas_5.itemconfig("label67",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[10],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq1 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[17])
                                            bq2 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[18])
                                            bq3 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[19])
                                            bq4 = int(get_salesrcpt_data[13]) * int(sel_bun_data1[20])

                                            bto1 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[21])
                                            bto2 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[22])
                                            bto3 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[23])
                                            bto4 = float(get_salesrcpt_data[13]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[20] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry42",state='hidden')
                                            sr_Canvas_5.itemconfig("entry43",state='hidden')
                                            sr_Canvas_5.itemconfig("combo15",state='hidden')
                                            sr_Canvas_5.itemconfig("button13",state='normal')
                                            sr_Canvas_5.itemconfig("label68",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[20],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq5 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[17])
                                            bq6 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[18])
                                            bq7 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[19])
                                            bq8 = int(get_salesrcpt_data[23]) * int(sel_bun_data1[20])

                                            bto5 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[21])
                                            bto6 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[22])
                                            bto7 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[23])
                                            bto8 = float(get_salesrcpt_data[23]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[27] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry47",state='hidden')
                                            sr_Canvas_5.itemconfig("entry48",state='hidden')
                                            sr_Canvas_5.itemconfig("combo17",state='hidden')
                                            sr_Canvas_5.itemconfig("button14",state='normal')
                                            sr_Canvas_5.itemconfig("label69",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[27],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq9 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[17])
                                            bq10 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[18])
                                            bq11 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[19])
                                            bq12 = int(get_salesrcpt_data[30]) * int(sel_bun_data1[20])

                                            bto9 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[21])
                                            bto10 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[22])
                                            bto11 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[23])
                                            bto12 = float(get_salesrcpt_data[30]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    if get_salesrcpt_data[34] in bundle_list:
                                        try:
                                            sr_Canvas_5.itemconfig("entry52",state='hidden')
                                            sr_Canvas_5.itemconfig("entry53",state='hidden')
                                            sr_Canvas_5.itemconfig("combo19",state='hidden')
                                            sr_Canvas_5.itemconfig("button15",state='normal')
                                            sr_Canvas_5.itemconfig("label70",state='hidden')

                                            sel_bun_sql1 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            sel_bun_val1 = (get_salesrcpt_data[34],comp_data[0],)
                                            fbcursor.execute(sel_bun_sql1,sel_bun_val1)
                                            sel_bun_data1 = fbcursor.fetchone()
                                            bq13 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[17])
                                            bq14 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[18])
                                            bq15 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[19])
                                            bq16 = int(get_salesrcpt_data[37]) * int(sel_bun_data1[20])

                                            bto13 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[21])
                                            bto14 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[22])
                                            bto15 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[23])
                                            bto16 = float(get_salesrcpt_data[37]) * float(sel_bun_data1[24])
                                        except:
                                            pass
                                    else:
                                        pass

                                    cnt_entry7.delete(0,END)
                                    cnt_entry7.insert(0,get_salesrcpt_data[14])
                                    cnt_entry8.delete(0,END)
                                    cnt_entry8.insert(0,get_salesrcpt_data[17])
                                    cnt_entry9.delete(0,END)
                                    cnt_entry9.insert(0,get_salesrcpt_data[16])
      
                                elif row[1] == "Estimate":
                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    es_label1 = Label(sr_Canvas_5,width=18,height=1,text="ESTIMATE",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=es_label1,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly3"))   

                                    es_label2 = Label(sr_Canvas_5,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=es_label2,tags=("label2"))

                                    es_label3 = Label(sr_Canvas_5,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=es_label3,tags=("label21"))

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_est_sql = "SELECT * FROM app1_estimate WHERE estimateno=%s AND cid_id=%s"
                                    get_est_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_est_sql,get_est_val)
                                    get_est_data = fbcursor.fetchone()

                                    es_custCombo = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=es_custCombo,tags=("combo3"))

                                    es_label4 = Label(sr_Canvas_5,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label4,tags=('label22'))

                                    es_labelesn = Label(sr_Canvas_5,width=15,height=1,text="Estimate No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_labelesn,tags=('label107'))

                                    es_esn = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=es_esn,tags=("entry112"))

                                    es_email = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=es_email,tags=("entry13"))

                                    es_label5 = Label(sr_Canvas_5,width=20,height=1,text="Billing Address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label5,tags=('label23'))

                                    es_baddress = Text(sr_Canvas_5,width=20,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=es_baddress,tags=("entry14"))

                                    es_label7 = Label(sr_Canvas_5,width=20,height=1,text="Place of Supply",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label7,tags=('label25'))

                                    es_pofsupply = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=es_pofsupply,tags=("entry15"))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line17"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line18"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line19"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line20"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line21"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line22"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line23"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line24"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line25"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line26"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line27"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line28"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line29"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line81"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line82"))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line32"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line33"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line34"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line35"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line36"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line37"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line38"))

                                    es_label13 = Label(sr_Canvas_5,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label13,tags=('label31'))

                                    es_label14 = Label(sr_Canvas_5,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label14,tags=('label32'))

                                    es_label29 = Label(sr_Canvas_5,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label29,tags=('label64'))

                                    es_label30 = Label(sr_Canvas_5,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label30,tags=('label65'))

                                    es_label31 = Label(sr_Canvas_5,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label31,tags=('label66'))

                                    es_label18 = Label(sr_Canvas_5,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label18,tags=('label33'))

                                    es_label19 = Label(sr_Canvas_5,width=10,height=1,text="HSN",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label19,tags=('label34'))

                                    es_label20 = Label(sr_Canvas_5,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label20,tags=('label35'))

                                    es_label21 = Label(sr_Canvas_5,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label21,tags=('label36'))

                                    es_label22 = Label(sr_Canvas_5,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label22,tags=('label86'))

                                    es_label23 = Label(sr_Canvas_5,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label23,tags=('label87'))

                                    es_label24 = Label(sr_Canvas_5,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label24,tags=('label88'))

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                                    get_inventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_inventory_sql,get_inventory_val)
                                    get_inventory_data = fbcursor.fetchall()

                                    get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                                    get_noninventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                                    get_noninventory_data = fbcursor.fetchall()

                                    get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                                    get_bundle_val = (comp_data[0],)                      
                                    fbcursor.execute(get_bundle_sql,get_bundle_val)
                                    get_bundle_data = fbcursor.fetchall()

                                    product_list = []

                                    if not get_inventory_data:
                                        pass
                                    else:
                                        for i in get_inventory_data:
                                            product_list.append(i[2])

                                    if not get_noninventory_data:
                                        pass
                                    else:
                                        for n in get_noninventory_data:
                                            product_list.append(n[2])

                                    if not get_bundle_data:
                                        pass
                                    else:
                                        for b in get_bundle_data:
                                            product_list.append(b[2])
                                    
                                    product_list.insert(0,"Select Product")

                                    def es_fetch_proDetails1(event):
                                        global get_pro_data3
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (est_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (est_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (est_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label67",state='normal')
                                                es_label32.config(text="Available Qty : " + get_pro_data[7])
                                                est_entry2.delete(0,END)
                                                est_entry2.insert(0,get_pro_data[4])
                                                est_entry3.delete(0,END)
                                                est_entry3.insert(0,get_pro_data[11])
                                                est_entry5.delete(0,END)
                                                est_entry5.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label67",state='normal')
                                                es_label32.config(text="Available Qty : " + get_pro_data1[17])
                                                est_entry2.delete(0,END)
                                                est_entry2.insert(0,get_pro_data1[4])
                                                est_entry3.delete(0,END)
                                                est_entry3.insert(0,get_pro_data1[7])
                                                est_entry5.delete(0,END)
                                                est_entry5.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label67",state='hidden')
                                                est_entry2.delete(0,END)
                                                est_entry2.insert(0,get_pro_data3[3])
                                                est_entry3.delete(0,END)
                                                est_entry3.insert(0,get_pro_data3[4])
                                                est_entry5.delete(0,END)
                                                est_entry5.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    est_entry1 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry1['values'] = product_list
                                    est_entry1.current(0)
                                    est_entry1.bind("<<ComboboxSelected>>",es_fetch_proDetails1)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry1,tags=("combo5"))

                                    est_entry2 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry2,tags=("entry73"))

                                    est_entry3 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry3,tags=("entry74"))

                                    def est_calculateTotal1(event,s):
                                        try:
                                            if s == 1:
                                                name = est_entry1.get()
                                                qty = est_entry4.get()
                                            elif s == 2:
                                                name = est_entry11.get()
                                                qty = est_entry14.get()
                                            elif s == 3:
                                                name = est_entry18.get()
                                                qty = est_entry21.get()
                                            elif s == 4:
                                                name = est_entry25.get()
                                                qty = est_entry28.get()

                                            if qty != 0:
                                                global tax_tot1,tax_tot2,tax_tot3,tax_tot4
                                                tax_tot1 = 0.0
                                                tax_tot2 = 0.0
                                                tax_tot3 = 0.0
                                                tax_tot4 = 0.0

                                                try:
                                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                                    get_pro_data = fbcursor.fetchone()

                                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val1 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                                    get_pro_data1 = fbcursor.fetchone()

                                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_pro_val3 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                                    get_pro_data3 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                if s == 1:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        est_entry6.delete(0,END)
                                                        est_entry6.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        est_entry6.delete(0,END)
                                                        est_entry6.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        est_entry6.delete(0,END)
                                                        est_entry6.insert(0,tot)
                                                elif s == 2:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        est_entry16.delete(0,END)
                                                        est_entry16.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        est_entry16.delete(0,END)
                                                        est_entry16.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        est_entry16.delete(0,END)
                                                        est_entry16.insert(0,tot)
                                                elif s == 3:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        est_entry23.delete(0,END)
                                                        est_entry23.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        est_entry23.delete(0,END)
                                                        est_entry23.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        est_entry23.delete(0,END)
                                                        est_entry23.insert(0,tot)
                                                elif s == 4:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        est_entry30.delete(0,END)
                                                        est_entry30.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        est_entry30.delete(0,END)
                                                        est_entry30.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        est_entry30.delete(0,END)
                                                        est_entry30.insert(0,tot)
                                                
                                                est_entry8.delete(0,END)
                                                est_entry9.delete(0,END)
                                                est_entry10.delete(0,END)

                                                def split_gst(string):
                                                    pattern1 = r'\(+'
                                                    pattern2 = r'\%+'
                                                    split1 = re.split(pattern1,string)
                                                    split2 = re.split(pattern2,split1[1])
                                                    return split2

                                                #product gst -----------------------------
                                                try:
                                                    gst_value1 = split_gst(est_entry7.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value2 = split_gst(est_entry17.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value3 = split_gst(est_entry24.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value4 = split_gst(est_entry31.get())
                                                except:
                                                    pass


                                                try:
                                                    est_entry8.insert(0,float(est_entry6.get()) + float(est_entry16.get()) + float(est_entry23.get()) + float(est_entry30.get()))
                                                    if est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                        ptax_total = 0
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() == "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    elif est_entry7.get() == "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() == "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() == "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    elif est_entry7.get() != "Choose" and est_entry17.get() != "Choose" and est_entry24.get() != "Choose" and est_entry31.get() != "Choose":
                                                        if gst_value1[0] == "0" or est_entry7.get() == "Exempt GST(0%)" or est_entry7.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(est_entry6.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or est_entry17.get() == "Exempt GST(0%)" or est_entry17.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(est_entry16.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or est_entry24.get() == "Exempt GST(0%)" or est_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(est_entry23.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or est_entry31.get() == "Exempt GST(0%)" or est_entry31.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(est_entry30.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                                    est_entry9.insert(0,ptax_total)
                                                    est_entry10.insert(0,float(est_entry8.get()) + float(float(est_entry9.get())))
                                                except:
                                                    pass
                                        except:
                                            pass

                                    est_entry4 = Spinbox(sr_Canvas_5,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    est_entry4.bind("<Key>",lambda event,sp = 1:est_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry4,tags=("entry75"))

                                    est_entry5 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry5,tags=("entry76"))

                                    est_entry6 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    est_entry6.delete(0,END)
                                    est_entry6.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry6,tags=("entry77"))

                                    est_entry7 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                                    est_entry7['values'] = cplace_gstlist
                                    est_entry7.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry7,tags=("combo28"))

                                    def es_fetch_proDetails2(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (est_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (est_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (est_entry11.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #----------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label68",state='normal')
                                                es_label33.config(text="Available Qty : " + get_pro_data[7])
                                                est_entry12.delete(0,END)
                                                est_entry12.insert(0,get_pro_data[4])
                                                est_entry13.delete(0,END)
                                                est_entry13.insert(0,get_pro_data[11])
                                                est_entry15.delete(0,END)
                                                est_entry15.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label68",state='normal')
                                                es_label33.config(text="Available Qty : " + get_pro_data1[17])
                                                est_entry12.delete(0,END)
                                                est_entry12.insert(0,get_pro_data1[4])
                                                est_entry13.delete(0,END)
                                                est_entry13.insert(0,get_pro_data1[7])
                                                est_entry15.delete(0,END)
                                                est_entry15.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label68",state='hidden')
                                                est_entry12.delete(0,END)
                                                est_entry12.insert(0,get_pro_data3[3])
                                                est_entry13.delete(0,END)
                                                est_entry13.insert(0,get_pro_data3[4])
                                                est_entry15.delete(0,END)
                                                est_entry15.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    est_entry11 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry11['values'] = product_list
                                    est_entry11.current(0)
                                    est_entry11.bind("<<ComboboxSelected>>",es_fetch_proDetails2)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry11,tags=("combo14"))

                                    est_entry12 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry12,tags=("entry78"))

                                    est_entry13 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry13,tags=("entry79"))

                                    est_entry14 = Spinbox(sr_Canvas_5,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    est_entry14.bind("<Key>",lambda event,sp = 2:est_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry14,tags=("entry80"))

                                    est_entry15 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry15,tags=("entry81"))

                                    est_entry16 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    est_entry16.delete(0,END)
                                    est_entry16.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry16,tags=("entry82"))

                                    est_entry17 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry17['values'] = cplace_gstlist
                                    est_entry17.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry17,tags=("combo29"))

                                    def es_fetch_proDetails3(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (est_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (est_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (est_entry18.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label69",state='normal')
                                                es_label34.config(text="Available Qty : " + get_pro_data[7])
                                                est_entry19.delete(0,END)
                                                est_entry19.insert(0,get_pro_data[4])
                                                est_entry20.delete(0,END)
                                                est_entry20.insert(0,get_pro_data[11])
                                                est_entry22.delete(0,END)
                                                est_entry22.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label69",state='normal')
                                                es_label34.config(text="Available Qty : " + get_pro_data1[17])
                                                est_entry19.delete(0,END)
                                                est_entry19.insert(0,get_pro_data1[4])
                                                est_entry20.delete(0,END)
                                                est_entry20.insert(0,get_pro_data1[7])
                                                est_entry22.delete(0,END)
                                                est_entry22.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label69",state='hidden')
                                                est_entry19.delete(0,END)
                                                est_entry19.insert(0,get_pro_data3[3])
                                                est_entry20.delete(0,END)
                                                est_entry20.insert(0,get_pro_data3[4])
                                                est_entry22.delete(0,END)
                                                est_entry22.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    est_entry18 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry18['values'] = product_list
                                    est_entry18.current(0)
                                    est_entry18.bind("<<ComboboxSelected>>",es_fetch_proDetails3)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry18,tags=("combo16"))

                                    est_entry19 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry19,tags=("entry83"))

                                    est_entry20 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry20,tags=("entry84"))

                                    est_entry21 = Spinbox(sr_Canvas_5,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    est_entry21.bind("<Key>",lambda event,sp = 3:est_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry21,tags=("entry85"))

                                    est_entry22 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry22,tags=("entry86"))

                                    est_entry23 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    est_entry23.delete(0,END)
                                    est_entry23.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry23,tags=("entry87"))

                                    est_entry24 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry24['values'] = cplace_gstlist
                                    est_entry24.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry24,tags=("combo30"))

                                    def es_fetch_proDetails4(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (est_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (est_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (est_entry25.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label70",state='normal')
                                                es_label35.config(text="Available Qty : " + get_pro_data[7])
                                                est_entry26.delete(0,END)
                                                est_entry26.insert(0,get_pro_data[4])
                                                est_entry27.delete(0,END)
                                                est_entry27.insert(0,get_pro_data[11])
                                                est_entry29.delete(0,END)
                                                est_entry29.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label70",state='normal')
                                                es_label35.config(text="Available Qty : " + get_pro_data1[17])
                                                est_entry26.delete(0,END)
                                                est_entry26.insert(0,get_pro_data1[4])
                                                est_entry27.delete(0,END)
                                                est_entry27.insert(0,get_pro_data1[7])
                                                est_entry29.delete(0,END)
                                                est_entry29.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label70",state='hidden')
                                                est_entry26.delete(0,END)
                                                est_entry26.insert(0,get_pro_data3[3])
                                                est_entry27.delete(0,END)
                                                est_entry27.insert(0,get_pro_data3[4])
                                                est_entry29.delete(0,END)
                                                est_entry29.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    est_entry25 = ttk.Combobox(sr_Canvas_5,width=10,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry25['values'] = product_list
                                    est_entry25.current(0)
                                    est_entry25.bind("<<ComboboxSelected>>",es_fetch_proDetails4)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry25,tags=("combo18"))

                                    est_entry26 = Entry(sr_Canvas_5,width=9,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry26,tags=("entry88"))

                                    est_entry27 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry27,tags=("entry89"))

                                    est_entry28 = Spinbox(sr_Canvas_5,from_=0,to=100,width=7,font=('arial 15'),background='#2f516f',foreground='white',justify=RIGHT)
                                    est_entry28.bind("<Key>",lambda event,sp = 4:est_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry28,tags=("entry90"))

                                    est_entry29 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry29,tags=("entry91"))

                                    est_entry30 = Entry(sr_Canvas_5,width=15,font=('arial 15'),background='#2f516f',foreground='white')
                                    est_entry30.delete(0,END)
                                    est_entry30.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry30,tags=("entry92"))

                                    est_entry31 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    est_entry31['values'] = cplace_gstlist
                                    est_entry31.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=est_entry31,tags=("combo31"))

                                    es_label32 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label32,state=HIDDEN,tags=('label67'))

                                    es_label33 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label33,state=HIDDEN,tags=('label68'))

                                    es_label34 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label34,state=HIDDEN,tags=('label69'))

                                    es_label35 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label35,state=HIDDEN,tags=('label70'))

                                    es_label25 = Label(sr_Canvas_5,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label25,tags=('label40'))

                                    es_label26 = Label(sr_Canvas_5,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label26,tags=('label41'))

                                    es_label27 = Label(sr_Canvas_5,width=10,height=1,text="Estimate Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label27,tags=('label42'))

                                    est_entry8 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry8,tags=("entry23"))

                                    est_entry9 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry9,tags=("entry24"))

                                    est_entry10 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=est_entry10,tags=("entry25"))

                                    def es_saveEstimate():
                                        get_est_sql = "SELECT * FROM app1_estimate ORDER BY estimateid DESC LIMIT 1"
                                        fbcursor.execute(get_est_sql)
                                        get_est_data = fbcursor.fetchone()

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2[0]

                                        customer = es_custCombo.get()
                                        email = es_email.get()
                                        billingaddress = es_baddress.get("1.0","end-1c")
                                        estimatedate = es_estdate.get_date()
                                        expirationdate = es_expdate.get_date()
                                        placeofsupply = es_pofsupply.get()
                                        estimateno = es_esn.get()
                                        if est_entry1.get() == "Select Product" or est_entry1.get() == '':
                                            product = ''
                                        else:
                                            product = est_entry1.get()
                                        description = est_entry3.get()
                                        hsn = est_entry2.get()
                                        qty = est_entry4.get()
                                        rate = est_entry5.get()
                                        try:
                                            tax = split_gst(est_entry7.get())
                                        except:
                                            tax = 0
                                        total = est_entry6.get()
                                        taxamount = est_entry9.get()
                                        subtotal = est_entry8.get()
                                        estimatetotal = est_entry10.get()
                                        if est_entry11.get() == "Select Product" or est_entry11.get() == '':
                                            product1 = ''
                                        else:
                                            product1 = est_entry11.get()
                                        description1 = est_entry13.get()
                                        hsn1 = est_entry12.get()
                                        qty1 = est_entry14.get()
                                        rate1 = est_entry15.get()
                                        try:
                                            tax1 = split_gst(est_entry17.get()) 
                                        except:
                                            tax1 = 0
                                        total1 = est_entry16.get()
                                        if est_entry18.get() == "Select Product" or est_entry18.get() == '':
                                            product2 = ''
                                        else:
                                            product2 = est_entry18.get()
                                        description2 = est_entry20.get()
                                        hsn2 = est_entry19.get()
                                        qty2 = est_entry21.get()
                                        rate2 = est_entry22.get()
                                        try:
                                            tax2 = split_gst(est_entry24.get())
                                        except:
                                            tax2 = 0
                                        total2 = est_entry23.get()
                                        if est_entry25.get() == "Select Product" or est_entry25.get() == '':
                                            product3 = ''
                                        else:
                                            product3 = est_entry25.get()
                                        description3 = est_entry27.get()
                                        hsn3 = est_entry26.get()
                                        qty3 = est_entry28.get()
                                        rate3 = est_entry29.get()
                                        try:
                                            tax3 = split_gst(est_entry31.get())
                                        except:
                                            tax3 = 0
                                        total3 = est_entry30.get()
                                        cid_id = comp_data[0]

                                        if customer == "" or placeofsupply == "":
                                            pass
                                        else:
                                            ins_est_sql = "UPDATE app1_estimate SET customer=%s,email=%s,billingaddress=%s,estimatedate=%s,expirationdate=%s,placeofsupply=%s,product=%s,description=%s,hsn=%s,qty=%s,rate=%s,tax=%s,total=%s,taxamount=%s,subtotal=%s,estimatetotal=%s,product1=%s,description1=%s,hsn1=%s,qty1=%s,rate1=%s,tax1=%s,total1=%s,product2=%s,description2=%s,hsn2=%s,qty2=%s,rate2=%s,tax2=%s,total2=%s,product3=%s,description3=%s,hsn3=%s,qty3=%s,rate3=%s,tax3=%s,total3=%s WHERE estimateno=%s AND cid_id=%s"
                                            ins_est_val = (customer,email,billingaddress,estimatedate,expirationdate,placeofsupply,product,description,hsn,qty,rate,tax,total,taxamount,subtotal,estimatetotal,product1,description1,hsn1,qty1,rate1,tax1,total1,product2,description2,hsn2,qty2,rate2,tax2,total2,product3,description3,hsn3,qty3,rate3,tax3,total3,estimateno,cid_id)
                                            fbcursor.execute(ins_est_sql,ins_est_val)
                                            finsysdb.commit()

                                            sr_Frame_1.destroy()
                                            sr_Frame.grid(row=0,column=0,sticky='nsew')

                                            show_sr_treeData()

                                    

                                    save_btn = Button(sr_Canvas_5,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:es_saveEstimate())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button7")) 

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3"))
                                    #--------------
                                    es_label6 = Label(sr_Canvas_5,width=20,height=1,text="Estimate Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label6,tags=('label24'))

                                    es_label28 = Label(sr_Canvas_5,width=20,height=1,text="Expiration Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=es_label28,tags=('label43'))

                                    cwidth = root.winfo_screenwidth()

                                    es_estdate = DateEntry(sr_Canvas_5,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white')

                                    es_expdate = DateEntry(sr_Canvas_5,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f',foreground='white') 

                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(495,442,anchor='nw',window=es_estdate,tags=("date"))
                                        sr_Canvas_5.create_window(775,442,anchor='nw',window=es_expdate,tags=("date1"))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(370,455,anchor='nw',window=es_estdate,tags=("date"))
                                        sr_Canvas_5.create_window(580,455,anchor='nw',window=es_expdate,tags=("date1"))
                                    else:
                                        sr_Canvas_5.create_window(465,407,anchor='nw',window=es_estdate,tags=("date"))
                                        sr_Canvas_5.create_window(730,407,anchor='nw',window=es_expdate,tags=("date1"))
                                    
                                    es_custCombo.delete(0,END)
                                    es_custCombo.insert(0,get_est_data[1])
                                    es_email.delete(0,END)
                                    es_email.insert(0,get_est_data[2])
                                    es_baddress.delete("1.0","end-1c")
                                    es_baddress.insert("1.0",get_est_data[3])
                                    es_estdate.delete(0,END)
                                    es_estdate.insert(0,get_est_data[4])
                                    es_expdate.delete(0,END)
                                    es_expdate.insert(0,get_est_data[5])
                                    es_esn.delete(0,END)
                                    es_esn.insert(0,get_est_data[6])
                                    es_pofsupply.delete(0,END)
                                    es_pofsupply.insert(0,get_est_data[7])

                                    est_entry1.delete(0,END)
                                    est_entry1.insert(0,get_est_data[8])
                                    est_entry2.delete(0,END)
                                    est_entry2.insert(0,get_est_data[9])
                                    est_entry3.delete(0,END)
                                    est_entry3.insert(0,get_est_data[10])

                                    try:
                                        get_pro_sql1 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val1 = (est_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql1,get_pro_val1)
                                        get_pro_data1 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql2 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val2 = (est_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql2,get_pro_val2)
                                        get_pro_data2 = fbcursor.fetchone()
                                    except:
                                        pass
                                    if get_pro_sql1 is not None or get_pro_sql2 is not None:
                                        sr_Canvas_5.itemconfig("label67",state='normal')
                                        try:
                                            es_label32.config(text="Available Qty : " + get_pro_data1[7])
                                        except:
                                            pass
                                        try:
                                            es_label32.config(text="Available Qty : " + get_pro_data2[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label67",state='hidden')
                                    est_entry4.delete(0,END)
                                    est_entry4.insert(0,get_est_data[11])
                                    est_entry5.delete(0,END)
                                    est_entry5.insert(0,get_est_data[12])
                                    est_entry6.delete(0,END)
                                    est_entry6.insert(0,get_est_data[13])
                                    est_entry7.delete(0,END)
                                    est_entry7.insert(0,f'{get_est_data[14]}% GST({get_est_data[14]}%)')

                                    est_entry11.delete(0,END)
                                    est_entry11.insert(0,get_est_data[17])
                                    est_entry12.delete(0,END)
                                    est_entry12.insert(0,get_est_data[18])
                                    est_entry13.delete(0,END)
                                    est_entry13.insert(0,get_est_data[19])

                                    try:
                                        get_pro_sql3 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val3 = (est_entry11.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql3,get_pro_val3)
                                        get_pro_data3 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql4 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val4 = (est_entry11.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql4,get_pro_val4)
                                        get_pro_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql3 is not None or get_pro_sql4 is not None:
                                        sr_Canvas_5.itemconfig("label68",state='normal')
                                        try:
                                            es_label33.config(text="Available Qty : " + get_pro_data3[7])
                                        except:
                                            pass
                                        try:
                                            es_label33.config(text="Available Qty : " + get_pro_data4[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label68",state='hidden')
                                    est_entry14.delete(0,END)
                                    est_entry14.insert(0,get_est_data[20])
                                    est_entry15.delete(0,END)
                                    est_entry15.insert(0,get_est_data[21])
                                    est_entry16.delete(0,END)
                                    est_entry16.insert(0,get_est_data[22])
                                    est_entry17.delete(0,END)
                                    est_entry17.insert(0,f'{get_est_data[23]}% GST({get_est_data[23]}%)')

                                    est_entry18.delete(0,END)
                                    est_entry18.insert(0,get_est_data[24])
                                    est_entry19.delete(0,END)
                                    est_entry19.insert(0,get_est_data[25])
                                    est_entry20.delete(0,END)
                                    est_entry20.insert(0,get_est_data[26])

                                    try:
                                        get_pro_sql5 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val5 = (est_entry18.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql5,get_pro_val5)
                                        get_pro_data5 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql6 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val6 = (est_entry18.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql6,get_pro_val6)
                                        get_pro_data6 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql5 is not None or get_pro_sql6 is not None:
                                        sr_Canvas_5.itemconfig("label69",state='normal')
                                        try:
                                            es_label34.config(text="Available Qty : " + get_pro_data5[7])
                                        except:
                                            pass
                                        try:
                                            es_label34.config(text="Available Qty : " + get_pro_data6[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label69",state='hidden')
                                    est_entry21.delete(0,END)
                                    est_entry21.insert(0,get_est_data[27])
                                    est_entry22.delete(0,END)
                                    est_entry22.insert(0,get_est_data[28])
                                    est_entry23.delete(0,END)
                                    est_entry23.insert(0,get_est_data[29])
                                    est_entry24.delete(0,END)
                                    est_entry24.insert(0,f'{get_est_data[30]}% GST({get_est_data[30]}%)')

                                    est_entry25.delete(0,END)
                                    est_entry25.insert(0,get_est_data[31])
                                    est_entry26.delete(0,END)
                                    est_entry26.insert(0,get_est_data[32])
                                    est_entry27.delete(0,END)
                                    est_entry27.insert(0,get_est_data[33])

                                    try:
                                        get_pro_sql7 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val7 = (est_entry25.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql7,get_pro_val7)
                                        get_pro_data7 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql8 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val8 = (est_entry25.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql8,get_pro_val8)
                                        get_pro_data8 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql7 is not None or get_pro_sql8 is not None:
                                        sr_Canvas_5.itemconfig("label70",state='normal')
                                        try:
                                            es_label35.config(text="Available Qty : " + get_pro_data7[7])
                                        except:
                                            pass
                                        try:
                                            es_label35.config(text="Available Qty : " + get_pro_data8[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label70",state='hidden')
                                    est_entry28.delete(0,END)
                                    est_entry28.insert(0,get_est_data[34])
                                    est_entry29.delete(0,END)
                                    est_entry29.insert(0,get_est_data[35])
                                    est_entry30.delete(0,END)
                                    est_entry30.insert(0,get_est_data[36])
                                    est_entry31.delete(0,END)
                                    est_entry31.insert(0,f'{get_est_data[37]}% GST({get_est_data[37]}%)')

                                    est_entry8.delete(0,END)
                                    est_entry8.insert(0,get_est_data[15])
                                    est_entry9.delete(0,END)
                                    est_entry9.insert(0,get_est_data[38])
                                    est_entry10.delete(0,END)
                                    est_entry10.insert(0,get_est_data[16])
                                elif row[1] == "Delayed Charge":
                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    dc_label1 = Label(sr_Canvas_5,width=18,height=1,text="DELAYED CHARGE",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=dc_label1,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly5"))   

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_delayed_sql = "SELECT * FROM app1_delayedcharge WHERE delayedchargeno=%s AND cid_id=%s"
                                    get_delayed_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_delayed_sql,get_delayed_val)
                                    get_delayed_data = fbcursor.fetchone()

                                    dc_label2 = Label(sr_Canvas_5,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=dc_label2,tags=("label2"))

                                    dc_label3 = Label(sr_Canvas_5,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=dc_label3,tags=("label21"))

                                    dc_custCombo = ttk.Combobox(sr_Canvas_5,width=19,font=('arial 15'))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dc_custCombo,tags=("combo3"))

                                    dc_labeldcn = Label(sr_Canvas_5,width=15,height=1,text="Delayed charge No:",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_labeldcn,tags=('label107'))

                                    dc_dcn = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dc_dcn,tags=("entry112"))

                                    dc_label11 = Label(sr_Canvas_5,width=20,height=1,text="AMOUNT",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label11,tags=('label29'))

                                    dc_label12 = Label(sr_Canvas_5,width=20,height=1,text="0.00",font=('arial 14'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label12,tags=('label30'))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line83"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line84"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line85"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line86"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line87"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line88"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line89"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line90"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line91"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line92"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line93"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line94"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line95"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line96"))

                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line97"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line98"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line99"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line100"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line101"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line102"))
                                    sr_Canvas_5.create_line(0, 0, 0, 0, fill='gray',width=1,tags=("line103"))

                                    dc_label13 = Label(sr_Canvas_5,width=3,height=1,text="#",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label13,tags=('label89'))

                                    dc_label14 = Label(sr_Canvas_5,width=3,height=1,text="1",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label14,tags=('label90'))

                                    dc_label15 = Label(sr_Canvas_5,width=3,height=1,text="2",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label15,tags=('label91'))

                                    dc_label16 = Label(sr_Canvas_5,width=3,height=1,text="3",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label16,tags=('label92'))

                                    dc_label17 = Label(sr_Canvas_5,width=3,height=1,text="4",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label17,tags=('label93'))

                                    dc_label18 = Label(sr_Canvas_5,width=15,height=1,text="Product / Service",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label18,tags=('label94'))

                                    dc_label19 = Label(sr_Canvas_5,width=18,height=1,text="Description",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label19,tags=('label95'))

                                    dc_label20 = Label(sr_Canvas_5,width=10,height=1,text="Qty",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label20,tags=('label96'))

                                    dc_label21 = Label(sr_Canvas_5,width=10,height=1,text="Price",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label21,tags=('label97'))

                                    dc_label22 = Label(sr_Canvas_5,width=10,height=1,text="Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label22,tags=('label98'))

                                    dc_label23 = Label(sr_Canvas_5,width=10,height=1,text="Tax (%)",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label23,tags=('label99'))

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_inventory_sql = "SELECT * FROM app1_inventory WHERE cid_id=%s" 
                                    get_inventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_inventory_sql,get_inventory_val)
                                    get_inventory_data = fbcursor.fetchall()

                                    get_noninventory_sql = "SELECT * FROM app1_noninventory WHERE cid_id=%s" 
                                    get_noninventory_val = (comp_data[0],)                      
                                    fbcursor.execute(get_noninventory_sql,get_noninventory_val)
                                    get_noninventory_data = fbcursor.fetchall()

                                    get_bundle_sql = "SELECT * FROM app1_bundle WHERE cid_id=%s" 
                                    get_bundle_val = (comp_data[0],)                      
                                    fbcursor.execute(get_bundle_sql,get_bundle_val)
                                    get_bundle_data = fbcursor.fetchall()

                                    dc_product_list = []

                                    if not get_inventory_data:
                                        pass
                                    else:
                                        for i in get_inventory_data:
                                            dc_product_list.append(i[2])

                                    if not get_noninventory_data:
                                        pass
                                    else:
                                        for n in get_noninventory_data:
                                            dc_product_list.append(n[2])

                                    if not get_bundle_data:
                                        pass
                                    else:
                                        for b in get_bundle_data:
                                            dc_product_list.append(b[2])
                                    
                                    dc_product_list.insert(0,"Select Product")

                                    def dc_fetch_proDetails1(event):
                                        global get_pro_data3
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (dct_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (dct_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (dct_entry1.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label103",state='normal')
                                                dc_label24.config(text="Available Qty : " + get_pro_data[7])
                                                dct_entry2.delete(0,END)
                                                dct_entry2.insert(0,get_pro_data[11])
                                                dct_entry4.delete(0,END)
                                                dct_entry4.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label103",state='normal')
                                                dc_label24.config(text="Available Qty : " + get_pro_data1[17])
                                                dct_entry2.delete(0,END)
                                                dct_entry2.insert(0,get_pro_data1[7])
                                                dct_entry4.delete(0,END)
                                                dct_entry4.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label103",state='hidden')
                                                dct_entry2.delete(0,END)
                                                dct_entry2.insert(0,get_pro_data3[4])
                                                dct_entry4.delete(0,END)
                                                dct_entry4.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    

                                    dct_entry1 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry1["values"] = dc_product_list
                                    dct_entry1.current(0)
                                    dct_entry1.bind("<<ComboboxSelected>>",dc_fetch_proDetails1)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry1,tags=("combo32"))

                                    dct_entry2 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry2,tags=("entry93"))

                                    def dct_calculateTotal1(event,s):
                                        try:
                                            if s == 1:
                                                name = dct_entry1.get()
                                                qty = dct_entry3.get()
                                            elif s == 2:
                                                name = dct_entry7.get()
                                                qty = dct_entry9.get()
                                            elif s == 3:
                                                name = dct_entry13.get()
                                                qty = dct_entry15.get()
                                            elif s == 4:
                                                name = dct_entry19.get()
                                                qty = dct_entry21.get()

                                            if qty != 0:
                                                global tax_tot1,tax_tot2,tax_tot3,tax_tot4
                                                tax_tot1 = 0.0
                                                tax_tot2 = 0.0
                                                tax_tot3 = 0.0
                                                tax_tot4 = 0.0

                                                try:
                                                    get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql,get_pro_val)
                                                    get_pro_data = fbcursor.fetchone()

                                                    get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                                    get_pro_val1 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql1,get_pro_val1)
                                                    get_pro_data1 = fbcursor.fetchone()

                                                    get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                                    get_pro_val3 = (name,comp_data[0])
                                                    fbcursor.execute(get_pro_sql3,get_pro_val3)
                                                    get_pro_data3 = fbcursor.fetchone()
                                                except:
                                                    pass
                                                if s == 1:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        dct_entry5.delete(0,END)
                                                        dct_entry5.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        dct_entry5.delete(0,END)
                                                        dct_entry5.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        dct_entry5.delete(0,END)
                                                        dct_entry5.insert(0,tot)
                                                elif s == 2:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        dct_entry11.delete(0,END)
                                                        dct_entry11.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        dct_entry11.delete(0,END)
                                                        dct_entry11.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        dct_entry11.delete(0,END)
                                                        dct_entry11.insert(0,tot)
                                                elif s == 3:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        dct_entry17.delete(0,END)
                                                        dct_entry17.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        dct_entry17.delete(0,END)
                                                        dct_entry17.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        dct_entry17.delete(0,END)
                                                        dct_entry17.insert(0,tot)
                                                elif s == 4:
                                                    if get_pro_data is not None:
                                                        tot = int(get_pro_data[12]) * int(qty)
                                                        dct_entry23.delete(0,END)
                                                        dct_entry23.insert(0,tot)
                                                    elif get_pro_data1 is not None:
                                                        tot = int(get_pro_data1[8]) * int(qty)
                                                        dct_entry23.delete(0,END)
                                                        dct_entry23.insert(0,tot)
                                                    else:
                                                        tot = int(get_pro_data3[33]) * int(qty)
                                                        dct_entry23.delete(0,END)
                                                        dct_entry23.insert(0,tot)
                                                
                                                dct_entry25.delete(0,END)
                                                dct_entry26.delete(0,END)
                                                dct_entry27.delete(0,END)

                                                def split_gst(string):
                                                    pattern1 = r'\(+'
                                                    pattern2 = r'\%+'
                                                    split1 = re.split(pattern1,string)
                                                    split2 = re.split(pattern2,split1[1])
                                                    return split2

                                                #product gst -----------------------------
                                                try:
                                                    gst_value1 = split_gst(dct_entry6.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value2 = split_gst(dct_entry12.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value3 = split_gst(dct_entry18.get())
                                                except:
                                                    pass
                                                try:
                                                    gst_value4 = split_gst(dct_entry24.get())
                                                except:
                                                    pass


                                                try:
                                                    dct_entry25.insert(0,float(dct_entry5.get()) + float(dct_entry11.get()) + float(dct_entry17.get()) + float(dct_entry23.get()))
                                                    if dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                        ptax_total = 0
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        ptax_total = tax_tot1
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100
                                                        ptax_total = tax_tot2
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot4
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot2 + tax_tot3 + tax_tot4
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot3
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() == "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot3 + tax_tot4
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot3 + tax_tot4
                                                    elif dct_entry6.get() == "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot4
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() == "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot4
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() == "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot4
                                                    elif dct_entry6.get() != "Choose" and dct_entry12.get() != "Choose" and dct_entry18.get() != "Choose" and dct_entry24.get() != "Choose":
                                                        if gst_value1[0] == "0" or dct_entry6.get() == "Exempt GST(0%)" or dct_entry6.get() == "Out of Scope(0%)":
                                                            tax_tot1 = 0
                                                        else:
                                                            tax_tot1 = (float(dct_entry5.get()) * float(float((gst_value1[0]))))/100
                                                        
                                                        if gst_value2[0] == "0" or dct_entry12.get() == "Exempt GST(0%)" or dct_entry12.get() == "Out of Scope(0%)":
                                                            tax_tot2 = 0
                                                        else:
                                                            tax_tot2 = (float(dct_entry11.get()) * float(float((gst_value2[0]))))/100

                                                        if gst_value3[0] == "0" or dct_entry18.get() == "Exempt GST(0%)" or dct_entry18.get() == "Out of Scope(0%)":
                                                            tax_tot3 = 0
                                                        else:
                                                            tax_tot3 = (float(dct_entry17.get()) * float(float((gst_value3[0]))))/100

                                                        if gst_value4[0] == "0" or dct_entry24.get() == "Exempt GST(0%)" or dct_entry24.get() == "Out of Scope(0%)":
                                                            tax_tot4 = 0
                                                        else:
                                                            tax_tot4 = (float(dct_entry23.get()) * float(float((gst_value4[0]))))/100
                                                        ptax_total = tax_tot1 + tax_tot2 + tax_tot3 + tax_tot4

                                                    dct_entry26.insert(0,ptax_total)
                                                    dct_entry27.insert(0,float(dct_entry25.get()) + float(float(dct_entry26.get())))
                                                except:
                                                    pass
                                        except:
                                            pass

                                    dct_entry3 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry3.bind("<Key>",lambda event,sp = 1:dct_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry3,tags=("entry94"))

                                    dct_entry4 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry4,tags=("entry95"))

                                    dct_entry5 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry5.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry5,tags=("entry96"))

                                    dct_entry6 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    cplace_gstlist = ['Choose','28.0% GST(28%)','18.0% GST(18%)','12.0% GST(12%)','06.0% GST(06%)',
                                        '05.0% GST(05%)','03.0% GST(03%)','0.25% GST(0.25%)','0.0% GST(0%)','Exempt GST(0%)','Out of Scope(0%)']
                                    dct_entry6["values"] = cplace_gstlist
                                    dct_entry6.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry6,tags=("combo33"))

                                    def dc_fetch_proDetails2(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (dct_entry7.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (dct_entry7.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (dct_entry7.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #----------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label104",state='normal')
                                                dc_label25.config(text="Available Qty : " + get_pro_data[7])
                                                dct_entry8.delete(0,END)
                                                dct_entry8.insert(0,get_pro_data[11])
                                                dct_entry10.delete(0,END)
                                                dct_entry10.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label104",state='normal')
                                                dc_label25.config(text="Available Qty : " + get_pro_data1[17])
                                                dct_entry8.delete(0,END)
                                                dct_entry8.insert(0,get_pro_data1[7])
                                                dct_entry10.delete(0,END)
                                                dct_entry10.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label104",state='hidden')
                                                dct_entry8.delete(0,END)
                                                dct_entry8.insert(0,get_pro_data3[4])
                                                dct_entry10.delete(0,END)
                                                dct_entry10.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    dct_entry7 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry7["values"] = dc_product_list
                                    dct_entry7.current(0)
                                    dct_entry7.bind("<<ComboboxSelected>>",dc_fetch_proDetails2)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry7,tags=("combo34"))

                                    dct_entry8 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry8,tags=("entry97"))

                                    dct_entry9 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry9.bind("<Key>",lambda event,sp = 2:dct_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry9,tags=("entry98"))

                                    dct_entry10 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry10,tags=("entry99"))

                                    dct_entry11 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry11.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry11,tags=("entry100"))

                                    dct_entry12 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry12["values"] = cplace_gstlist
                                    dct_entry12.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry12,tags=("combo35"))

                                    def dc_fetch_proDetails3(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (dct_entry13.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (dct_entry13.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (dct_entry13.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label105",state='normal')
                                                dc_label26.config(text="Available Qty : " + get_pro_data[7])
                                                dct_entry14.delete(0,END)
                                                dct_entry14.insert(0,get_pro_data[11])
                                                dct_entry16.delete(0,END)
                                                dct_entry16.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label105",state='normal')
                                                dc_label26.config(text="Available Qty : " + get_pro_data1[17])
                                                dct_entry14.delete(0,END)
                                                dct_entry14.insert(0,get_pro_data1[7])
                                                dct_entry16.delete(0,END)
                                                dct_entry16.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label105",state='hidden')
                                                dct_entry14.delete(0,END)
                                                dct_entry14.insert(0,get_pro_data3[4])
                                                dct_entry16.delete(0,END)
                                                dct_entry16.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    dct_entry13 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry13["values"] = dc_product_list
                                    dct_entry13.current(0)
                                    dct_entry13.bind("<<ComboboxSelected>>",dc_fetch_proDetails3)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry13,tags=("combo36"))

                                    dct_entry14 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry14,tags=("entry101"))

                                    dct_entry15 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry15.bind("<Key>",lambda event,sp = 3:dct_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry15,tags=("entry102"))

                                    dct_entry16 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry16,tags=("entry103"))

                                    dct_entry17 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry17.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry17,tags=("entry104"))

                                    dct_entry18 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry18["values"] = cplace_gstlist
                                    dct_entry18.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry18,tags=("combo37"))

                                    def dc_fetch_proDetails4(event):
                                        try:
                                            get_pro_sql = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val = (dct_entry19.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql,get_pro_val)
                                            get_pro_data = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql1 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                            get_pro_val1 = (dct_entry19.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql1,get_pro_val1)
                                            get_pro_data1 = fbcursor.fetchone()
                                        except:
                                            pass

                                        try:
                                            get_pro_sql3 = "SELECT * FROM app1_bundle WHERE name=%s AND cid_id=%s"
                                            get_pro_val3 = (dct_entry19.get(),comp_data[0])
                                            fbcursor.execute(get_pro_sql3,get_pro_val3)
                                            get_pro_data3 = fbcursor.fetchone()
                                        except:
                                            pass

                                        #--------------------------------------------------------
                                        if get_pro_data is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label106",state='normal')
                                                dc_label27.config(text="Available Qty : " + get_pro_data[7])
                                                dct_entry20.delete(0,END)
                                                dct_entry20.insert(0,get_pro_data[11])
                                                dct_entry22.delete(0,END)
                                                dct_entry22.insert(0,get_pro_data[12])
                                            except:
                                                pass
                                        elif get_pro_data1 is not None:
                                            try:
                                                sr_Canvas_5.itemconfig("label106",state='normal')
                                                dc_label27.config(text="Available Qty : " + get_pro_data1[17])
                                                dct_entry20.delete(0,END)
                                                dct_entry20.insert(0,get_pro_data1[7])
                                                dct_entry22.delete(0,END)
                                                dct_entry22.insert(0,get_pro_data1[8])
                                            except:
                                                pass
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label106",state='hidden')
                                                dct_entry20.delete(0,END)
                                                dct_entry20.insert(0,get_pro_data3[4])
                                                dct_entry22.delete(0,END)
                                                dct_entry22.insert(0,get_pro_data3[33])
                                            except:
                                                pass

                                    dct_entry19 = ttk.Combobox(sr_Canvas_5,width=14,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry19["values"] = dc_product_list
                                    dct_entry19.current(0)
                                    dct_entry19.bind("<<ComboboxSelected>>",dc_fetch_proDetails4)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry19,tags=("combo38"))

                                    dct_entry20 = Entry(sr_Canvas_5,width=18,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry20,tags=("entry105"))

                                    dct_entry21 = Spinbox(sr_Canvas_5,width=8,justify=RIGHT,from_=0,to=100,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry21.bind("<Key>",lambda event,sp = 4:dct_calculateTotal1(event,sp))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry21,tags=("entry106"))

                                    dct_entry22 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry22,tags=("entry107"))

                                    dct_entry23 = Entry(sr_Canvas_5,width=17,font=('arial 15'),background='#2f516f',foreground='white')
                                    dct_entry23.insert(0,0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry23,tags=("entry108"))

                                    dct_entry24 = ttk.Combobox(sr_Canvas_5,width=11,font=('arial 15'),background='#2f516f',foreground='black')
                                    dct_entry24["values"] = cplace_gstlist
                                    dct_entry24.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=dct_entry24,tags=("combo39"))

                                    dc_label24 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label24,state=HIDDEN,tags=('label103'))

                                    dc_label25 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label25,state=HIDDEN,tags=('label104'))

                                    dc_label26 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label26,state=HIDDEN,tags=('label105'))

                                    dc_label27 = Label(sr_Canvas_5,width=17,height=1,text="",font=('arial 8'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label27,state=HIDDEN,tags=('label106'))

                                    dc_label28 = Label(sr_Canvas_5,width=10,height=1,text="Sub Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label28,tags=('label100'))

                                    dc_label29 = Label(sr_Canvas_5,width=10,height=1,text="Tax Amount",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label29,tags=('label101'))

                                    dc_label30 = Label(sr_Canvas_5,width=10,height=1,text="Grand Total",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label30,tags=('label102'))

                                    dct_entry25 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry25,tags=("entry109"))

                                    dct_entry26 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry26,tags=("entry110"))

                                    dct_entry27 = Entry(sr_Canvas_5,width=24,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=dct_entry27,tags=("entry111"))

                                    def dc_saveDelayed():
                                        get_dc_sql = "SELECT * FROM app1_delayedcharge ORDER BY delayedchargeid DESC LIMIT 1"
                                        fbcursor.execute(get_dc_sql)
                                        get_dc_data = fbcursor.fetchone()

                                        def split_gst(string):
                                            pattern1 = r'\(+'
                                            pattern2 = r'\%+'
                                            split1 = re.split(pattern1,string)
                                            split2 = re.split(pattern2,split1[1])
                                            return split2[0]

                                        customer = dc_custCombo.get()
                                        delayedchargedate = dc_dcdate.get_date()
                                        delayedchargeno = dc_dcn.get()
                                        
                                        if dct_entry1.get() == "Select Product" or dct_entry1.get() == "":
                                            prodorser = ''
                                        else:
                                            prodorser = dct_entry1.get()
                                        description = dct_entry2.get()
                                        qty = dct_entry3.get()
                                        rate = dct_entry4.get()
                                        total = dct_entry5.get()
                                        try:
                                            tax = split_gst(dct_entry6.get())
                                        except:
                                            tax = 0

                                        if dct_entry7.get() == "Select Product" or dct_entry7.get() == "":
                                            prodorser1 = ''
                                        else:
                                            prodorser1 = dct_entry7.get()
                                        description1 = dct_entry8.get()
                                        qty1 = dct_entry9.get()
                                        rate1 = dct_entry10.get()
                                        total1 = dct_entry11.get()
                                        try:
                                            tax1 = split_gst(dct_entry12.get())
                                        except:
                                            tax1 = 0

                                        if dct_entry13.get() == "Select Product" or dct_entry13.get() == "":
                                            prodorser2 = ''
                                        else:
                                            prodorser2 = dct_entry13.get()
                                        description2 = dct_entry14.get()
                                        qty2 = dct_entry15.get()
                                        rate2 = dct_entry16.get()
                                        total2 = dct_entry17.get()
                                        try:
                                            tax2 = split_gst(dct_entry18.get())
                                        except:
                                            tax2 = 0

                                        if dct_entry19.get() == "Select Product" or dct_entry19.get() == "":
                                            prodorser3 = ''
                                        else:
                                            prodorser3 = dct_entry19.get()
                                        description3 = dct_entry20.get()
                                        qty3 = dct_entry21.get()
                                        rate3 = dct_entry22.get()
                                        total3 = dct_entry23.get()
                                        try:
                                            tax3 = split_gst(dct_entry24.get())
                                        except:
                                            tax3 = 0

                                        taxamount = dct_entry26.get()
                                        subtotal = dct_entry25.get()
                                        grandtotal = dct_entry27.get()
                                        cid_id = comp_data[0]

                                        if customer == "":
                                            pass
                                        else:
                                            ins_dc_sql = "UPDATE app1_delayedcharge SET customer=%s,delayedchargedate=%s,prodorser=%s,description=%s,qty=%s,rate=%s,total=%s,tax=%s,prodorser1=%s,description1=%s,qty1=%s,rate1=%s,total1=%s,tax1=%s,prodorser2=%s,description2=%s,qty2=%s,rate2=%s,total2=%s,tax2=%s,prodorser3=%s,description3=%s,qty3=%s,rate3=%s,total3=%s,tax3=%s,taxamount=%s,subtotal=%s,grandtotal=%s WHERE delayedchargeno=%s AND cid_id=%s"
                                            ins_dc_val = (customer,delayedchargedate,prodorser,description,qty,rate,total,tax,prodorser1,description1,qty1,rate1,total1,tax1,prodorser2,description2,qty2,rate2,total2,tax2,prodorser3,description3,qty3,rate3,total3,tax3,taxamount,subtotal,grandtotal,delayedchargeno,cid_id)
                                            fbcursor.execute(ins_dc_sql,ins_dc_val)
                                            finsysdb.commit()

                                            sr_Frame_1.destroy()
                                            sr_Frame.grid(row=0,column=0,sticky='nsew')

                                            show_sr_treeData()

                                    save_btn = Button(sr_Canvas_5,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:dc_saveDelayed())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button8")) 

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3"))

                                    dc_label31 = Label(sr_Canvas_5,width=20,height=1,text="Delayed charge date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=dc_label31,tags=('label23'))

                                    dc_dcdate = DateEntry(sr_Canvas_5,width=19,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f')

                                    cwidth = root.winfo_screenwidth()

                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(122,442,anchor='nw',window=dc_dcdate,tags=("date2"))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(92,455,anchor='nw',window=dc_dcdate,tags=("date2"))
                                    else:
                                        sr_Canvas_5.create_window(115,407,anchor='nw',window=dc_dcdate,tags=("date2"))
                                    
                                    
                                    dc_custCombo.delete(0,END)
                                    dc_custCombo.insert(0,get_delayed_data[1])
                                    dc_dcdate.delete(0,END)
                                    dc_dcdate.insert(0,get_delayed_data[2])
                                    dc_dcn.delete(0,END)
                                    dc_dcn.insert(0,get_delayed_data[3])

                                    dct_entry1.delete(0,END)
                                    dct_entry1.insert(0,get_delayed_data[4])
                                    dct_entry2.delete(0,END)
                                    dct_entry2.insert(0,get_delayed_data[5])

                                    try:
                                        get_pro_sql1 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val1 = (dct_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql1,get_pro_val1)
                                        get_pro_data1 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql2 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val2 = (dct_entry1.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql2,get_pro_val2)
                                        get_pro_data2 = fbcursor.fetchone()
                                    except:
                                        pass
                                    if get_pro_sql1 is not None or get_pro_sql2 is not None:
                                        sr_Canvas_5.itemconfig("label103",state='normal')
                                        try:
                                            dc_label24.config(text="Available Qty : " + get_pro_data1[7])
                                        except:
                                            pass
                                        try:
                                            dc_label24.config(text="Available Qty : " + get_pro_data2[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label103",state='hidden')
                                    dct_entry3.delete(0,END)
                                    dct_entry3.insert(0,get_delayed_data[6])
                                    dct_entry4.delete(0,END)
                                    dct_entry4.insert(0,get_delayed_data[7])
                                    dct_entry5.delete(0,END)
                                    dct_entry5.insert(0,get_delayed_data[9])
                                    dct_entry6.delete(0,END)
                                    dct_entry6.insert(0,f'{get_delayed_data[8]}% GST({get_delayed_data[8]}%)')

                                    dct_entry7.delete(0,END)
                                    dct_entry7.insert(0,get_delayed_data[12])
                                    dct_entry8.delete(0,END)
                                    dct_entry8.insert(0,get_delayed_data[13])
                                    try:
                                        get_pro_sql3 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val3 = (dct_entry7.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql3,get_pro_val3)
                                        get_pro_data3 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql4 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val4 = (dct_entry7.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql4,get_pro_val4)
                                        get_pro_data4 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql3 is not None or get_pro_sql4 is not None:
                                        sr_Canvas_5.itemconfig("label104",state='normal')
                                        try:
                                            dc_label25.config(text="Available Qty : " + get_pro_data3[7])
                                        except:
                                            pass
                                        try:
                                            dc_label25.config(text="Available Qty : " + get_pro_data4[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label104",state='hidden')
                                    dct_entry9.delete(0,END)
                                    dct_entry9.insert(0,get_delayed_data[14])
                                    dct_entry10.delete(0,END)
                                    dct_entry10.insert(0,get_delayed_data[15])
                                    dct_entry11.delete(0,END)
                                    dct_entry11.insert(0,get_delayed_data[16])
                                    dct_entry12.delete(0,END)
                                    dct_entry12.insert(0,f'{get_delayed_data[17]}% GST({get_delayed_data[17]}%)')

                                    dct_entry13.delete(0,END)
                                    dct_entry13.insert(0,get_delayed_data[18])
                                    dct_entry14.delete(0,END)
                                    dct_entry14.insert(0,get_delayed_data[19])

                                    try:
                                        get_pro_sql5 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val5 = (dct_entry13.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql5,get_pro_val5)
                                        get_pro_data5 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql6 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val6 = (dct_entry13.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql6,get_pro_val6)
                                        get_pro_data6 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql5 is not None or get_pro_sql6 is not None:
                                        sr_Canvas_5.itemconfig("label105",state='normal')
                                        try:
                                            dc_label26.config(text="Available Qty : " + get_pro_data5[7])
                                        except:
                                            pass
                                        try:
                                            dc_label26.config(text="Available Qty : " + get_pro_data6[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label105",state='hidden')
                                    dct_entry15.delete(0,END)
                                    dct_entry15.insert(0,get_delayed_data[20])
                                    dct_entry16.delete(0,END)
                                    dct_entry16.insert(0,get_delayed_data[21])
                                    dct_entry17.delete(0,END)
                                    dct_entry17.insert(0,get_delayed_data[22])
                                    dct_entry18.delete(0,END)
                                    dct_entry18.insert(0,f'{get_delayed_data[23]}% GST({get_delayed_data[23]}%)')

                                    dct_entry19.delete(0,END)
                                    dct_entry19.insert(0,get_delayed_data[24])
                                    dct_entry20.delete(0,END)
                                    dct_entry20.insert(0,get_delayed_data[25])

                                    try:
                                        get_pro_sql7 = "SELECT * FROM app1_inventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val7 = (dct_entry19.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql7,get_pro_val7)
                                        get_pro_data7 = fbcursor.fetchone()
                                    except:
                                        pass

                                    try:
                                        get_pro_sql8 = "SELECT * FROM app1_noninventory WHERE name=%s AND cid_id=%s"
                                        get_pro_val8 = (dct_entry19.get(),comp_data[0])
                                        fbcursor.execute(get_pro_sql8,get_pro_val8)
                                        get_pro_data8 = fbcursor.fetchone()
                                    except:
                                        pass

                                    if get_pro_sql7 is not None or get_pro_sql8 is not None:
                                        sr_Canvas_5.itemconfig("label106",state='normal')
                                        try:
                                            dc_label27.config(text="Available Qty : " + get_pro_data7[7])
                                        except:
                                            pass
                                        try:
                                            dc_label27.config(text="Available Qty : " + get_pro_data8[17])
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label106",state='hidden')
                                    dct_entry21.delete(0,END)
                                    dct_entry21.insert(0,get_delayed_data[26])
                                    dct_entry22.delete(0,END)
                                    dct_entry22.insert(0,get_delayed_data[27])
                                    dct_entry23.delete(0,END)
                                    dct_entry23.insert(0,get_delayed_data[28])
                                    dct_entry24.delete(0,END)
                                    dct_entry24.insert(0,f'{get_delayed_data[29]}% GST({get_delayed_data[29]}%)')

                                    dct_entry25.delete(0,END)
                                    dct_entry25.insert(0,get_delayed_data[10])
                                    dct_entry26.delete(0,END)
                                    dct_entry26.insert(0,get_delayed_data[30])
                                    dct_entry27.delete(0,END)
                                    dct_entry27.insert(0,get_delayed_data[11])
                                elif row[1] == "Time Activity":
                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    ta_label1 = Label(sr_Canvas_5,width=18,height=1,text="EDIT TIME ACTIVITY",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=ta_label1,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly4"))   

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_timeact_sql = "SELECT * FROM app1_timeactsale WHERE timeactsaleid=%s AND cid_id=%s"
                                    get_timeact_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_timeact_sql,get_timeact_val)
                                    get_timeact_data = fbcursor.fetchone()

                                    ta_image = Image.open(r'images/time.png')
                                    resize_img = ta_image.resize((360,560))
                                    time_img = ImageTk.PhotoImage(resize_img)
                                    img_label = Label(sr_Canvas_5,image=time_img,bg="#1b3857")
                                    img_label.image = time_img
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=img_label,tags=('image1'))

                                    ta_label3 = Label(sr_Canvas_5,width=10,height=1,text="Name",font=('arial 12'),background='#1b3857',anchor="c",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=ta_label3,tags=('label56'))

                                    ta_supplier = ttk.Combobox(sr_Canvas_5,width=30,font=('arial 15'),background='#2f516f',foreground='black')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_supplier,tags=("combo9"))

                                    ta_label4 = Label(sr_Canvas_5,width=20,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label4,tags=("label57"))

                                    ta_custCombo = ttk.Combobox(sr_Canvas_5,width=65,font=('arial 15'))
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_custCombo,tags=("combo10"))

                                    ta_label5 = Label(sr_Canvas_5,width=20,height=1,text="billable(/hr)",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label5,tags=("label58"))

                                    def ta_billable(event):
                                        if ta_billCombo.get() == 'Yes':
                                            sr_Canvas_5.itemconfig("entry34",state='normal')
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("entry34",state='hidden')
                                            except:
                                                pass

                                    ta_billCombo = ttk.Combobox(sr_Canvas_5,width=30,font=('arial 15'))
                                    ta_billCombo['values'] = ['Yes','No',]
                                    ta_billCombo.current(0)
                                    ta_billCombo.bind("<<ComboboxSelected>>",ta_billable)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_billCombo,tags=("combo11"))

                                    ta_unknown = Entry(sr_Canvas_5,width=31,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_unknown,tags=("entry34"))

                                    ta_label6 = Label(sr_Canvas_5,width=20,height=1,text="Enter start and end time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label6,tags=("label59"))

                                    def ta_startend(event):
                                        if ta_startendCombo.get() == 'Yes':
                                            sr_Canvas_5.itemconfig("label60",state='normal')
                                            sr_Canvas_5.itemconfig("label61",state='normal')
                                            sr_Canvas_5.itemconfig("entry35",state='normal')
                                            sr_Canvas_5.itemconfig("entry54",state='normal')
                                            sr_Canvas_5.itemconfig("entry36",state='normal')
                                            sr_Canvas_5.itemconfig("entry55",state='normal')
                                        else:
                                            try:
                                                sr_Canvas_5.itemconfig("label60",state='hidden')
                                                sr_Canvas_5.itemconfig("label61",state='hidden')
                                                sr_Canvas_5.itemconfig("entry35",state='hidden')
                                                sr_Canvas_5.itemconfig("entry54",state='hidden')
                                                sr_Canvas_5.itemconfig("entry36",state='hidden')
                                                sr_Canvas_5.itemconfig("entry55",state='hidden')
                                            except:
                                                pass

                                    ta_startendCombo = ttk.Combobox(sr_Canvas_5,width=20,font=('arial 15'))
                                    ta_startendCombo['values'] = ['Yes','No',]
                                    ta_startendCombo.current(0)
                                    ta_startendCombo.bind("<<ComboboxSelected>>",ta_startend)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_startendCombo,tags=("combo12"))

                                    ta_label7 = Label(sr_Canvas_5,width=20,height=1,text="Start time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label7,tags=("label60"))

                                    ta_start1 = ttk.Combobox(sr_Canvas_5,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_start1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                                    ,"14","15","16","17","18","19","20","21","22","23"]
                                    ta_start1.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_start1,tags=("entry35"))

                                    ta_start2 = ttk.Combobox(sr_Canvas_5,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_start2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                                    '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                                    '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                                    '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                                    '59']
                                    ta_start2.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_start2,tags=("entry54"))

                                    ta_label8 = Label(sr_Canvas_5,width=20,height=1,text="End time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label8,tags=("label61"))

                                    ta_end1 = ttk.Combobox(sr_Canvas_5,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_end1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                                    ,"14","15","16","17","18","19","20","21","22","23"]
                                    ta_end1.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_end1,tags=("entry36"))

                                    ta_end2 = ttk.Combobox(sr_Canvas_5,width=8,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_end2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                                    '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                                    '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                                    '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                                    '59']
                                    ta_end2.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_end2,tags=("entry55"))

                                    ta_label9 = Label(sr_Canvas_5,width=20,height=1,text="Time",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label9,tags=("label62"))

                                    ta_time1 = ttk.Combobox(sr_Canvas_5,width=31,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_time1["values"] = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13"
                                    ,"14","15","16","17","18","19","20","21","22","23"]
                                    ta_time1.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_time1,tags=("entry37"))

                                    ta_time2 = ttk.Combobox(sr_Canvas_5,width=31,font=('arial 15'),background='#2f516f',foreground='black')
                                    ta_time2["values"] = ['00','01','02','03','04','05','06','07','08','09','10',
                                    '11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26',
                                    '27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42',
                                    '43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58',
                                    '59']
                                    ta_time2.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_time2,tags=("entry56"))

                                    ta_label10 = Label(sr_Canvas_5,width=20,height=1,text="Description",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=ta_label10,tags=("label63"))

                                    ta_desc = Text(sr_Canvas_5,width=67,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=ta_desc,tags=("entry38"))

                                    def sr_saveTimeactivity():
                                        timdatesale = ta_date.get_date()
                                        timenamesale = ta_supplier.get()
                                        timecustsale = ta_custCombo.get()
                                        timechecksale = ta_billCombo.get()
                                        
                                        timecheckksale = ta_startendCombo.get()
                                        if timechecksale == 'No':
                                            timebillsale = ''
                                        else:
                                            timebillsale = ta_unknown.get()
                                        if timecheckksale == 'No':
                                            timestartsale = ''
                                            timeendsale = ''
                                        else:
                                            timestartsale = ta_start1.get() + ":" + ta_start2.get()
                                            timeendsale = ta_end1.get() + ":" + ta_end2.get()
                                        tymesale = ta_time1.get() + ":" + ta_time2.get()
                                        timedessale = ta_desc.get("1.0","end-1c")

                                        if timenamesale == "Select Supplier" or timecustsale == "Select Customer" or tymesale == '' or timedessale == '':
                                            pass
                                        else:
                                            ins_ta_sql = "UPDATE app1_timeactsale SET timdatesale=%s,timenamesale=%s,timecustsale=%s,timechecksale=%s,timebillsale=%s,timecheckksale=%s,timestartsale=%s,timeendsale=%s,tymesale=%s,timedessale=%s WHERE timeactsaleid=%s AND cid_id=%s"                                      
                                            ins_ta_val = (timdatesale,timenamesale,timecustsale,timechecksale,timebillsale,timecheckksale,timestartsale,timeendsale,tymesale,timedessale,get_timeact_data[0],comp_data[0])
                                            fbcursor.execute(ins_ta_sql,ins_ta_val)
                                            finsysdb.commit()
                                            sr_Frame_1.destroy()
                                            sr_Frame.grid(row=0,column=0,sticky='nsew')

                                            show_sr_treeData()



                                    save_btn = Button(sr_Canvas_5,text="Submit Form",font=('arial 12 bold'),width=20,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_saveTimeactivity())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button11"))

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3"))

                                    ta_label2 = Label(sr_Canvas_5,width=20,height=1,text="Date",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=ta_label2,tags=('label55'))

                                    ta_date = DateEntry(sr_Canvas_5,width=30,date_pattern="yyyy-mm-dd",font=('arial 15'),background='#2f516f')
                                    cwidth = root.winfo_screenwidth()

                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(122,442,anchor='nw',window=ta_date,tags=("date3"))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(92,455,anchor='nw',window=ta_date,tags=("date3"))
                                    else:
                                        sr_Canvas_5.create_window(434,265,anchor='nw',window=ta_date,tags=("date3"))
                                    
                                    ta_date.delete(0,END)
                                    ta_date.insert(0,get_timeact_data[1])
                                    ta_supplier.delete(0,END)
                                    ta_supplier.insert(0,get_timeact_data[2])
                                    ta_custCombo.delete(0,END)
                                    ta_custCombo.insert(0,get_timeact_data[3])
                                    ta_billCombo.delete(0,END)
                                    ta_billCombo.insert(0,get_timeact_data[4])
                                    ta_startendCombo.delete(0,END)
                                    ta_startendCombo.insert(0,get_timeact_data[6])
                                    if get_timeact_data[4] == "No":
                                        try:
                                            sr_Canvas_5.itemconfig("entry34",state='hidden')
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("entry34",state='normal')
                                        ta_unknown.delete(0,END)
                                        ta_unknown.insert(0,get_timeact_data[5])
                                    
                                    if get_timeact_data[6] == "No":
                                        try:
                                            sr_Canvas_5.itemconfig("label60",state='hidden')
                                            sr_Canvas_5.itemconfig("label61",state='hidden')
                                            sr_Canvas_5.itemconfig("entry35",state='hidden')
                                            sr_Canvas_5.itemconfig("entry54",state='hidden')
                                            sr_Canvas_5.itemconfig("entry36",state='hidden')
                                            sr_Canvas_5.itemconfig("entry55",state='hidden')
                                        except:
                                            pass
                                    else:
                                        sr_Canvas_5.itemconfig("label60",state='normal')
                                        sr_Canvas_5.itemconfig("label61",state='normal')
                                        sr_Canvas_5.itemconfig("entry35",state='normal')
                                        sr_Canvas_5.itemconfig("entry54",state='normal')
                                        sr_Canvas_5.itemconfig("entry36",state='normal')
                                        sr_Canvas_5.itemconfig("entry55",state='normal')

                                        st1 = (get_timeact_data[7]).split(":")[0]
                                        st2 = (get_timeact_data[7]).split(":")[-1]
                                        ta_start1.delete(0,END)
                                        ta_start1.insert(0,st1)
                                        ta_start2.delete(0,END)
                                        ta_start2.insert(0,st2)

                                        et1 = (get_timeact_data[8]).split(":")[0]
                                        et2 = (get_timeact_data[8]).split(":")[-1]
                                        ta_end1.delete(0,END)
                                        ta_end1.insert(0,et1)
                                        ta_end2.delete(0,END)
                                        ta_end2.insert(0,et2)

                                    t1 = (get_timeact_data[9]).split(":")[0]
                                    t2 = (get_timeact_data[9]).split(":")[-1]
                                    ta_time1.delete(0,END)
                                    ta_time1.insert(0,t1)
                                    ta_time2.delete(0,END)
                                    ta_time2.insert(0,t2)
                                    ta_desc.delete("1.0","end-1c")
                                    ta_desc.insert("1.0",get_timeact_data[10])
                                elif row[1] == "Payment":
                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                    rp_label = Label(sr_Canvas_5,width=18,height=1,text="RECIEVE PAYMENT",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=rp_label,tags=("label1"))
                                    sr_Canvas_5.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                    sr_Canvas_5.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                    rp_label1 = Label(sr_Canvas_5,width=18,height=1,text="Fin sYs",font=('arial 25'),background='#1b3857',fg="white")
                                    sr_Canvas_5.create_window(0,0,anchor="c",window=rp_label1,tags=("label2"))

                                    rp_label2 = Label(sr_Canvas_5,width=10,height=1,text="Customer",font=('arial 12'),background='#1b3857',fg="white",anchor='w')
                                    sr_Canvas_5.create_window(0,0,window=rp_label2,tags=("label3"))

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    cust_sql = "SELECT firstname,lastname FROM app1_customer WHERE cid_id=%s"
                                    cust_val = (comp_data[0],)
                                    fbcursor.execute(cust_sql,cust_val)
                                    cust_data = fbcursor.fetchall()

                                    cust_list = []
                                    if not cust_data:
                                        cust_list.append('Select Customer')
                                    else:
                                        for c in cust_data:
                                            cust_list.append(c[0] + " " + c[1])
                                        cust_list.insert(0,'Select Customer')

                                    def rp_fetch_custDetails(event):
                                        cust_name = rp_custCombo.get()
                                        cust_fname = cust_name.split(" ")[0]
                                        cust_lname = cust_name.split(" ")[1]

                                        cust_sql = "SELECT email FROM app1_customer WHERE firstname=%s and lastname=%s and cid_id=%s"
                                        cust_val = (cust_fname,cust_lname,comp_data[0])
                                        fbcursor.execute(cust_sql,cust_val)
                                        cust_data = fbcursor.fetchone()

                                        inv_sql = "SELECT * FROM app1_invoice WHERE customername=%s and cid_id=%s"
                                        inv_val = (cust_name,comp_data[0])
                                        fbcursor.execute(inv_sql,inv_val)
                                        inv_data = fbcursor.fetchall()

                                        if not cust_data:
                                            pass
                                        else:
                                            rp_email.delete(0,END)
                                            rp_email.insert(0,cust_data[0])

                                        if not inv_data:
                                            pass
                                        else:
                                            count = 1
                                            for i in inv_data:
                                                rp_tree.insert(parent='',index='end',iid=i,text='',values=(count,str(i[3]) + " " + i[5],i[6],i[17],i[41],0))
                                                count += 1
                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT * FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    get_est_sql = "SELECT * FROM app1_payment WHERE refno=%s AND cid_id=%s"
                                    get_est_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_est_sql,get_est_val)
                                    get_pym_data = fbcursor.fetchone()
                                    
                                    rp_custCombo = ttk.Combobox(sr_Canvas_5,width=15,font=('arial 15'))
                                    rp_custCombo['values'] = cust_list
                                    rp_custCombo.current(0)
                                    rp_custCombo.delete(0,END)
                                    rp_custCombo.insert(0,get_pym_data[1])
                                    rp_custCombo.bind("<<ComboboxSelected>>",rp_fetch_custDetails)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_custCombo,tags=("combo1"))

                                    def sr_addCustomer():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame_2 = Frame(tab3_1,)
                                        sr_Frame_2.grid(row=0,column=0,sticky='nsew')

                                        def responsive_widgets2(event):
                                            dwidth = event.width
                                            dheight = event.height
                                            dcanvas = event.widget
                                            
                                            r1 = 25
                                            x1 = dwidth/63
                                            x2 = dwidth/1.021
                                            y1 = dheight/14 
                                            y2 = dheight/3.505

                                            dcanvas.coords("poly1",x1 + r1,y1,
                                            x1 + r1,y1,
                                            x2 - r1,y1,
                                            x2 - r1,y1,     
                                            x2,y1,     
                                            #--------------------
                                            x2,y1 + r1,     
                                            x2,y1 + r1,     
                                            x2,y2 - r1,     
                                            x2,y2 - r1,     
                                            x2,y2,
                                            #--------------------
                                            x2 - r1,y2,     
                                            x2 - r1,y2,     
                                            x1 + r1,y2,
                                            x1 + r1,y2,
                                            x1,y2,
                                            #--------------------
                                            x1,y2 - r1,
                                            x1,y2 - r1,
                                            x1,y1 + r1,
                                            x1,y1 + r1,
                                            x1,y1,
                                            )

                                            dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                            
                                            r2 = 25
                                            x11 = dwidth/63
                                            x21 = dwidth/1.021
                                            y11 = dheight/2.8
                                            y21 = dheight/0.6


                                            dcanvas.coords("poly2",x11 + r2,y11,
                                            x11 + r2,y11,
                                            x21 - r2,y11,
                                            x21 - r2,y11,     
                                            x21,y11,     
                                            #--------------------
                                            x21,y11 + r2,     
                                            x21,y11 + r2,     
                                            x21,y21 - r2,     
                                            x21,y21 - r2,     
                                            x21,y21,
                                            #--------------------
                                            x21 - r2,y21,     
                                            x21 - r2,y21,     
                                            x11 + r2,y21,
                                            x11 + r2,y21,
                                            x11,y21,
                                            #--------------------
                                            x11,y21 - r2,
                                            x11,y21 - r2,
                                            x11,y11 + r2,
                                            x11,y11 + r2,
                                            x11,y11,
                                            )

                                            dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                            dcanvas.coords("label2",dwidth/6,dheight/2.4)
                                            dcanvas.coords("label3",dwidth/8.2,dheight/2)
                                            dcanvas.coords("label4",dwidth/2.8,dheight/2)
                                            dcanvas.coords("label5",dwidth/1.7,dheight/2)
                                            dcanvas.coords("label6",dwidth/8.2,dheight/1.66)
                                            dcanvas.coords("label7",dwidth/2.8,dheight/1.66)
                                            dcanvas.coords("label8",dwidth/8.2,dheight/1.42)
                                            dcanvas.coords("label9",dwidth/2.8,dheight/1.42)
                                            dcanvas.coords("label10",dwidth/1.7,dheight/1.42)
                                            dcanvas.coords("label11",dwidth/8.2,dheight/1.24)
                                            dcanvas.coords("label12",dwidth/2.8,dheight/1.24)
                                            dcanvas.coords("label13",dwidth/1.7,dheight/1.24)
                                            dcanvas.coords("label14",dwidth/5.97,dheight/1.09)
                                            dcanvas.coords("label15",dwidth/8.2,dheight/0.98)
                                            dcanvas.coords("label16",dwidth/1.71,dheight/0.98)
                                            dcanvas.coords("label17",dwidth/1.58,dheight/1.09)
                                            dcanvas.coords("label18",dwidth/8.2,dheight/0.824)
                                            dcanvas.coords("label19",dwidth/2.62,dheight/0.824)
                                            dcanvas.coords("label20",dwidth/1.7,dheight/0.824)
                                            dcanvas.coords("label21",dwidth/1.185,dheight/0.824)
                                            dcanvas.coords("label22",dwidth/8.2,dheight/0.76)
                                            dcanvas.coords("label23",dwidth/2.62,dheight/0.76)
                                            dcanvas.coords("label24",dwidth/1.7,dheight/0.76)
                                            dcanvas.coords("label25",dwidth/1.185,dheight/0.76)
                                            dcanvas.coords("label26",dwidth/1.28,dheight/1.087)
                                            dcanvas.coords("label27",dwidth/6.3,dheight/0.699)

                                            dcanvas.coords("line1",dwidth/21,dheight/2.2,dwidth/1.055,dheight/2.2)

                                            dcanvas.coords("combo1",dwidth/20,dheight/1.9)
                                            dcanvas.coords("combo2",dwidth/20,dheight/1.37)

                                            dcanvas.coords("entry2",dwidth/3.52,dheight/1.9)
                                            dcanvas.coords("entry3",dwidth/1.94,dheight/1.9)
                                            dcanvas.coords("entry4",dwidth/20,dheight/1.6)
                                            dcanvas.coords("entry5",dwidth/3.52,dheight/1.6)
                                            dcanvas.coords("entry6",dwidth/3.52,dheight/1.38)
                                            dcanvas.coords("entry7",dwidth/1.94,dheight/1.38)
                                            dcanvas.coords("entry8",dwidth/20,dheight/1.21)
                                            dcanvas.coords("entry9",dwidth/3.52,dheight/1.21)
                                            dcanvas.coords("entry10",dwidth/1.94,dheight/1.21)
                                            dcanvas.coords("entry11",dwidth/20,dheight/0.96)
                                            dcanvas.coords("entry12",dwidth/1.95,dheight/0.96)
                                            dcanvas.coords("entry13",dwidth/20,dheight/0.81)
                                            dcanvas.coords("entry14",dwidth/3.23,dheight/0.81)
                                            dcanvas.coords("entry15",dwidth/1.94,dheight/0.81)
                                            dcanvas.coords("entry16",dwidth/1.296,dheight/0.81)
                                            dcanvas.coords("entry17",dwidth/20,dheight/0.749)
                                            dcanvas.coords("entry18",dwidth/3.23,dheight/0.749)
                                            dcanvas.coords("entry19",dwidth/1.94,dheight/0.749)
                                            dcanvas.coords("entry20",dwidth/1.296,dheight/0.749)

                                            dcanvas.coords("check1",dwidth/1.45,dheight/1.11)
                                            dcanvas.coords("check2",dwidth/20,dheight/0.71)

                                            dcanvas.coords("button1",dwidth/2,dheight/0.655)
                                            dcanvas.coords("button2",dwidth/27,dheight/3)

                                        sr_Canvas_2 = Canvas(sr_Frame_2,bg='#2f516f',scrollregion=(0,0,700,1200))

                                        sr_Frame_2.grid_columnconfigure(0,weight=1)
                                        sr_Frame_2.grid_rowconfigure(0,weight=1)

                                        sr_Scroll_2 = Scrollbar(sr_Frame_2,orient=VERTICAL)
                                        sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                        sr_Scroll_2.config(command=sr_Canvas_2.yview)
                                        sr_Canvas_2.bind("<Configure>", responsive_widgets2)
                                        sr_Canvas_2.config(yscrollcommand=sr_Scroll_2.set)
                                        sr_Canvas_2.grid(row=0,column=0,sticky='nsew')

                                        sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                        cust_label1 = Label(sr_Canvas_2,width=18,height=1,text="ADD CUSTOMER",font=('arial 25'),background='#1b3857',fg="white")
                                        sr_Canvas_2.create_window(0,0,anchor="c",window=cust_label1,tags=("label1"))
                                        sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                        sr_Canvas_2.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                        cust_label2 = Label(sr_Canvas_2,width=20,height=1,text="Customer Information",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label2,tags=('label2'))

                                        sr_Canvas_2.create_line(0,0,0,0,fill='gray',width=1,tags=("line1"))

                                        cust_label3 = Label(sr_Canvas_2,width=20,height=1,text="Title",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label3,tags=('label3'))

                                        cust_title = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                        cust_title['values'] = ['Mr','Mrs','Miss','Ms',]
                                        cust_title.current(0)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_title,tags=("combo1"))

                                        cust_label4 = Label(sr_Canvas_2,width=20,height=1,text="First name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label4,tags=('label4'))

                                        cust_fname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_fname,tags=("entry2"))

                                        cust_label5 = Label(sr_Canvas_2,width=20,height=1,text="Last name",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label5,tags=('label5'))

                                        cust_lname = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_lname,tags=("entry3"))

                                        cust_label6 = Label(sr_Canvas_2,width=20,height=1,text="Company",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label6,tags=('label6'))

                                        cust_company = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_company,tags=("entry4"))

                                        cust_label7 = Label(sr_Canvas_2,width=20,height=1,text="Location",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label7,tags=('label7'))

                                        cust_location = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_location,tags=("entry5"))

                                        cust_label8 = Label(sr_Canvas_2,width=20,height=1,text="GST type",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label8,tags=('label8'))

                                        def select_GSTtype(event):
                                            if cust_gtype.get() == 'GST unregistered' or cust_gtype.get() == 'Consumer' or cust_gtype.get() == 'Overseas':
                                                sr_Canvas_2.itemconfig("label9",state='hidden')
                                                sr_Canvas_2.itemconfig("entry6",state='hidden')
                                            else:
                                                sr_Canvas_2.itemconfig("label9",state='normal')
                                                sr_Canvas_2.itemconfig("entry6",state='normal')

                                        cust_gtype = ttk.Combobox(sr_Canvas_2,width=19,font=('arial 15'))
                                        cust_gtype['values'] = ['Choose...','GST registered- Regular','GST registered- Composition','GST unregistered','Consumer','Overseas','SEZ',"Deemed exports - EOU's STP's EHTP's etc"]
                                        cust_gtype.current(0)
                                        cust_gtype.bind("<<ComboboxSelected>>",select_GSTtype)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gtype,tags=("combo2"))

                                        cust_label9 = Label(sr_Canvas_2,width=20,height=1,text="GSTIN",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label9,tags=('label9'))

                                        gstinVar = StringVar()
                                        cust_gin = Entry(sr_Canvas_2,textvariable=gstinVar,width=20,font=('arial 15'),background='#2f516f',foreground='grey')
                                        cust_gin.insert(0,'29APPCK7465F1Z1')

                                        def del_placeholder(event):
                                            if cust_gin.get() == '29APPCK7465F1Z1':
                                                cust_gin.delete(0,END)
                                                cust_gin.config(fg="white")
                                            else:
                                                pass

                                        cust_gin.bind("<FocusIn>",del_placeholder)

                                        def ret_placeholder(event):
                                            if cust_gin.get() == '':
                                                cust_gin.insert(0,'29APPCK7465F1Z1')
                                                cust_gin.config(fg="grey")
                                            else:
                                                pass
                                        cust_gin.bind("<FocusOut>",ret_placeholder)
                                        
                                        def validate_gstin(value):
                                            pattern = r'[0-9]{2}[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9A-Za-z]{1}[a-zA-Z]{1}[0-9a-zA-Z]{1}'
                                            if re.fullmatch(pattern,value) is None:
                                                return False
                                            else:
                                                cust_gin.config(fg="white")
                                                return True

                                        def invalid_gstin():
                                            cust_gin.config(fg="red")

                                        valid_cmndGSTIN = (sr_Canvas_2.register(validate_gstin),'%P')
                                        invalid_cmndGSTIN = (sr_Canvas_2.register(invalid_gstin),)
                                        cust_gin.config(validate='focusout',validatecommand=valid_cmndGSTIN,invalidcommand=invalid_cmndGSTIN)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_gin,tags=("entry6"))

                                        cust_label10 = Label(sr_Canvas_2,width=20,height=1,text="PAN NO",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label10,tags=('label10'))

                                        panVar = StringVar()
                                        cust_pan = Entry(sr_Canvas_2,width=20,textvariable=panVar,font=('arial 15'),background='#2f516f',foreground='grey')
                                        cust_pan.insert(0,'APPCK7465F')

                                        def del_placeholder(event):
                                            if cust_pan.get() == 'APPCK7465F':
                                                cust_pan.delete(0,END)
                                                cust_pan.config(fg="white")
                                            else:
                                                pass

                                        cust_pan.bind("<FocusIn>",del_placeholder)

                                        def ret_placeholder(event):
                                            if cust_pan.get() == '':
                                                cust_pan.insert(0,'APPCK7465F')
                                                cust_pan.config(fg="grey")
                                            else:
                                                pass
                                        cust_pan.bind("<FocusOut>",ret_placeholder)

                                        def validate_pan(value):
                                            pattern = r'[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}'
                                            if re.fullmatch(pattern,value) is None:
                                                return False
                                            else:
                                                cust_pan.config(fg="white")
                                                return True

                                        def invalid_pan():
                                            cust_pan.config(fg="red")

                                        valid_cmndPAN = (sr_Canvas_2.register(validate_pan),'%P')
                                        invalid_cmndPAN = (sr_Canvas_2.register(invalid_pan),)
                                        cust_pan.config(validate='focusout',validatecommand=valid_cmndPAN,invalidcommand=invalid_cmndPAN)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pan,tags=("entry7"))

                                        cust_label11 = Label(sr_Canvas_2,width=20,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label11,tags=('label11'))

                                        emailVar = StringVar()
                                        cust_email = Entry(sr_Canvas_2,textvariable=emailVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                        def validate_email(value):
                                            pattern = r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+'
                                            if re.fullmatch(pattern,value) is None:
                                                return False
                                            else:
                                                cust_email.config(fg="white")
                                                return True

                                        def invalid_email():
                                            cust_email.config(fg="red")

                                        valid_cmndEMAIL = (sr_Canvas_2.register(validate_email),'%P')
                                        invalid_cmndEMAIL = (sr_Canvas_2.register(invalid_email),)
                                        cust_email.config(validate='focusout',validatecommand=valid_cmndEMAIL,invalidcommand=invalid_cmndEMAIL)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_email,tags=("entry8"))

                                        cust_label12 = Label(sr_Canvas_2,width=20,height=1,text="Website",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label12,tags=('label12'))

                                        webVar = StringVar()
                                        cust_web = Entry(sr_Canvas_2,textvariable=webVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                        def validate_web(value):
                                            pattern = r'www.+[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}'
                                            if re.fullmatch(pattern,value) is None:
                                                return False
                                            else:
                                                cust_web.config(fg="white")
                                                return True

                                        def invalid_web():
                                            cust_web.config(fg="red")

                                        valid_cmndWEB = (sr_Canvas_2.register(validate_web),'%P')
                                        invalid_cmndWEB = (sr_Canvas_2.register(invalid_web),)
                                        cust_web.config(validate='focusout',validatecommand=valid_cmndWEB,invalidcommand=invalid_cmndWEB)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_web,tags=("entry9"))

                                        cust_label13 = Label(sr_Canvas_2,width=20,height=1,text="Mobile",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label13,tags=('label13'))

                                        mobVar = StringVar()
                                        cust_mob = Entry(sr_Canvas_2,textvariable=mobVar,width=20,font=('arial 15'),background='#2f516f',foreground='white')

                                        def validate_mobile(value):
                                            pattern = r'[7-9][0-9]{9}'
                                            if re.fullmatch(pattern,value) is None:
                                                return False
                                            else:
                                                cust_mob.config(fg="white")
                                                return True

                                        def invalid_mobile():
                                            cust_mob.config(fg="red")

                                        valid_cmndMOB = (sr_Canvas_2.register(validate_mobile),'%P')
                                        invalid_cmndMOB = (sr_Canvas_2.register(invalid_mobile),)
                                        cust_mob.config(validate='focusout',validatecommand=valid_cmndMOB,invalidcommand=invalid_cmndMOB)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_mob,tags=("entry10"))

                                        cust_label14 = Label(sr_Canvas_2,width=20,height=1,text="Billing Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label14,tags=('label14'))

                                        cust_label15 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label15,tags=('label15'))

                                        cust_st1 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st1,tags=("entry11"))

                                        cust_label17 = Label(sr_Canvas_2,width=20,height=1,text="Shipping Address",font=('arial 18 bold'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label17,tags=('label17'))

                                        cust_label16 = Label(sr_Canvas_2,width=20,height=1,text="Street",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label16,tags=('label16'))

                                        cust_st2 = scrolledtext.ScrolledText(sr_Canvas_2,width=48,height=3,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_st2,tags=("entry12"))

                                        cust_label18 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label18,tags=('label18'))

                                        cust_city = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city,tags=("entry13"))

                                        cust_label19 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label19,tags=('label19'))

                                        cust_state = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state,tags=("entry14"))

                                        cust_label20 = Label(sr_Canvas_2,width=20,height=1,text="City",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label20,tags=('label20'))

                                        cust_city1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_city1,tags=("entry15"))

                                        cust_label21 = Label(sr_Canvas_2,width=20,height=1,text="State",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label21,tags=('label21'))

                                        cust_state1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_state1,tags=("entry16"))
                                        #--
                                        cust_label22 = Label(sr_Canvas_2,width=20,height=1,text="Pin Code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label22,tags=('label22'))

                                        cust_pin = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin,tags=("entry17"))

                                        cust_label23 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label23,tags=('label23'))

                                        cust_country = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country,tags=("entry18"))

                                        cust_label24 = Label(sr_Canvas_2,width=20,height=1,text="Pin code",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label24,tags=('label24'))

                                        cust_pin1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_pin1,tags=("entry19"))

                                        cust_label25 = Label(sr_Canvas_2,width=20,height=1,text="Country",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label25,tags=('label25'))

                                        cust_country1 = Entry(sr_Canvas_2,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_country1,tags=("entry20"))

                                        def sameas_billaddress():
                                            if sameasVar.get() == True:
                                                bill_address = cust_st1.get("1.0","end-1c")
                                                bill_city = cust_city.get()
                                                bill_state = cust_state.get()
                                                bill_pin = cust_pin.get()
                                                bill_country = cust_country.get()

                                                cust_st2.delete("1.0","end-1c")
                                                cust_st2.insert("1.0",bill_address)
                                                cust_city1.delete(0,END)
                                                cust_city1.insert(0,bill_city)
                                                cust_state1.delete(0,END)
                                                cust_state1.insert(0,bill_state)
                                                cust_pin1.delete(0,END)
                                                cust_pin1.insert(0,bill_pin)
                                                cust_country1.delete(0,END)
                                                cust_country1.insert(0,bill_country)
                                            else:
                                                pass

                                        sameasVar = BooleanVar()
                                        cust_sameb = Checkbutton(sr_Canvas_2,variable=sameasVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sameas_billaddress)
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_sameb,tags=("check1"))

                                        cust_label26 = Label(sr_Canvas_2,width=20,height=1,text="Same as billing address",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label26,tags=('label26'))

                                        termVar = BooleanVar()
                                        cust_term = Checkbutton(sr_Canvas_2,variable=termVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857")
                                        sr_Canvas_2.create_window(0,0,anchor='nw',window=cust_term,tags=("check2"))

                                        cust_label27 = Label(sr_Canvas_2,width=25,height=1,text="Agree to terms and conditions",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                        sr_Canvas_2.create_window(0,0,window=cust_label27,tags=('label27'))

                                        def sr_create_newCustomer():
                                            title = cust_title.get()
                                            firstname = cust_fname.get()
                                            lastname = cust_lname.get()
                                            company = cust_company.get()
                                            location = cust_location.get()
                                            gsttype = cust_gtype.get()
                                            gstin = gstinVar.get()
                                            panno = panVar.get()
                                            email = emailVar.get()
                                            website = webVar.get()
                                            mobile = mobVar.get()
                                            street = cust_st1.get("1.0","end-1c")
                                            city = cust_city.get()
                                            state = cust_state.get()
                                            pincode = cust_pin.get()
                                            country = cust_country.get()
                                            shipstreet = cust_st2.get("1.0","end-1c")
                                            shipcity = cust_city1.get()
                                            shipstate = cust_state1.get()
                                            shippincode = cust_pin1.get()
                                            shipcountry = cust_country1.get()

                                            
                                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                            user_val = (nm_ent.get(),)
                                            fbcursor.execute(user_sql,user_val)
                                            user_data = fbcursor.fetchone()

                                            comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                            comp_val = (user_data[0],)
                                            fbcursor.execute(comp_sql,comp_val)
                                            comp_data = fbcursor.fetchone()
                                            cid  = comp_data[0]

                                            
                                            
                                            if gsttype == "GST unregistered" or gsttype == "Consumer" or gsttype == "Overseas":
                                                gstin = ''
                                                if validate_pan(panno) is False:
                                                    pass 
                                                elif validate_email(email) is False: 
                                                    pass
                                                elif validate_web(website) is False:
                                                    pass 
                                                elif validate_mobile(mobile) is False:
                                                    pass
                                                else:
                                                    if termVar.get() == False:
                                                        pass
                                                    else:
                                                        if gsttype == "Choose...":
                                                            pass
                                                        else:
                                                            ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                            ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                            fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                            finsysdb.commit()
                                                            sr_Frame_2.destroy()
                                                            cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                            fbcursor.execute(cust_sql,)
                                                            cust_data = fbcursor.fetchall()

                                                            cust_list = []
                                                            if not cust_data:
                                                                cust_list.append('Select Customer')
                                                            else:
                                                                for c in cust_data:
                                                                    cust_list.append(c[0] + " " + c[1])
                                                                cust_list.insert(0,'Select Customer')
                                                                rp_custCombo["values"] = cust_list
                                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                            elif gstin == '29APPCK7465F1Z1' or panno == 'APPCK7465F':
                                                pass
                                            else:
                                                if validate_gstin(gstin) is False: 
                                                    pass
                                                elif validate_pan(panno) is False:
                                                    pass 
                                                elif validate_email(email) is False: 
                                                    pass
                                                elif validate_web(website) is False:
                                                    pass
                                                elif validate_mobile(mobile) is False:
                                                    pass
                                                else:
                                                    if termVar.get() == False:
                                                        pass
                                                    else:
                                                        if gsttype == "Choose...":
                                                            pass
                                                        else:
                                                            ins_cust_sql = "INSERT INTO app1_customer(title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" 
                                                            ins_cust_val = (title,firstname,lastname,company,location,gsttype,gstin,panno,email,website,mobile,street,city,state,pincode,country,shipstreet,shipcity,shipstate,shippincode,shipcountry,cid,)
                                                            fbcursor.execute(ins_cust_sql,ins_cust_val)
                                                            finsysdb.commit()
                                                            sr_Frame_2.destroy()
                                                            cust_sql = "SELECT firstname,lastname FROM app1_customer"
                                                            fbcursor.execute(cust_sql,)
                                                            cust_data = fbcursor.fetchall()

                                                            cust_list = []
                                                            if not cust_data:
                                                                cust_list.append('Select Customer')
                                                            else:
                                                                for c in cust_data:
                                                                    cust_list.append(c[0] + " " + c[1])
                                                                cust_list.insert(0,'Select Customer')
                                                                rp_custCombo["values"] = cust_list
                                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')
                                            
                                        cust_save = Button(sr_Canvas_2,text="Submit Form",font=('arial 12 bold'),width=40,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:sr_create_newCustomer())
                                        sr_Canvas_2.create_window(0,0,window=cust_save,tags=("button1"))

                                        def dc_goBack1():
                                            sr_Frame_2.grid_forget()
                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        back_btn = Button(sr_Canvas_2,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dc_goBack1())
                                        sr_Canvas_2.create_window(0,0,window=back_btn,tags=("button2"))

                                    rp_plus = Button(sr_Canvas_5,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:sr_addCustomer())
                                    sr_Canvas_5.create_window(0,0,window=rp_plus,tags=("button1"))

                                    rp_label3 = Label(sr_Canvas_5,width=10,height=1,text="Email",font=('arial 12'),background='#1b3857',anchor="w",fg="white")
                                    sr_Canvas_5.create_window(0,0,window=rp_label3,tags=('label4'))

                                    rp_email = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    rp_email.delete(0,END)
                                    rp_email.insert(0,get_pym_data[2])
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_email,tags=("entry1"))

                                    rp_label4 = Label(sr_Canvas_5,width=20,height=1,text="Find by invoice number",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label4,tags=("label5"))

                                    rp_invnum = Entry(sr_Canvas_5,width=20,font=('arial 15'),background='#2f516f',foreground='white')
                                    rp_invnum.delete(0,END)
                                    rp_invnum.insert(0,get_pym_data[3])
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_invnum,tags=("entry2"))

                                    rp_label6 = Label(sr_Canvas_5,width=20,height=1,text="Payment method",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label6,tags=("label7"))

                                    def rp_show_pmethod(event):
                                        if rp_pmethod.get() == "Add new":
                                            rp_newmeth.delete(0,END)
                                            sr_Canvas_5.itemconfig("entry7",state='normal')
                                        else:
                                            sr_Canvas_5.itemconfig("entry7",state='hidden')

                                    rp_pmethod = ttk.Combobox(sr_Canvas_5,font=('arial 15'),width=19,background='#2f516f')
                                    pmethod_list = ['Cash','Cheque','Credit Card','Add new']
                                    rp_pmethod['values'] = pmethod_list
                                    rp_pmethod.delete(0,END)
                                    rp_pmethod.insert(0,get_pym_data[5])
                                    rp_pmethod.bind("<<ComboboxSelected>>",rp_show_pmethod)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_pmethod,tags=("entry3"))

                                    def rp_addnew_pmethod(event):
                                        pmethod_list.insert(0,rp_newmeth.get())

                                        rp_pmethod["values"] = pmethod_list

                                    rp_newmeth = Entry(sr_Canvas_5,font=('arial 15'),width=20,background='#2f516f',foreground='white')
                                    rp_newmeth.bind("<FocusOut>",rp_addnew_pmethod)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',state=HIDDEN,window=rp_newmeth,tags=("entry7"))

                                    rp_label7 = Label(sr_Canvas_5,width=20,height=1,text="Deposit to",font=('arial 12'),background='#1b3857',fg="white",anchor="nw")
                                    sr_Canvas_5.create_window(0,0,window=rp_label7,tags=("label8"))

                                    rp_depositto = ttk.Combobox(sr_Canvas_5,font=('arial 15'),width=15)
                                    dep_list = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                                    'Deferred Krishi Kalyan Cess Input Credit','Deferred SGST','Deferred Service Tax Input Credit',
                                    'Deferred VAT Input Credit','GST Refund','Inventory Asset','Krishi Kalyan Cess Refund'
                                    ,'Prepaid Insurance','Service Tax Refund','TDS Receivable','Uncategorised Asset','Undeposited Fund',]

                                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                    user_val = (nm_ent.get(),)
                                    fbcursor.execute(user_sql,user_val)
                                    user_data = fbcursor.fetchone()

                                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                    comp_val = (user_data[0],)
                                    fbcursor.execute(comp_sql,comp_val)
                                    comp_data = fbcursor.fetchone()

                                    dep_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s"
                                    dep_val = (comp_data[0],)
                                    fbcursor.execute(dep_sql,dep_val)
                                    dep_data = fbcursor.fetchall()

                                    for d in dep_data:
                                        dep_list.insert(0,d)
                                    rp_depositto['values'] = dep_list
                                    rp_depositto.delete(0,END)
                                    rp_depositto.insert(0,get_pym_data[7])

                                    rp_depositto.current(0)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_depositto,tags=("combo2"))

                                    def add_depositTo():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame_3 = Frame(tab3_1,)
                                        sr_Frame_3.grid(row=0,column=0,sticky='nsew')

                                        def responsive_widgets3(event):
                                            dwidth = event.width
                                            dheight = event.height
                                            dcanvas = event.widget

                                            r1 = 25
                                            x1 = dwidth/63
                                            x2 = dwidth/1.021
                                            y1 = dheight/14 
                                            y2 = dheight/3.505

                                            dcanvas.coords("poly1",x1 + r1,y1,
                                            x1 + r1,y1,
                                            x2 - r1,y1,
                                            x2 - r1,y1,     
                                            x2,y1,     
                                            #--------------------
                                            x2,y1 + r1,     
                                            x2,y1 + r1,     
                                            x2,y2 - r1,     
                                            x2,y2 - r1,     
                                            x2,y2,
                                            #--------------------
                                            x2 - r1,y2,     
                                            x2 - r1,y2,     
                                            x1 + r1,y2,
                                            x1 + r1,y2,
                                            x1,y2,
                                            #--------------------
                                            x1,y2 - r1,
                                            x1,y2 - r1,
                                            x1,y1 + r1,
                                            x1,y1 + r1,
                                            x1,y1,
                                            )

                                            dcanvas.coords("hline",dwidth/21,dheight/4.67,dwidth/1.055,dheight/4.67)
                                            
                                            r2 = 25
                                            x11 = dwidth/63
                                            x21 = dwidth/1.021
                                            y11 = dheight/2.8
                                            y21 = dheight/0.9


                                            dcanvas.coords("poly2",x11 + r2,y11,
                                            x11 + r2,y11,
                                            x21 - r2,y11,
                                            x21 - r2,y11,     
                                            x21,y11,     
                                            #--------------------
                                            x21,y11 + r2,     
                                            x21,y11 + r2,     
                                            x21,y21 - r2,     
                                            x21,y21 - r2,     
                                            x21,y21,
                                            #--------------------
                                            x21 - r2,y21,     
                                            x21 - r2,y21,     
                                            x11 + r2,y21,
                                            x11 + r2,y21,
                                            x11,y21,
                                            #--------------------
                                            x11,y21 - r2,
                                            x11,y21 - r2,
                                            x11,y11 + r2,
                                            x11,y11 + r2,
                                            x11,y11,
                                            )

                                            dcanvas.coords("label1",dwidth/2,dheight/8.24)
                                            dcanvas.coords("label2",dwidth/8.2,dheight/2.44)
                                            dcanvas.coords("label3",dwidth/1.655,dheight/2.44)
                                            dcanvas.coords("label4",dwidth/8.2,dheight/1.89)
                                            dcanvas.coords("label5",dwidth/1.655,dheight/1.89)
                                            dcanvas.coords("label6",dwidth/1.605,dheight/1.522)
                                            dcanvas.coords("label7",dwidth/1.655,dheight/1.27)

                                            dcanvas.coords("entry1",dwidth/20,dheight/2.32)
                                            dcanvas.coords("entry2",dwidth/1.88,dheight/2.32)
                                            dcanvas.coords("entry3",dwidth/20,dheight/1.8)
                                            dcanvas.coords("entry4",dwidth/1.88,dheight/1.805)
                                            dcanvas.coords("entry5",dwidth/20,dheight/1.605)
                                            dcanvas.coords("entry6",dwidth/1.88,dheight/1.46)
                                            dcanvas.coords("entry7",dwidth/1.88,dheight/1.23)

                                            dcanvas.coords("check1",dwidth/1.89,dheight/1.57)

                                            dcanvas.coords("button1",dwidth/2,dheight/0.97)
                                            dcanvas.coords("button2",dwidth/27,dheight/3)

                                        sr_Canvas_3 = Canvas(sr_Frame_3,bg='#2f516f',scrollregion=(0,0,700,1200))

                                        sr_Frame_3.grid_columnconfigure(0,weight=1)
                                        sr_Frame_3.grid_rowconfigure(0,weight=1)

                                        sr_Scroll_2 = Scrollbar(sr_Frame_3,orient=VERTICAL)
                                        sr_Scroll_2.grid(row=0,column=1,sticky='ns')
                                        sr_Scroll_2.config(command=sr_Canvas_3.yview)
                                        sr_Canvas_3.bind("<Configure>", responsive_widgets3)
                                        sr_Canvas_3.config(yscrollcommand=sr_Scroll_2.set)
                                        sr_Canvas_3.grid(row=0,column=0,sticky='nsew')

                                        sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))
                                        dep_label1 = Label(sr_Canvas_3,width=18,height=1,text="ACCOUNT CREATE",font=('arial 25'),background='#1b3857',fg="white")
                                        sr_Canvas_3.create_window(0,0,anchor="c",window=dep_label1,tags=("label1"))
                                        sr_Canvas_3.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                                        sr_Canvas_3.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                                        dep_label2 = Label(sr_Canvas_3,width=20,height=1,text="Account type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label2,tags=("label2"))

                                        def fetch_detailType(event):
                                            if dep_acctype.get() == "Bank":
                                                item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                                item_val = (3,)
                                                fbcursor.execute(item_sql,item_val)
                                                item_data = fbcursor.fetchall()

                                                item_list = []
                                                for i in item_data:
                                                    item_list.append(i[1])
                                                dep_dtype.configure(values=item_list)
                                            else:
                                                item_sql = "SELECT * FROM itemstable WHERE Pid=%s"
                                                item_val = (2,)
                                                fbcursor.execute(item_sql,item_val)
                                                item_data = fbcursor.fetchall()

                                                item_list = []
                                                for i in item_data:
                                                    item_list.append(i[1])
                                                dep_dtype.configure(values=item_list)

                                        dep_acctype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                        dep_acctype['values'] = ['Bank','Current Assets',]
                                        dep_acctype.bind("<<ComboboxSelected>>",fetch_detailType)
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_acctype,tags=("entry1"))

                                        dep_label3 = Label(sr_Canvas_3,width=20,height=1,text="*Name",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label3,tags=("label3"))

                                        dep_name = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_name,tags=("entry2"))

                                        dep_label4 = Label(sr_Canvas_3,width=20,height=1,text="*Detail Type",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label4,tags=("label4"))

                                        dep_dtype = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtype,tags=("entry3"))

                                        dep_label5 = Label(sr_Canvas_3,width=20,height=1,text="Description",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label5,tags=("label5"))

                                        dep_desp = Entry(sr_Canvas_3,width=47,font=('arial 15'),background='#2f516f',foreground='white')
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_desp,tags=("entry4"))

                                        dep_term = Text(sr_Canvas_3,width=47,font=('arial 15'),height=7,background='#2f516f',foreground='white')
                                        term_txt = "Use Cash and Cash Equivalents to track cash or assets that can be converted into cash immediately. For example, marketable securities and Treasury bills."
                                        dep_term.insert('1.0',term_txt)
                                        dep_term.config(state=DISABLED)
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_term,tags=("entry5"))

                                        def sr_subAccount():
                                            if subaccVar.get() == True:
                                                dep_subacc["state"] = NORMAL
                                            else:
                                                dep_subacc["state"] = DISABLED

                                        subaccVar = BooleanVar()
                                        dep_subcheck = Checkbutton(sr_Canvas_3,variable=subaccVar,onvalue=1,offvalue=0,background='#1b3857',activebackground="#1b3857",command=sr_subAccount)
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subcheck,tags=("check1"))

                                        dep_label6 = Label(sr_Canvas_3,width=20,height=1,text="Is sub-account",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label6,tags=("label6"))

                                        dep_subacc = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black',state=DISABLED)
                                        dep_subacc['values'] = ['Deferred CGST','Deferred GST Input Credit','Deferred IGST',
                                        'Deferred Krishi Kalyan Cess Input Credit','Deferred Service Tax Input Credit',
                                        'Deferred SGST','Deferred VAT Input Credit','GST Refund','Inventory Asset','Paid Insurance',
                                        'Service Tax Refund','TDS Receivable','Uncategorised Asset','Accumulated Depreciation',
                                        'Buildings and Improvements','Furniture and Equipment','Land','Leasehold Improvements',
                                        'CGST Payable','CST Payable','CST Suspense','GST Payable','GST Suspense','IGST Payable',
                                        'Input CGST','Input CGST Tax RCM','Input IGST','Input IGST Tax RCM','Input Krishi Kalyan Cess',
                                        'Input Krishi Kalyan Cess RCM','Input Service Tax','Input Service Tax RCM','Input SGST',
                                        'Input SGST Tax RCM','Input VAT 14%','Input VAT 4%','Input VAT 5%','Krishi Kalyan Cess Payable',
                                        'Krishi Kalyan Cess Suspense','Output CGST','Output CGST Tax RCM','Output CST 2%','Output IGST',
                                        'Output IGST Tax RCM','Output Krishi Kalyan Cess','Output Krishi Kalyan Cess RCM','Output Service Tax',
                                        'Output Service Tax RCM','Output SGST','Output SGST Tax RCM','Output VAT 14%','Output VAT 4%',
                                        'Output VAT 5%','Service Tax Payable','Service Tax Suspense','SGST Payable','SGST Suspense',
                                        'Swachh Bharat Cess Payable','Swachh Bharat Cess Suspense','TDS Payable','VAT Payable',
                                        'VAT Suspense','Opening Balance','Equity',]
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_subacc,tags=("entry6"))

                                        dep_label7 = Label(sr_Canvas_3,width=20,height=1,text="Default Tax Code",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                        sr_Canvas_3.create_window(0,0,window=dep_label7,tags=("label7"))

                                        dep_dtaxcode = ttk.Combobox(sr_Canvas_3,width=46,font=('arial 15'),background='#2f516f',foreground='black')
                                        dep_dtaxcode['values'] = ['18.0% IGST','14.00% ST','0% IGST','Out of Scope','0% GST','14.5% ST',
                                        '14.0% VAT','6.0% IGST','28.0% IGST','15.0% ST','28.0% GST','12.0% GST','18.0% GST','3.0% GST',
                                        '0.2% IGST','5.0% GST','6.0% GST','0.2% GST','Exempt IGST','3.0% IGS','4.0% VAT','5.0% IGST',
                                        '12.36% ST','5.0% VAT','Exempt GST','12.0% IGST','2.0% CST',]
                                        sr_Canvas_3.create_window(0,0,anchor='nw',window=dep_dtaxcode,tags=("entry7"))

                                        def payment_createAccType():
                                            acctype = dep_acctype.get()
                                            detype = dep_dtype.get()
                                            name = dep_name.get()
                                            description = dep_desp.get()
                                            gst = dep_subacc.get()
                                            deftaxcode = dep_dtaxcode.get()
                                            balance = 0
                                            today = datetime.today()
                                            asof = today.strftime("%Y-%m-%d")
                                            balfordisp = 0
                                            # ----company id
                                            user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                            user_val = (nm_ent.get(),)
                                            fbcursor.execute(user_sql,user_val)
                                            user_data = fbcursor.fetchone()

                                            comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                            comp_val = (user_data[0],)
                                            fbcursor.execute(comp_sql,comp_val)
                                            comp_data = fbcursor.fetchone()
                                            cid  = comp_data[0]
                                            #----------------

                                            #product id --------------
                                            if acctype == "Bank":
                                                pro_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                                pro_val = (3,)
                                                fbcursor.execute(pro_sql,pro_val)
                                                product_data = fbcursor.fetchone()
                                            else:
                                                product_sql = "SELECT * FROM producttable WHERE Pid=%s"
                                                product_val = (2,)
                                                fbcursor.execute(product_sql,product_val)
                                                product_data = fbcursor.fetchone()
                                            
                                            productid = product_data[0]
                                            #-----------------

                                            acctype_sql = "SELECT accountname FROM app1_accountype WHERE accountname=%s"
                                            acctype_val = (dep_dtype.get(),)
                                            fbcursor.execute(acctype_sql,acctype_val)
                                            acctype_data = fbcursor.fetchone()

                                            acct_sql = "SELECT name,cid_id FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                            acct_val = (dep_name.get(),comp_data[0])
                                            fbcursor.execute(acct_sql,acct_val)
                                            acct_data = fbcursor.fetchone()

                                            acct1_sql = "SELECT name,cid_id FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                            acct1_val = (dep_name.get(),comp_data[0])
                                            fbcursor.execute(acct1_sql,acct1_val)
                                            acct1_data = fbcursor.fetchone()
                                            

                                            if not acctype_data and not acct_data or not acct1_data:
                                                ins_acctype_sql = "INSERT INTO app1_accountype(cid_id,accountname,accountbal) VALUES(%s,%s,%s)"
                                                ins_acctype_val= (comp_data[0],detype,balance)
                                                fbcursor.execute(ins_acctype_sql,ins_acctype_val)
                                                finsysdb.commit()
                                                
                                                if acctype == "Bank":
                                                    #pro id ------------
                                                    pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                                    pro_val = (3,)
                                                    fbcursor.execute(pro_sql,pro_val)
                                                    pro_data = fbcursor.fetchone()
                                                    #--------------------
                                                    ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                                    ins_accts_val = (3,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                                    fbcursor.execute(ins_accts_sql,ins_accts_val)
                                                    finsysdb.commit()
                                                else:
                                                    #pro id ------------
                                                    pro_sql = "SELECT * FROM app1_accountype WHERE accountypeid=%s"
                                                    pro_val = (2,)
                                                    fbcursor.execute(pro_sql,pro_val)
                                                    pro_data = fbcursor.fetchone()
                                                    #--------------------

                                                    ins_accts_sql = "INSERT INTO app1_accounts(acctype,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid_id,proid_id,productid_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                                                    ins_accts_val = (2,detype,name,description,gst,balfordisp,deftaxcode,balance,asof,cid,pro_data[0],productid)
                                                    fbcursor.execute(ins_accts_sql,ins_accts_val)
                                                    finsysdb.commit()

                                                sel_accts1_sql = "SELECT * FROM app1_accounts1 WHERE cid_id=%s and name=%s"
                                                sel_accts1_val = (cid,'Opening Balance Equity',)
                                                fbcursor.execute(sel_accts1_sql,sel_accts1_val)
                                                sel_accts1_data = fbcursor.fetchone()

                                                bal = sel_accts1_data[7] + float(balance)
                                                upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE cid_id=%s and name=%s"
                                                upd_accts1_val = (bal,cid,'Opening Balance Equity',)
                                                fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                                finsysdb.commit()

                                                sr_Frame_3.destroy()
                                                sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                                deposit_sql = "SELECT name FROM app1_accounts WHERE cid_id=%s ORDER BY accountsid DESC LIMIT 1;"
                                                deposit_val = (comp_data[0],)
                                                fbcursor.execute(deposit_sql,deposit_val)
                                                deposit_data = fbcursor.fetchall()

                                                dep_list.insert(0,deposit_data)
                                                rp_depositto.config(values=dep_list)
                                                rp_depositto.current(0)
                                            else:
                                                messagebox.showwarning("Fin sYs",f"Account with name {name} already exists. Please provide another name.")




                                        dep_save = Button(sr_Canvas_3,text="Create",font=('arial 12 bold'),width=35,height=2,background="#198fed",activebackground="#198fed",foreground="white",activeforeground="white",bd=0,command=lambda:payment_createAccType())
                                        sr_Canvas_3.create_window(0,0,window=dep_save,tags=("button1"))

                                        def dep_goBack():
                                            sr_Frame_3.grid_forget()
                                            sr_Frame_1.grid(row=0,column=0,sticky='nsew')

                                        back_btn = Button(sr_Canvas_3,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:dep_goBack())
                                        sr_Canvas_3.create_window(0,0,window=back_btn,tags=("button2"))

                                    rp_plus1 = Button(sr_Canvas_5,text='+',font=('arial 10 bold'),foreground='white',activebackground='#1b3857',background='#1b3857',padx=7,command=lambda:add_depositTo())
                                    sr_Canvas_5.create_window(0,0,window=rp_plus1,tags=("button2"))

                                    rp_label8 = Label(sr_Canvas_5,width=20,height=1,text="Amount recieved",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label8,tags=("label9"))

                                    def amount_receiving(event):
                                        try:
                                            ramount = rp_amntre.get()
                                            if ramount.isdigit():
                                                if rp_tree.get_children() == '':
                                                    pass
                                                else:
                                                    try:
                                                        child  = rp_tree.get_children()
                                                        rp_tree.focus(child[0])
                                                        rp_tree.selection_set(child[0])
                                                        selected_row = rp_tree.selection()[0]
                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                        rp_tree.item(selected_row,values=pay_indices)

                                                        if float(pay_indices[4]) >= float(ramount):
                                                            rp_tree.set(selected_row,"#6",ramount)
                                                        elif float(pay_indices[4]) == 0.0 or float(pay_indices[4]) <= float(ramount):
                                                            rp_tree.set(selected_row,"#6",float(pay_indices[4]))
                                                            
                                                        else:
                                                            pass

                                                        bal = float(ramount) - float(pay_indices[4])

                                                        rp_tree.focus(child[1])
                                                        rp_tree.selection_set(child[1])
                                                        selected_row = rp_tree.selection()[0]
                                                        pay_indices1 = rp_tree.item(selected_row,'values')
                                                        rp_tree.item(selected_row,values=pay_indices1)
                                                        
                                                        if bal <= 0.0:
                                                            for i in  range(1,len(child)):
                                                                rp_tree.focus(child[i])
                                                                rp_tree.selection_set(child[i])
                                                                selected_row = rp_tree.selection()[0]
                                                                pay_indices = rp_tree.item(selected_row,'values')
                                                                rp_tree.item(selected_row,values=pay_indices)

                                                                rp_tree.set(selected_row,"#6",0)
                                                        else:
                                                            if float(pay_indices1[4]) >= bal:
                                                                rp_tree.set(selected_row,"#6",bal)
                                                            elif float(pay_indices1[4]) == 0.0 or float(pay_indices1[4]) <= bal:
                                                                rp_tree.set(selected_row,"#6",float(pay_indices1[4]))
                                                            else:
                                                                pass

                                                            bal1 = float(bal) - float(pay_indices1[4])

                                                            rp_tree.focus(child[2])
                                                            rp_tree.selection_set(child[2])
                                                            selected_row = rp_tree.selection()[0]
                                                            pay_indices2 = rp_tree.item(selected_row,'values')
                                                            rp_tree.item(selected_row,values=pay_indices2)

                                                            if bal1 <= 0.0:
                                                                for i in  range(2,len(child)):
                                                                    rp_tree.focus(child[i])
                                                                    rp_tree.selection_set(child[i])
                                                                    selected_row = rp_tree.selection()[0]
                                                                    pay_indices = rp_tree.item(selected_row,'values')
                                                                    rp_tree.item(selected_row,values=pay_indices)

                                                                    rp_tree.set(selected_row,"#6",0)
                                                            else:
                                                                if float(pay_indices2[4]) >= bal1:
                                                                    rp_tree.set(selected_row,"#6",bal1)
                                                                elif float(pay_indices2[4]) == 0.0 or float(pay_indices2[4]) <= bal1:
                                                                    rp_tree.set(selected_row,"#6",float(pay_indices2[4]))
                                                                else:
                                                                    pass

                                                                bal2 = float(bal1) - float(pay_indices2[4])

                                                                rp_tree.focus(child[3])
                                                                rp_tree.selection_set(child[3])
                                                                selected_row = rp_tree.selection()[0]
                                                                pay_indices3 = rp_tree.item(selected_row,'values')
                                                                rp_tree.item(selected_row,values=pay_indices3)

                                                                if bal2 <= 0.0:
                                                                    for i in  range(3,len(child)):
                                                                        rp_tree.focus(child[i])
                                                                        rp_tree.selection_set(child[i])
                                                                        selected_row = rp_tree.selection()[0]
                                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                                        rp_tree.item(selected_row,values=pay_indices)

                                                                        rp_tree.set(selected_row,"#6",0)
                                                                else:
                                                                    if float(pay_indices3[4]) >= bal2:
                                                                        rp_tree.set(selected_row,"#6",bal2)
                                                                    elif float(pay_indices3[4]) == 0.0 or float(pay_indices3[4]) <= bal2:
                                                                        rp_tree.set(selected_row,"#6",float(pay_indices3[4]))
                                                                    else:
                                                                        pass

                                                                    bal3 = float(bal2) - float(pay_indices3[4])

                                                                    rp_tree.focus(child[4])
                                                                    rp_tree.selection_set(child[4])
                                                                    selected_row = rp_tree.selection()[0]
                                                                    pay_indices4 = rp_tree.item(selected_row,'values')
                                                                    rp_tree.item(selected_row,values=pay_indices4)

                                                                    if bal3 <= 0.0:
                                                                        for i in  range(4,len(child)):
                                                                            rp_tree.focus(child[i])
                                                                            rp_tree.selection_set(child[i])
                                                                            selected_row = rp_tree.selection()[0]
                                                                            pay_indices = rp_tree.item(selected_row,'values')
                                                                            rp_tree.item(selected_row,values=pay_indices)

                                                                            rp_tree.set(selected_row,"#6",0)
                                                                    else:
                                                                        if float(pay_indices4[4]) >= bal3:
                                                                            rp_tree.set(selected_row,"#6",bal3)
                                                                        elif float(pay_indices4[4]) == 0.0 or float(pay_indices4[4]) <= bal3:
                                                                            rp_tree.set(selected_row,"#6",float(pay_indices4[4]))
                                                                        else:
                                                                            pass

                                                                        bal4 = float(bal3) - float(pay_indices4[4])

                                                                        rp_tree.focus(child[5])
                                                                        rp_tree.selection_set(child[5])
                                                                        selected_row = rp_tree.selection()[0]
                                                                        pay_indices5 = rp_tree.item(selected_row,'values')
                                                                        rp_tree.item(selected_row,values=pay_indices5)

                                                                        if bal4 <= 0.0:
                                                                            for i in  range(5,len(child)):
                                                                                rp_tree.focus(child[i])
                                                                                rp_tree.selection_set(child[i])
                                                                                selected_row = rp_tree.selection()[0]
                                                                                pay_indices = rp_tree.item(selected_row,'values')
                                                                                rp_tree.item(selected_row,values=pay_indices)

                                                                                rp_tree.set(selected_row,"#6",0)
                                                                        else:
                                                                            if float(pay_indices5[4]) >= bal4:
                                                                                rp_tree.set(selected_row,"#6",bal4)
                                                                            elif float(pay_indices5[4]) == 0.0 or float(pay_indices5[4]) <= bal4:
                                                                                rp_tree.set(selected_row,"#6",float(pay_indices5[4]))
                                                                            else:
                                                                                pass

                                                                            bal5 = float(bal4) - float(pay_indices5[4])

                                                                            rp_tree.focus(child[6])
                                                                            rp_tree.selection_set(child[6])
                                                                            selected_row = rp_tree.selection()[0]
                                                                            pay_indices6 = rp_tree.item(selected_row,'values')
                                                                            rp_tree.item(selected_row,values=pay_indices6)

                                                                            if bal5 <= 0.0:
                                                                                for i in  range(6,len(child)):
                                                                                    rp_tree.focus(child[i])
                                                                                    rp_tree.selection_set(child[i])
                                                                                    selected_row = rp_tree.selection()[0]
                                                                                    pay_indices = rp_tree.item(selected_row,'values')
                                                                                    rp_tree.item(selected_row,values=pay_indices)

                                                                                    rp_tree.set(selected_row,"#6",0)
                                                                            else:
                                                                                if float(pay_indices6[4]) >= bal5:
                                                                                    rp_tree.set(selected_row,"#6",bal5)
                                                                                elif float(pay_indices6[4]) == 0.0 or float(pay_indices6[4]) <= bal5:
                                                                                    rp_tree.set(selected_row,"#6",float(pay_indices6[4]))
                                                                                else:
                                                                                    pass

                                                                                bal6 = float(bal5) - float(pay_indices6[4])

                                                                                rp_tree.focus(child[7])
                                                                                rp_tree.selection_set(child[7])
                                                                                selected_row = rp_tree.selection()[0]
                                                                                pay_indices7 = rp_tree.item(selected_row,'values')
                                                                                rp_tree.item(selected_row,values=pay_indices7)

                                                                                if bal6 <= 0.0:
                                                                                    for i in  range(7,len(child)):
                                                                                        rp_tree.focus(child[i])
                                                                                        rp_tree.selection_set(child[i])
                                                                                        selected_row = rp_tree.selection()[0]
                                                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                                                        rp_tree.item(selected_row,values=pay_indices)

                                                                                        rp_tree.set(selected_row,"#6",0)
                                                                                else:
                                                                                    if float(pay_indices7[4]) >= bal6:
                                                                                        rp_tree.set(selected_row,"#6",bal6)
                                                                                    elif float(pay_indices7[4]) == 0.0 or float(pay_indices7[4]) <= bal6:
                                                                                        rp_tree.set(selected_row,"#6",float(pay_indices7[4]))
                                                                                    else:
                                                                                        pass

                                                                                    bal7 = float(bal6) - float(pay_indices7[4])

                                                                                    rp_tree.focus(child[8])
                                                                                    rp_tree.selection_set(child[8])
                                                                                    selected_row = rp_tree.selection()[0]
                                                                                    pay_indices8 = rp_tree.item(selected_row,'values')
                                                                                    rp_tree.item(selected_row,values=pay_indices8)

                                                                                    if bal7 <= 0.0:
                                                                                        for i in  range(8,len(child)):
                                                                                            rp_tree.focus(child[i])
                                                                                            rp_tree.selection_set(child[i])
                                                                                            selected_row = rp_tree.selection()[0]
                                                                                            pay_indices = rp_tree.item(selected_row,'values')
                                                                                            rp_tree.item(selected_row,values=pay_indices)

                                                                                            rp_tree.set(selected_row,"#6",0)
                                                                                    else:
                                                                                        if float(pay_indices8[4]) >= bal7:
                                                                                            rp_tree.set(selected_row,"#6",bal7)
                                                                                        elif float(pay_indices8[4]) == 0.0 or float(pay_indices8[4]) <= bal7:
                                                                                            rp_tree.set(selected_row,"#6",float(pay_indices8[4]))
                                                                                        else:
                                                                                            pass

                                                                                        bal8 = float(bal7) - float(pay_indices8[4])

                                                                                        rp_tree.focus(child[9])
                                                                                        rp_tree.selection_set(child[9])
                                                                                        selected_row = rp_tree.selection()[0]
                                                                                        pay_indices9 = rp_tree.item(selected_row,'values')
                                                                                        rp_tree.item(selected_row,values=pay_indices9)

                                                                                        if bal8 <= 0.0:
                                                                                            for i in  range(8,len(child)):
                                                                                                rp_tree.focus(child[i])
                                                                                                rp_tree.selection_set(child[i])
                                                                                                selected_row = rp_tree.selection()[0]
                                                                                                pay_indices = rp_tree.item(selected_row,'values')
                                                                                                rp_tree.item(selected_row,values=pay_indices)

                                                                                                rp_tree.set(selected_row,"#6",0)
                                                                                        else:
                                                                                            if float(pay_indices9[4]) >= bal8:
                                                                                                rp_tree.set(selected_row,"#6",bal8)
                                                                                            elif float(pay_indices9[4]) == 0.0 or float(pay_indices9[4]) <= bal8:
                                                                                                rp_tree.set(selected_row,"#6",float(pay_indices9[4]))
                                                                                            else:
                                                                                                pass
                                                    except:
                                                        pass

                                                    
                                                    rp_label10.config(text=str(ramount))
                                                    
                                                    ata = 0.0
                                                    for c in child:
                                                        payment = rp_tree.item(c,'values')[5]
                                                        ata += float(payment)
                                                    
                                                    atc = float(ramount) - float(ata)

                                                    rp_amnttoapply.delete(0,END)
                                                    rp_amnttoapply.insert(0,ata)
                                                    rp_amnttocredit.delete(0,END)
                                                    rp_amnttocredit.insert(0,atc)
                                            else:
                                                rp_amntre.delete(0,END)
                                                if ramount == '':
                                                    child  = rp_tree.get_children()
                                                    for i in  range(0,len(child)):
                                                        rp_tree.focus(child[i])
                                                        rp_tree.selection_set(child[i])
                                                        selected_row = rp_tree.selection()[0]
                                                        pay_indices = rp_tree.item(selected_row,'values')
                                                        rp_tree.item(selected_row,values=pay_indices)

                                                        rp_tree.set(selected_row,"#6",0)
                                                    rp_label10.config(text='0.00')
                                                else:
                                                    pass
                                        except:
                                            pass

                                    rp_amntre = Entry(sr_Canvas_5,font=('arial 15'),width=20,background='#2f516f',foreground='white')
                                    rp_amntre.delete(0,END)
                                    rp_amntre.insert(0,get_pym_data[8])
                                    rp_amntre.bind("<KeyRelease>",amount_receiving)
                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_amntre,tags=("entry4"))

                                    rp_label9 = Label(sr_Canvas_5,width=20,height=1,text="AMOUNT RECIEVED",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label9,tags=("label10"))

                                    rp_label10 = Label(sr_Canvas_5,width=20,height=1,text=get_pym_data[8],font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label10,tags=("label11"))

                                    

                                    rpt_label2 = Label(sr_Canvas_5,width=15,height=1,text="DESCRIPTION", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label2,tags=("label13"))

                                    rpt_label3 = Label(sr_Canvas_5,width=15,height=1,text="DUE DATE", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label3,tags=("label14"))

                                    rpt_label4 = Label(sr_Canvas_5,width=15,height=1,text="ORIGINAL AMOUNT", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label4,tags=("label15"))

                                    rpt_label5 = Label(sr_Canvas_5,width=15,height=1,text="OPEN BALANCE", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label5,tags=("label16"))

                                    rpt_label6 = Label(sr_Canvas_5,width=15,height=1,text="PAYMENT", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(0, 0, anchor="c",state=HIDDEN, window=rpt_label6,tags=("label17"))

                                    rp_tree_style = ttk.Style()
                                    rp_tree_style.theme_use("default")
                                    rp_tree_style.configure("Treeview",background="#2f516f",foreground="white",rowheight=25,font=(None,11),fieldbackground="#2f516f")
                                    rp_tree_style.configure("Treeview.Heading",background="#1b3857",activeforeground="black",foreground="white",font=(None,11))

                                    rp_tree = ttk.Treeview(sr_Canvas_5,columns=("0","1","2","3","4","5"),show="headings",height=7)
                                    rp_tree.column("0",width=36,anchor=CENTER)
                                    rp_tree.column("1",width=210,anchor=CENTER)
                                    rp_tree.column("2",width=210,anchor=CENTER)
                                    rp_tree.column("3",width=210,anchor=CENTER)
                                    rp_tree.column("4",width=210,anchor=CENTER)
                                    rp_tree.column("5",width=210,anchor=CENTER)
                                    rp_tree.heading("0",text="#")
                                    rp_tree.heading("1",text="DESCRIPTION")
                                    rp_tree.heading("2",text="DUE DATE")
                                    rp_tree.heading("3",text="ORIGINAL AMOUNT")
                                    rp_tree.heading("4",text="OPEN BALANCE")
                                    rp_tree.heading("5",text="PAYMENT")

                                    get_tbl_sql = "SELECT findinvoice FROM app1_payment WHERE refno=%s AND cid_id=%s"
                                    get_tbl_val = (row[2],comp_data[0])
                                    fbcursor.execute(get_tbl_sql,get_tbl_val)
                                    get_tbls_data = fbcursor.fetchone()

                                    get_fg_sql = "SELECT * FROM app1_payment WHERE findinvoice=%s AND cid_id=%s"
                                    get_fg_val = (get_tbls_data[0],comp_data[0],)
                                    fbcursor.execute(get_fg_sql,get_fg_val)
                                    get_tbl_data = fbcursor.fetchall()

                                    get_dtr_sql = "SELECT * FROM app1_payment WHERE findinvoice=%s AND cid_id=%s"
                                    get_dtr_val = (get_tbls_data[0],comp_data[0],)
                                    fbcursor.execute(get_dtr_sql,get_dtr_val)
                                    get_dtr_data = fbcursor.fetchone()
                                    
                                    for child in rp_tree.get_children():
                                        rp_tree.delete(child)
                                    
                                    
                                    if str(get_dtr_data[9])=="undefined":
                                        print("haii")
                                        pass
                                        
                                    else:
                                        for u in get_tbl_data:
                                            rp_tree.insert(parent='',index='end',values=("",u[9],u[10],u[11],u[12],u[13]))
                                            
                                    

                                    try:
                                        if str(get_dtr_data[16])=="undefined":
                                            pass
                                            
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[16],u[17],u[18],u[19],u[20]))

                                            
                                    except:
                                        pass
                                    try:
                                        if str(get_dtr_data[21])=="undefined":
                                            pass

                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[21],u[22],u[23],u[24],u[25]))
                                            
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[26])=="undefined":
                                            pass
                                            

                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[26],u[27],u[28],u[29],u[30]))
                                            
                                        
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[31])=="undefined":
                                            pass
  
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[31],u[32],u[33],u[34],u[35]))
                                            
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[36])=="undefined":
                                            pass
                                            
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[36],u[37],u[38],u[39],u[40]))
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[41])=="undefined":
                                            pass
                                            
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[41],u[42],u[43],u[44],u[45]))
                                            
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[46])=="undefined":
                                            pass
                                            

                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[46],u[47],u[48],u[49],u[50]))
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[51])=="undefined":
                                            pass
                                            
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[51],u[52],u[53],u[54],u[55]))
                                    except:
                                        pass

                                    try:
                                        if str(get_dtr_data[56])=="undefined":
                                            pass
                                            
                                        else:
                                            for u in get_tbl_data:
                                                rp_tree.insert(parent='',index='end',values=("",u[56],u[57],u[58],u[59],u[60]))
                                            
                                    except:
                                        pass

                                    


                                    sr_Canvas_5.create_window(0,0,anchor='nw',window=rp_tree,tags=("tree1"))

                                    

                                    sr_Canvas_5.create_line(820,800,1260,800,fill='gray',width=1,tags=("line10"))
                                    sr_Canvas_5.create_line(820,850,1260,850,fill='gray',width=1,tags=("line11"))
                                    sr_Canvas_5.create_line(820,900,1260,900,fill='gray',width=1,tags=("line12"))
                                    sr_Canvas_5.create_line(820,800,820,900,fill='gray',width=1,tags=("line13"))
                                    sr_Canvas_5.create_line(1000,800,1000,900,fill='gray',width=1,tags=("line14"))
                                    sr_Canvas_5.create_line(1260,800,1260,900,fill='gray',width=1,tags=("line15"))

                                    rpt_label7 = Label(sr_Canvas_5,width=15,height=1,text="Amount to Apply", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(910, 825, anchor="c", window=rpt_label7,tags=("label18"))  

                                    rp_amnttoapply = Entry(sr_Canvas_5,font=('arial 15'),width=21,background='#2f516f',foreground='white')
                                    rp_amnttoapply.delete(0,END)
                                    rp_amnttoapply.delete(0,END)
                                    rp_amnttoapply.insert(0,get_pym_data[14])
                                    sr_Canvas_5.create_window(1130,825,anchor='c',window=rp_amnttoapply,tags=("entry5"))   

                                    rpt_label8 = Label(sr_Canvas_5,width=15,height=1,text="Amount to Credit", font=('arial 10 bold'),background='#1b3857',fg="white") 
                                    sr_Canvas_5.create_window(910, 875, anchor="c", window=rpt_label8,tags=("label19"))  

                                    rp_amnttocredit = Entry(sr_Canvas_5,font=('arial 15'),width=21,background='#2f516f',foreground='white')
                                    rp_amnttocredit.delete(0,END)
                                    rp_amnttocredit.insert(0,get_pym_data[15])
                                    sr_Canvas_5.create_window(1130,875,anchor='c',window=rp_amnttocredit,tags=("entry6"))   

                                    def sr_goBack():
                                        sr_Frame_1.grid_forget()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')

                                    back_btn = Button(sr_Canvas_5,text='←  Back',font=('arial 10 bold'),bd=0,activebackground='#2f516f',foreground='white',background='#2f516f',command=lambda:sr_goBack())
                                    sr_Canvas_5.create_window(0,0,window=back_btn,tags=("button3")) 

                                    def rp_savePayment():
                                        customer = rp_custCombo.get()
                                        email = rp_email.get()
                                        findinvoice = rp_invnum.get()
                                        pmethod = rp_pmethod.get()
                                        depto = rp_depositto.get()
                                        amtreceived = rp_amntre.get()
                                        amtapply = rp_amnttoapply.get()
                                        amtcredit = rp_amnttocredit.get()
                                        paymdate = rp_pdate.get()
                                        
                                        try:
                                            descp_list = []
                                            due_list = []
                                            original_list = []
                                            open_list = []
                                            payment_list = []
                                            for records in rp_tree.get_children():
                                                descp_list.append(rp_tree.item(records,'values')[1])
                                                due_list.append(rp_tree.item(records,'values')[2])
                                                original_list.append(rp_tree.item(records,'values')[3])
                                                open_list.append(rp_tree.item(records,'values')[4])
                                                payment_list.append(rp_tree.item(records,'values')[5])
                                        except:
                                            pass
                                        

                                        try:
                                            inv_list = []
                                            for i in descp_list:
                                                inv_list.append(i.split(" ")[0])
                                        except:
                                            pass

                                        user_sql = "SELECT id FROM auth_user WHERE username=%s"
                                        user_val = (nm_ent.get(),)
                                        fbcursor.execute(user_sql,user_val)
                                        user_data = fbcursor.fetchone()

                                        comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                                        comp_val = (user_data[0],)
                                        fbcursor.execute(comp_sql,comp_val)
                                        comp_data = fbcursor.fetchone()

                                        get_payment_sql = "SELECT * FROM app1_payment ORDER BY paymentid DESC LIMIT 1"
                                        fbcursor.execute(get_payment_sql)
                                        get_payment_data = fbcursor.fetchone()

                                        if not get_payment_data:
                                            refno = '1001'
                                        else:
                                            refno = str(float(get_payment_data[6]) + 1)

                                        if customer == '':
                                            pass
                                        elif pmethod == 'Add new':
                                            pass
                                        elif len(descp_list) == 1:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 2:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)

                                            
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 3:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 4:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 5:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 6:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 7:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 8:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s, where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],undefined,undefined,undefined,undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 9:
                                            
                                            undefined = 'undefined'
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],descp_list[8],due_list[8],original_list[8],open_list[8],payment_list[8],undefined,undefined,undefined,comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        elif len(descp_list) == 10:
                                            
                                            ins_payment_sql = "update app1_payment set customer=%s,email=%s,findinvoice=%s,paymdate=%s,pmethod=%s,refno=%s,depto=%s,amtreceived=%s,amtapply=%s,amtcredit=%s,descrip=%s,duedate=%s,orgamt=%s,openbal=%s,payment=%s,descrip1=%s,duedate1=%s,orgamt1=%s,descrip2=%s,duedate2=%s,orgamt2=%s,descrip3=%s,duedate3=%s,orgamt3=%s,descrip4=%s,duedate4=%s,orgamt4=%s,descrip5=%s,duedate5=%s,orgamt5=%s,descrip6=%s,duedate6=%s,orgamt6=%s,descrip7=%s,duedate7=%s,orgamt7=%s,descrip8=%s,duedate8=%s,orgamt8=%s,descrip9=%s,duedate9=%s,orgamt9=%s where cid_id=%s and refno=%s"
                                            ins_payment_val = (customer,email,findinvoice,paymdate,pmethod,refno,depto,amtreceived,amtapply,amtcredit,descp_list[0],due_list[0],original_list[0],open_list[0],payment_list[0],descp_list[1],due_list[1],original_list[1],open_list[1],payment_list[1],descp_list[2],due_list[2],original_list[2],open_list[2],payment_list[2],descp_list[3],due_list[3],original_list[3],open_list[3],payment_list[3],descp_list[4],due_list[4],original_list[4],open_list[4],payment_list[4],descp_list[5],due_list[5],original_list[5],open_list[5],payment_list[5],descp_list[6],due_list[6],original_list[6],open_list[6],payment_list[6],descp_list[7],due_list[7],original_list[7],open_list[7],payment_list[7],descp_list[8],due_list[8],original_list[8],open_list[8],payment_list[8],descp_list[9],due_list[9],original_list[9],open_list[9],payment_list[9],comp_data[0],get_pym_data[6],)
                                            fbcursor.execute(ins_payment_sql,ins_payment_val,)
                                            finsysdb.commit()
                                        else:
                                            pass

                                        get_accts1_sql = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                        get_accts1_val = ('Account Receivable(Debtors)',comp_data[0])
                                        fbcursor.execute(get_accts1_sql,get_accts1_val)
                                        get_accts1_data = fbcursor.fetchone()
                                        
                                        accts1_bal = float(get_accts1_data[0]) - float(amtreceived) 
                                        upd_accts1_sql = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                        upd_accts1_val = (accts1_bal,'Account Receivable(Debtors)',comp_data[0])
                                        fbcursor.execute(upd_accts1_sql,upd_accts1_val)
                                        finsysdb.commit()

                                        try:
                                            get_accts1_sql1 = "SELECT balance FROM app1_accounts1 WHERE name=%s AND cid_id=%s"
                                            get_accts1_val1 = (depto,comp_data[0])
                                            fbcursor.execute(get_accts1_sql1,get_accts1_val1)
                                            get_accts1_data1 = fbcursor.fetchone()

                                            if not get_accts1_data1:
                                                pass
                                            else:
                                                accts1_bal1 = float(get_accts1_data1[0]) - float(amtreceived)
                                                upd_accts1_sql1 = "UPDATE app1_accounts1 SET balance=%s WHERE name=%s AND cid_id=%s"
                                                upd_accts1_val1 = (accts1_bal1,depto,comp_data[0])
                                                fbcursor.execute(upd_accts1_sql1,upd_accts1_val1)
                                                finsysdb.commit()
                                        except:
                                            pass

                                        try:
                                            get_accts_sql = "SELECT balance FROM app1_accounts WHERE name=%s AND cid_id=%s"
                                            get_accts_val = (depto,comp_data[0])
                                            fbcursor.execute(get_accts_sql,get_accts_val)
                                            get_accts_data = fbcursor.fetchone()

                                            if not get_accts_data:
                                                pass
                                            else:
                                                accts_bal = float(get_accts_data[0]) - float(amtreceived)
                                                upd_accts_sql = "UPDATE app1_accounts SET balance=%s WHERE name=%s AND cid_id=%s"
                                                upd_accts_val = (accts_bal,depto,comp_data[0])
                                                fbcursor.execute(upd_accts_sql,upd_accts_val)
                                                finsysdb.commit()
                                        except:
                                            pass

                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[0],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[0] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[0])
                                                baldue = float(open_list[0]) - float(payment_list[0])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[0],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[1],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[1] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[1])
                                                baldue = float(open_list[1]) - float(payment_list[1])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[1],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[2],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[2] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[2])
                                                baldue = float(open_list[2]) - float(payment_list[2])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[2],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[3],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[3] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[3])
                                                baldue = float(open_list[3]) - float(payment_list[3])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[3],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[4],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[4] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[4])
                                                baldue = float(open_list[4]) - float(payment_list[4])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[4],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[5],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[5] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[5])
                                                baldue = float(open_list[5]) - float(payment_list[5])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[5],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[6],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[6] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[6])
                                                baldue = float(open_list[6]) - float(payment_list[6])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[6],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[7],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[7] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[7])
                                                baldue = float(open_list[7]) - float(payment_list[7])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[7],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[8],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[8] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[8])
                                                baldue = float(open_list[8]) - float(payment_list[8])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[8],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        try:
                                            get_inv1_sql = "SELECT * FROM app1_invoice WHERE invoiceno=%s AND cid_id=%s"
                                            get_inv1_val = (inv_list[9],comp_data[0])
                                            fbcursor.execute(get_inv1_sql,get_inv1_val)
                                            get_inv1_data = fbcursor.fetchone()

                                            if get_inv1_data and inv_list[9] != 'undefined':
                                                amtrecvd = int(get_inv1_data[39]) + int(payment_list[9])
                                                baldue = float(open_list[9]) - float(payment_list[9])

                                                upd_inv_sql = "UPDATE app1_invoice SET amtrecvd=%s,baldue=%s WHERE invoiceno=%s AND cid_id=%s"
                                                upd_inv_val = (amtrecvd,baldue,inv_list[9],comp_data[0])
                                                fbcursor.execute(upd_inv_sql,upd_inv_val)
                                                finsysdb.commit()
                                            else:
                                                pass
                                        except:
                                            pass
                                        
                                        sr_Frame_1.destroy()
                                        sr_Frame.grid(row=0,column=0,sticky='nsew')
                                        

                                        show_sr_treeData()



                                    save_btn = Button(sr_Canvas_5,text='Save',width=20,height=2,font=('arial 10 bold'),background="#198fed",activebackground="#1476c5",foreground="white",activeforeground="white",bd=0,command=lambda:rp_savePayment())
                                    sr_Canvas_5.create_window(0,0,window=save_btn,tags=("button4")) 

                                    # rpt_label9 = Label(sr_Canvas_5,width=5,height=1,text="1",font=('arial 12'),background='#1b3857',fg="white",anchor="c")
                                    # sr_Canvas_5.create_window(0,0,window=rpt_label9,tags=("label20"))

                                    rpt_descp = Entry(sr_Canvas_5,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_descp,tags=("entry8")) 

                                    rpt_due = Entry(sr_Canvas_5,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_due,tags=("entry9")) 

                                    rpt_original = Entry(sr_Canvas_5,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_original,tags=("entry10")) 

                                    rpt_obal = Entry(sr_Canvas_5,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_obal,tags=("entry11"))

                                    rpt_payment = Entry(sr_Canvas_5,font=('arial 15'),width=17,background='#2f516f',foreground='white')
                                    sr_Canvas_5.create_window(0,0,anchor='c',state=HIDDEN,window=rpt_payment,tags=("entry12")) 

                                    def show_editEntry():
                                        selected_item = rp_tree.selection()[0]
                                        rpt_row = list(rp_tree.item(selected_item,'values'))
                                        if len(rpt_row) == '':
                                            pass
                                        else:
                                            sr_Canvas_5.itemconfig('label13',state='normal')
                                            sr_Canvas_5.itemconfig('label14',state='normal')
                                            sr_Canvas_5.itemconfig('label15',state='normal')
                                            sr_Canvas_5.itemconfig('label16',state='normal')
                                            sr_Canvas_5.itemconfig('label17',state='normal')

                                            sr_Canvas_5.itemconfig('entry8',state='normal')
                                            sr_Canvas_5.itemconfig('entry9',state='normal')
                                            sr_Canvas_5.itemconfig('entry10',state='normal')
                                            sr_Canvas_5.itemconfig('entry11',state='normal')
                                            sr_Canvas_5.itemconfig('entry12',state='normal')

                                            rpt_descp.delete(0,END)
                                            rpt_descp.insert(0,rpt_row[1])
                                            rpt_due.delete(0,END)
                                            rpt_due.insert(0,rpt_row[2])
                                            rpt_original.delete(0,END)
                                            rpt_original.insert(0,rpt_row[3])
                                            rpt_obal.delete(0,END)
                                            rpt_obal.insert(0,rpt_row[4])
                                            rpt_payment.delete(0,END)
                                            rpt_payment.insert(0,rpt_row[5])

                                            try:
                                                def assign_newvalue(event):
                                                    rp_tree.item(selected_item,values=(rpt_row[0],rpt_descp.get(),rpt_due.get(),rpt_original.get(),rpt_obal.get(),rpt_payment.get()))

                                                rpt_descp.bind("<KeyRelease>",assign_newvalue)
                                                rpt_due.bind("<KeyRelease>",assign_newvalue)
                                                rpt_original.bind("<KeyRelease>",assign_newvalue)
                                                rpt_obal.bind("<KeyRelease>",assign_newvalue)
                                                rpt_payment.bind("<KeyRelease>",assign_newvalue)
                                            except:
                                                pass


                                    rpt_edit = Button(sr_Canvas_5,font=('arial 12'),text='Edit',width=11,background='#1b3857',foreground='white',activebackground='#1b3857',activeforeground='white',command=lambda:show_editEntry())
                                    sr_Canvas_5.create_window(0,0,anchor='c',window=rpt_edit,tags=("combo13")) 

                                    rp_label5 = Label(sr_Canvas_5,width=20,height=1,text="Payment date",font=('arial 12'),background='#1b3857',fg="white",anchor="w")
                                    sr_Canvas_5.create_window(0,0,window=rp_label5,tags=("label6"))

                                    rp_pdate = DateEntry(sr_Canvas_5,font=('arial 15'),date_pattern="yyyy-mm-dd",width=19,background='#2f516f',foreground='white')
                                    rp_pdate.delete(0,END)
                                    rp_pdate.insert(0,get_pym_data[4])
                                    cwidth = root.winfo_screenwidth()

                                    if cwidth > 1280:
                                        sr_Canvas_5.create_window(122.27272727272727,442.44604316546764,anchor='nw',window=rp_pdate,tags=('date4'))
                                    elif cwidth <= 1024:
                                        sr_Canvas_5.create_window(91.54545454545455,456.1151079136691,anchor='nw',window=rp_pdate,tags=('date4'))
                                    else:
                                        sr_Canvas_5.create_window(114.81818181818181,407.9136690647482,anchor='nw',window=rp_pdate,tags=('date4'))
                                else:
                                    pass
                        show_sr_treeData()
                    
                    
                    sr_Canvas = Canvas(sr_Frame,bg='#2f516f',scrollregion=(0,0,700,1200))

                    sr_Frame.grid_rowconfigure(0,weight=1)
                    sr_Frame.grid_columnconfigure(0,weight=1)

                    sr_Scroll = Scrollbar(sr_Frame,orient=VERTICAL)
                    sr_Scroll.grid(row=0,column=1,sticky='ns')
                    sr_Scroll.config(command=sr_Canvas.yview)
                    sr_Canvas.bind("<Configure>", responsive_widgets_sales)
                    sr_Canvas.config(yscrollcommand=sr_Scroll.set)
                    sr_Canvas.grid(row=0,column=0,sticky='nsew')


                    sr_Canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly1"))

                    sr_label = Label(sr_Canvas,width=15,height=1,text="SALES RECORDS",font=('arial 25'),background="#1b3857",fg="white")
                    sr_label_win = sr_Canvas.create_window(0,0,anchor="c",window=sr_label,tags=("label1"))
                    sr_Canvas.create_line(0,0,0,0,fill='gray',width=1,tags=("hline"))

                    sr_Canvas.create_polygon(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,smooth=True,fill="#1b3857",tags=("poly2"))

                    sr_transCombo = ttk.Combobox(sr_Canvas,font=('arial 15'),width=14)
                    sr_transCombo['values'] = ['New Transactios','Invoice','Payment','Sales Receipt','Credit Note','Estimate','Delayed Charge','Time Activity']
                    sr_transCombo.current(0)
                    sr_transCombo.bind('<<ComboboxSelected>>',sr_transCombo_options)
                    sr_transCombo_win = sr_Canvas.create_window(0,0,window=sr_transCombo,tags=("combo2"))

                    srt_actionCombo = ttk.Combobox(sr_Canvas,width=7,font=('arial 15'))
                    srt_actionCombo['values'] = ['Actions','Edit','Delete']
                    srt_actionCombo.current(0)
                    srt_actionCombo.bind("<<ComboboxSelected>>",sr_Actions)
                    sr_Canvas.create_window(0,0,window=srt_actionCombo,tags=("combo1"))

                    sr_tree_style = ttk.Style()
                    sr_tree_style.theme_use("default")
                    sr_tree_style.configure("Treeview",background="#2f516f",foreground="white",rowheight=25,font=(None,11),fieldbackground="#2f516f")
                    sr_tree_style.configure("Treeview.Heading",background="#1b3857",activeforeground="black",foreground="white",font=(None,11))
                    inv_scrollbar = Scrollbar(sr_Frame,orient="vertical")
                    
                    sr_tree = ttk.Treeview(sr_Canvas,height=30,columns=("0","1","2","3","4","5","6","7","8"),show="headings",yscrollcommand=inv_scrollbar.set)
                    sr_tree.column("0",width=110,anchor=CENTER)
                    sr_tree.column("1",width=150,anchor=CENTER)
                    sr_tree.column("2",width=110,anchor=CENTER)
                    sr_tree.column("3",width=230,anchor=CENTER)
                    sr_tree.column("4",width=110,anchor=CENTER)
                    sr_tree.column("5",width=150,anchor=CENTER)
                    sr_tree.column("6",width=140,anchor=CENTER)
                    sr_tree.column("7",width=110,anchor=CENTER)
                    sr_tree.column("8",width=150,anchor=CENTER)
                    sr_tree.heading("0",text="DATE")
                    sr_tree.heading("1",text="TYPE")
                    sr_tree.heading("2",text="NO.")
                    sr_tree.heading("3",text="CUSTOMER")
                    sr_tree.heading("4",text="DUE DATE")
                    sr_tree.heading("5",text="BALANCE")
                    sr_tree.heading("6",text="TOTAL BEFORE")
                    sr_tree.heading("7",text="TAX")
                    sr_tree.heading("8",text="TOTAL")

                    user_sql = "SELECT id FROM auth_user WHERE username=%s"
                    user_val = (nm_ent.get(),)
                    fbcursor.execute(user_sql,user_val)
                    user_data = fbcursor.fetchone()

                    comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                    comp_val = (user_data[0],)
                    fbcursor.execute(comp_sql,comp_val)
                    comp_data = fbcursor.fetchone()

                    get_payment_sql = "SELECT * FROM app1_payment WHERE cid_id=%s"
                    get_payment_val = (comp_data[0],)
                    fbcursor.execute(get_payment_sql,get_payment_val)
                    get_payment_data = fbcursor.fetchall()
                    
                    get_srp_sql = "SELECT * FROM app1_salesrecpts WHERE cid_id=%s"
                    get_srp_val = (comp_data[0],)
                    fbcursor.execute(get_srp_sql,get_srp_val)
                    get_srp_data = fbcursor.fetchall()

                    get_crdn_sql = "SELECT * FROM app1_credit WHERE cid_id=%s"
                    get_crdn_val = (comp_data[0],)
                    fbcursor.execute(get_crdn_sql,get_crdn_val)
                    get_crdn_data = fbcursor.fetchall()

                    get_est_sql = "SELECT * FROM app1_estimate WHERE cid_id=%s"
                    get_est_val = (comp_data[0],)
                    fbcursor.execute(get_est_sql,get_est_val)
                    get_est_data = fbcursor.fetchall()

                    get_dc_sql = "SELECT * FROM app1_delayedcharge WHERE cid_id=%s"
                    get_dc_val = (comp_data[0],)
                    fbcursor.execute(get_dc_sql,get_dc_val)
                    get_dc_data = fbcursor.fetchall()

                    get_ta_sql = "SELECT * FROM app1_timeactsale WHERE cid_id=%s"
                    get_ta_val = (comp_data[0],)
                    fbcursor.execute(get_ta_sql,get_ta_val)
                    get_ta_data = fbcursor.fetchall()

                    inv_scrollbar.config(command=sr_tree.yview)
                    inv_scrollbar.grid(row=0,column=2,sticky='ns')

                    for child in sr_tree.get_children():
                        sr_tree.delete(child)
                    
                    
                    try:
                        for p in get_payment_data:
                            sr_tree.insert(parent='',index='end',values=(p[4],'Payment',p[6],p[1],p[4],p[12],p[11],'0',p[11]))
                    except:
                        pass

                    try:
                        for s in get_srp_data:
                            sr_tree.insert(parent='',index='end',values=(s[4],'Sales reciept',s[5],s[1],'','0.00',s[16],s[18],s[19]))
                    except:
                        pass

                    try:
                        for c in get_crdn_data:
                            sr_tree.insert(parent='',index='end',values=(c[4],'Credit Note',c[5],c[1],c[4],c[16],c[14],c[17],c[16]))
                    except:
                        pass

                    try:
                        for e in get_est_data:
                            sr_tree.insert(parent='',index='end',values=(e[4],'Estimate',e[6],e[1],e[4],"0.00",e[15],e[38],e[16]))
                    except:
                        pass
                    
                    try:
                        for d in get_dc_data:
                            sr_tree.insert(parent='',index='end',values=(d[2],'Delayed Charge',d[3],d[1],d[2],"0.00",d[10],d[30],d[11]))
                    except:
                        pass

                    try:
                        for t in get_ta_data:
                            sr_tree.insert(parent='',index='end',values=(t[1],'Time Activity',t[0],t[3],t[1],"0.00","0.00","0.00","0.00"))
                    except:
                        pass

                    def show_sr_treeData():
                        user_sql = "SELECT id FROM auth_user WHERE username=%s"
                        user_val = (nm_ent.get(),)
                        fbcursor.execute(user_sql,user_val)
                        user_data = fbcursor.fetchone()

                        comp_sql = 'SELECT cid FROM app1_company WHERE id_id=%s'
                        comp_val = (user_data[0],)
                        fbcursor.execute(comp_sql,comp_val)
                        comp_data = fbcursor.fetchone()

                        get_payment_sql = "SELECT * FROM app1_payment WHERE cid_id=%s"
                        get_payment_val = (comp_data[0],)
                        fbcursor.execute(get_payment_sql,get_payment_val)
                        get_payment_data = fbcursor.fetchall()
                        
                        get_srp_sql = "SELECT * FROM app1_salesrecpts WHERE cid_id=%s"
                        get_srp_val = (comp_data[0],)
                        fbcursor.execute(get_srp_sql,get_srp_val)
                        get_srp_data = fbcursor.fetchall()

                        get_crdn_sql = "SELECT * FROM app1_credit WHERE cid_id=%s"
                        get_crdn_val = (comp_data[0],)
                        fbcursor.execute(get_crdn_sql,get_crdn_val)
                        get_crdn_data = fbcursor.fetchall()

                        get_est_sql = "SELECT * FROM app1_estimate WHERE cid_id=%s"
                        get_est_val = (comp_data[0],)
                        fbcursor.execute(get_est_sql,get_est_val)
                        get_est_data = fbcursor.fetchall()

                        get_dc_sql = "SELECT * FROM app1_delayedcharge WHERE cid_id=%s"
                        get_dc_val = (comp_data[0],)
                        fbcursor.execute(get_dc_sql,get_dc_val)
                        get_dc_data = fbcursor.fetchall()

                        get_ta_sql = "SELECT * FROM app1_timeactsale WHERE cid_id=%s"
                        get_ta_val = (comp_data[0],)
                        fbcursor.execute(get_ta_sql,get_ta_val)
                        get_ta_data = fbcursor.fetchall()

                        for child in sr_tree.get_children():
                            sr_tree.delete(child)
                        
                        try:
                            for p in get_payment_data:
                                sr_tree.insert(parent='',index='end',values=(p[4],'Payment',p[6],p[1],p[4],p[12],p[11],'0',p[11]))
                        except:
                            pass

                        try:
                            for s in get_srp_data:
                                sr_tree.insert(parent='',index='end',values=(s[4],'Sales reciept',s[5],s[1],'','0.00',s[16],s[18],s[19]))
                        except:
                            pass

                        try:
                            for c in get_crdn_data:
                                sr_tree.insert(parent='',index='end',values=(c[4],'Credit Note',c[5],c[1],c[4],c[16],c[14],c[17],c[16]))
                        except:
                            pass

                        try:
                            for e in get_est_data:
                                sr_tree.insert(parent='',index='end',values=(e[4],'Estimate',e[6],e[1],e[4],"0.00",e[15],e[38],e[16]))
                        except:
                            pass
                        
                        try:
                            for d in get_dc_data:
                                sr_tree.insert(parent='',index='end',values=(d[2],'Delayed Charge',d[3],d[1],d[2],"0.00",d[10],d[30],d[11]))
                        except:
                            pass

                        try:
                            for t in get_ta_data:
                                sr_tree.insert(parent='',index='end',values=(t[1],'Time Activity',t[0],t[3],t[1],"0.00","0.00","0.00","0.00"))
                        except:
                            pass

                    sr_Canvas.create_window(0,0,window=sr_tree,anchor="nw",tags=("tree_main"))

                    #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Expenses Tab}
                    tab_exp = ttk.Notebook(tab4)
                    tab4_1 =  ttk.Frame(tab_exp)
                    tab4_2=  ttk.Frame(tab_exp)
                    tab_exp.add(tab4_1,compound = LEFT, text ='Expenses')
                    tab_exp.add(tab4_2,compound = LEFT, text ='Supliers')
                    tab_exp.pack(expand = 1, fill ="both")
                    #33333333333333333333333333333333333333333333333333333333333333333333333333333333333{Pay Roll Tab}
                    tab_payroll = ttk.Notebook(tab5)
                    tab5_1 =  ttk.Frame(tab_payroll)
                    tab5_2=  ttk.Frame(tab_payroll)
                    
                    tab_payroll.add(tab5_1,compound = LEFT, text ='Employee')
                    tab_payroll.add(tab5_2,compound = LEFT, text ='Payslip')

                    tab_payroll.pack(expand = 1, fill ="both")

                    #333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Report Tab}

                    tab_report = ttk.Notebook(tab6)
                    tab6_1 =  ttk.Frame(tab_report)
                    tab6_2=  ttk.Frame(tab_report)
                    tab6_3 = ttk.Frame(tab_report)
                    tab6_4=  ttk.Frame(tab_report)

                    
                        
                    tab_report.add(tab6_1,compound = LEFT, text ='Profit & Loss')
                    tab_report.add(tab6_2,compound = LEFT, text ='Balance Sheet')
                    tab_report.add(tab6_3,compound = LEFT, text ='Accounts Receivables')
                    tab_report.add(tab6_4,compound = LEFT, text ='Accounts Payables')
                
                    tab_report.pack(expand = 1, fill ="both")

                    #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Taxes}

                    tab_tax = ttk.Notebook(tab7)
                    tab7_1 =  ttk.Frame(tab_tax)
                    tab7_2=  ttk.Frame(tab_tax)

                    tab_tax.add(tab7_1,compound = LEFT, text ='GST')
                    tab_tax.add(tab7_2,compound = LEFT, text ='New')

                    tab_tax.pack(expand = 1, fill ="both")

                    #333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Accounting}
                    tab_account = ttk.Notebook(tab8)
                    tab8_1 =  ttk.Frame(tab_account)
                    tab8_2=  ttk.Frame(tab_account)

                    tab_account.add(tab8_1,compound = LEFT, text ='Chart Of Accounts')
                    tab_account.add(tab8_2,compound = LEFT, text ='Reconcile')
                
                
                    tab_account.pack(expand = 1, fill ="both")
                    #33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333{Cash Management}
                    tab_cash = ttk.Notebook(tab10)
                    
                    tab10_1 =  ttk.Frame(tab_cash)
                    tab10_2=  ttk.Frame(tab_cash)
                    tab10_3 = ttk.Frame(tab_cash)

                    tab_cash.add(tab10_1,compound = LEFT, text ='Cash Position')
                    tab_cash.add(tab10_2,compound = LEFT, text ='Cash Flow Analyzer')
                    tab_cash.add(tab10_3,compound = LEFT, text ='Check Cash Flow')

                    tab_cash.pack(expand = 1, fill ="both")
                    #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
                    # 
                    # {My Account}
                    
                    def search_dash():
                        if srh_top.get()=="Dashboard":
                            pass
                        else:
                            pass
                    srh_top = Entry(tp_lb_srh, width=50, font=('Calibri 16'))
                    srh_top.insert(0,"Search")
                    srh_top.bind("<Button-1>",srh_fn)
                    srh_top.grid(row=2,column=1,padx=(30,0), pady=20,sticky='nsew')

                    srh_btn6 = Button(tp_lb_srh, image=srh_img, command=search_dash, bg="#213b52", fg="black",border=0)
                    srh_btn6.grid(row=2,column=4,padx=(0,30))
                    Sys_mains_frame=Frame(tab9, height=750,bg="#2f516f")
                    Sys_mains_frame.pack(fill=X)
                    
                else:
                    messagebox.showerror("Login Failed","Invalid username or password")
                    pass
    
#---------------------------------------------------------------------------------------------------------------Company Second Portion
def cmpny_crt2():
    

    cmp_name=cmp_nm.get()
    cmp_address=cmp_cmpn.get()
    cmp_ctys=cmp_cty.get()
    state=cmp_stat.get()
    cmp_pins=cmp_pin.get()
    cmp_emails=cmp_email.get()
    cmp_phs=cmp_ph.get()
    cmp_filess=cmp_files.get()
    if cmp_name is not None:
        sql_log_sql='select id from auth_user where username=%s'
        sql_log_sql_val=(sys_usr.get(),)
        
        fbcursor.execute(sql_log_sql,sql_log_sql_val,)
        id=fbcursor.fetchone()
        
        signup_cmp_sql="insert into app1_company(cname,caddress,city,state,pincode,cemail,phone,cimg,id_id) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)" #adding values into db
        signup_cmp_sql_val=(cmp_name,cmp_address,cmp_ctys,state,cmp_pins,cmp_emails,cmp_phs,cmp_filess,id[0])
        fbcursor.execute(signup_cmp_sql,signup_cmp_sql_val,)
        finsysdb.commit()
    else:
        messagebox.showerror("Company Creation Failed","Enter your company details")

    main_frame_cmpny.pack_forget()
    global main_frame_cmpny2,nm_nm2,industry_tp,cmp_type,bs_act_man,paid_typ
    main_frame_cmpny2=Frame(root, height=750,bg="#213b52")
    main_frame_cmpny2.pack(fill=X,)

    cmpny_dt_frm2=Frame(main_frame_cmpny2, height=650, width=500,bg="white")
    cmpny_dt_frm2.pack(pady=105)

    def responsive_wid_cmp2(event):
        dwidth = event.width
        dheight = event.height
        dcanvas = event.widget
   

        dcanvas.coords("cmpny_hd1",dwidth/40,dheight/15)
        dcanvas.coords("nm_nm2",dwidth/6,dheight/5)
        dcanvas.coords("cmpny_cntry",dwidth/6,dheight/3.2)
        dcanvas.coords("cmpny_cntry2",dwidth/6,dheight/2.35)
        dcanvas.coords("r1",dwidth/2.2,dheight/1.8)
        dcanvas.coords("r2",dwidth/2.2,dheight/1.6)
        dcanvas.coords("cmpny_cntry3",dwidth/6,dheight/1.38)
        # dcanvas.coords("button_cmp2",dwidth/4.3,dheight/1.2)
        # dcanvas.coords("button_cmp3",dwidth/1.9,dheight/1.2)
        dcanvas.coords("button_cmp3",dwidth/2.8,dheight/1.1)
        

        dcanvas.coords("cmp_lbl1",dwidth/6,dheight/3.8)
        dcanvas.coords("cmp_lbl2",dwidth/6,dheight/2.7)
        dcanvas.coords("cmp_lbl3",dwidth/6,dheight/2)
        dcanvas.coords("cmp_lbl4",dwidth/6,dheight/1.46)
        

    lf_cmpy2= Canvas(cmpny_dt_frm2,height=650, width=500)
    lf_cmpy2.bind("<Configure>", responsive_wid_cmp2)
    lf_cmpy2.pack(fill=X)

    def name_ent2(event):
        if nm_nm2.get()=="Legal Business Name":
            nm_nm2.delete(0,END)
        else:
            pass


    cmpny_hd1=Label(lf_cmpy2, text="Let's Start Building Your FinsYs",font=('Calibri 28 bold'), fg="black")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmpny_hd1, tag=("cmpny_hd1"))

    

    nm_nm2 = Entry(cmpny_dt_frm2, width=30, font=('Calibri 16'),borderwidth=2)
    nm_nm2.insert(0,"Legal Business Name")
    nm_nm2.bind("<Button-1>",name_ent2)
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=nm_nm2, tag=("nm_nm2"))

    cmp_lbl1=Label(cmpny_dt_frm2, text="Your Industry",font=('Calibri 12') ,fg="black")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmp_lbl1, tag=("cmp_lbl1"))

    industry_tp= StringVar()
    cmpny_cntry = ttk.Combobox(cmpny_dt_frm2,textvariable=industry_tp,width=29,font=('Calibri 16'))
    
    cmpny_cntry['values'] = ('Accounting Services','Consultants, doctors, Lawyers and similar','Information Tecnology','Manufacturing','Professional, Scientific and Technical Services','Restaurant/Bar and similar','Retail and Smilar','Other Finanacial Services')
   
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmpny_cntry, tag=("cmpny_cntry"))

    cmp_lbl2=Label(cmpny_dt_frm2, text="Company type",font=('Calibri 12') ,fg="black")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmp_lbl2, tag=("cmp_lbl2"))

    cmp_type = StringVar()
    cmpny_cntry2 = ttk.Combobox(cmpny_dt_frm2,textvariable=cmp_type,width=29,font=('Calibri 16'))
    
    cmpny_cntry2['values'] = ('Private Limited Company','Public Limited Company','Joint-Venture Company','Partnership Firm Company','One Person Company','Branch Office Company','Non Government Organization')
    
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmpny_cntry2, tag=("cmpny_cntry2"))
    
    cmp_lbl3=Label(cmpny_dt_frm2, text="Do you have an Accountant, Bookkeeper or Tax Pro ?",font=('Calibri 12') ,fg="black")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmp_lbl3, tag=("cmp_lbl3"))

    bs_act_man=StringVar()
    r1=Radiobutton(cmpny_dt_frm2, text = "Yes", variable = bs_act_man, value ="Yes",font=('Calibri 16'))
    r1.select()
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=r1, tag=("r1"))

    r2=Radiobutton(cmpny_dt_frm2, text = "No", variable = bs_act_man, value ="No",font=('Calibri 16'))
    r2.select()
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=r2, tag=("r2"))


    cmp_lbl4=Label(cmpny_dt_frm2, text="How do you like to get paid?",font=('Calibri 12') ,fg="black")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmp_lbl4, tag=("cmp_lbl4"))
    
    paid_typ = StringVar()
    cmpny_cntry3 = ttk.Combobox(cmpny_dt_frm2,textvariable=paid_typ,width=29,font=('Calibri 16'))
    cmpny_cntry3['values'] = ('Cash','Cheque','Credit card/Debit card','Bank Transfer','Paypal/Other service')
   
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=cmpny_cntry3, tag=("cmpny_cntry3"))
    def prev_funct():
        main_frame_cmpny.pack(fill=X,)

    # button_cmp2 = customtkinter.CTkButton(master=cmpny_dt_frm2,command=prev_funct,text="Previous",bg="#213b52")
    # win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=button_cmp2, tag=("button_cmp2"))
    button_cmp3 = customtkinter.CTkButton(master=cmpny_dt_frm2,command=fun_sign_in,text="Submit",bg="#213b52")
    win_inv1 = lf_cmpy2.create_window(0, 0, anchor="nw", window=button_cmp3, tag=("button_cmp3"))
#-------------------------------------------------------------------------------------------------------------------company creation

def cmpny_crt1():
    
    first_name=fst_nm.get()
    last_name=lst_nm.get()
    email=sys_em.get()
    username=sys_usr.get()
    password=sys_pass.get()
    con_password=sys_cf.get()
    join_dt=datetime.today()
    sql_signup='select * from auth_user'
    fbcursor.execute(sql_signup)
    check_none=fbcursor.fetchone()
    global main_frame_cmpny,cmp_nm,cmp_cmpn,cmp_cty,cmp_pin,cmp_email,cmp_ph,cmp_files,cmp_stat
    if check_none is not None:
        if check_none[4]!=username and check_none[1]!=password:
            
            if password==con_password and con_password==password :
                
                signup_sql="insert into auth_user(first_name,last_name,email,username,password,date_joined) VALUES(%s,%s,%s,%s,%s,%s)" #adding values into db
                signup_sql_val=(first_name,last_name,email,username,password,join_dt,)
                fbcursor.execute(signup_sql,signup_sql_val,)
                finsysdb.commit()
                try:
                    main_frame_cmpny2.pack_forget()
                except:
                    pass
                try:
                    main_frame_signup.pack_forget()
                except:
                    pass
                
                main_frame_cmpny=Frame(root, height=750,bg="#213b52")
                main_frame_cmpny.pack(fill=X,)

                cmpny_dt_frm=Frame(main_frame_cmpny, height=650, width=500,bg="white")
                cmpny_dt_frm.pack(pady=50)

                def name_ent(event):
                    if cmp_nm.get()=="Company Name":
                        cmp_nm.delete(0,END)
                    else:
                        pass

                def cmp_add(event):
                    if cmp_cmpn.get()=="Company Address":
                            cmp_cmpn.delete(0,END)
                    else:
                        pass
                def cty_ent(event):
                    if cmp_cty.get()=="City":
                        cmp_cty.delete(0,END)
                    else:
                        pass

                def em_ent(event):
                    if cmp_email.get()=="Email":
                            cmp_email.delete(0,END)
                    else:
                        pass
                def ph_ent(event):
                    if cmp_ph.get()=="Phone Number":
                        cmp_ph.delete(0,END)
                    else:
                        pass

                def fil_ent(event):
                    sql_log_sql='select * from auth_user where username=%s'
                    vals=(sys_usr.get(),)
                    fbcursor.execute(sql_log_sql,vals)
                    check_logins=fbcursor.fetchone()
                    
                    cmp_logo = askopenfilename(filetypes=(("png file ",'.png'),('PDF', '*.pdf',),("jpg file", ".jpg"),  ("All files", "*.*"),))
                    logo_crp=cmp_logo.split('/',-1)
                    im1 = Image.open(r""+cmp_logo) 
                    im1 = im1.save("profilepic/propic"+str(check_logins[0])+".png")
                    
                    cmp_files.delete(0,END)
                    cmp_files.insert(0,logo_crp[-1])
                
                def responsive_wid_cmp1(event):
                    dwidth = event.width
                    dheight = event.height
                    dcanvas = event.widget
            

                    dcanvas.coords("cmpny_hd",dwidth/2,dheight/13)
                    dcanvas.coords("nm_nm",dwidth/2,dheight/5)
                    dcanvas.coords("cmp_cmpn",dwidth/2,dheight/3.5)
                    dcanvas.coords("cmp_cty",dwidth/2,dheight/2.7)
                    dcanvas.coords("cmpny_cntry",dwidth/2,dheight/2.2)
                    dcanvas.coords("cmp_pin",dwidth/2,dheight/1.85)
                    dcanvas.coords("cmp_email",dwidth/2,dheight/1.6)
                    dcanvas.coords("cmp_ph",dwidth/2,dheight/1.4)
                    dcanvas.coords("cmp_files",dwidth/2,dheight/1.25)
                    dcanvas.coords("button_cmp",dwidth/2,dheight/1.1)


                lf_cmpy1= Canvas(cmpny_dt_frm,height=650, width=500)
                lf_cmpy1.bind("<Configure>", responsive_wid_cmp1)
                lf_cmpy1.pack(fill=X)

                cmpny_hd=Label(lf_cmpy1, text="We're Happy you're Here!",font=('Calibri 30 bold'), fg="black")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmpny_hd, tag=("cmpny_hd"))


                cmp_nm = Entry(cmpny_dt_frm, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_nm.insert(0,"Company Name")
                cmp_nm.bind("<Button-1>",name_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_nm, tag=("nm_nm"))

                cmp_cmpn = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_cmpn.insert(0,"Company Address")
                cmp_cmpn.bind("<Button-1>",cmp_add)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_cmpn, tag=("cmp_cmpn"))

                cmp_cty = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_cty.insert(0,"City")
                cmp_cty.bind("<Button-1>",cty_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_cty, tag=("cmp_cty"))

                cmp_stat = StringVar()
                cmpny_cntry = ttk.Combobox(lf_cmpy1,textvariable=cmp_stat,width=29,font=('Calibri 16'))
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmpny_cntry, tag=("cmpny_cntry"))
                cmpny_cntry['values'] = ('Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Anguilla', 'Antigua And Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia And Herzegovina', 'Botswana', 'Bouvet Island', 'Brazil', 'British Virgin Islands', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Canada', 'Cape Verde', 'Cayman Islands', 'Chad', 'Chile', 'China', 'Colombia', 'Comoros', 'Congo', 'Cook Islands', 'Costa Rica', 'Croatia', 'Curacao', 'Cyprus', 'Czech Republic', 'Democratic Republic Of The Congo', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'East Timor', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Estonia', 'Ethiopia', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Guiana', 'French Polynesia', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guadeloupe', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Isle Of Man', 'Israel', 'Italy', 'Ivory Coast', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kosovo', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Libyan Arab Jamahiriya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macao', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Martinique', 'Mauritania', 'Mauritius', 'Mexico', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Morocco', 'Mozambique', 'Myanmar', 'Namibia', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Russian Federation', 'Rwanda', 'Saint Kitts And Nevis', 'Saint Lucia', 'Saint Martin', 'Saint Pierre And Miquelon', 'Saint Vincent And The Grenadines', 'Samoa', 'San Marino', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Somalia', 'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Swaziland', 'Sweden', 'Switzerland', 'Taiwan', 'Tajikistan', 'Tanzania', 'Tanzania, United Republic Of', 'Thailand', 'Togo', 'Tonga', 'Trinidad And Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks And Caicos Islands', 'U.S. Virgin Islands', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Venezuela', 'Vietnam', 'Wallis And Futuna', 'Yemen', 'Zambia', 'Zimbabwe')
                cmpny_cntry.current(0)

                cmp_pin = Spinbox(lf_cmpy1,from_=1,to=1000000,width=29, font=('Calibri 16'),borderwidth=2)
                cmp_pin.delete(0,END)
                cmp_pin.insert(0,"Pincode")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_pin, tag=("cmp_pin"))

                def validateb211(value):
        
                        """
                        Validat the email entry
                        :param value:
                        :return:
                        """
                        pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
                        if re.fullmatch(pattern, value) is None:
                            
                            return False

                        cmp_email.config(fg="black")
                        return True

                def on_invalidb211():
                        cmp_email.config(fg="red")
                        

                cmp_email = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_email.insert(0,"Email")
                cmp_email.bind("<Button-1>",em_ent)
                vcmdb211 = (lf_cmpy1.register(validateb211), '%P')
                ivcmdb211 = (lf_cmpy1.register(on_invalidb211),)
                cmp_email.config(validate='focusout', validatecommand=vcmdb211, invalidcommand=ivcmdb211)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_email, tag=("cmp_email"))

                cmp_ph = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_ph.insert(0,"Phone Number")
                cmp_ph.bind("<Button-1>",ph_ent)
                def validate_telb51(value):
        
                        pattern = r'^[0-9]\d{9}$'
                        if re.fullmatch(pattern, value) is None:
                            
                            return False
                        cmp_ph.config(fg="black")
                        return True

                def on_invalid_telb51():
                        cmp_ph.config(fg="red")
                        
                v_tel_cmdb51 = (lf_cmpy1.register(validate_telb51), '%P')
                iv_tel_cmdb51 = (lf_cmpy1.register(on_invalid_telb51),)
                cmp_ph.config(validate='focusout', validatecommand=v_tel_cmdb51, invalidcommand=iv_tel_cmdb51)

                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_ph, tag=("cmp_ph"))

                cmp_files = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_files.insert(0,"No file Chosen")
                cmp_files.bind("<Button-1>",fil_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_files, tag=("cmp_files"))

                button_cmp = customtkinter.CTkButton(master=lf_cmpy1,command=cmpny_crt2,text="Next",bg="#213b52")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=button_cmp, tag=("button_cmp"))
            else:
                messagebox.showerror("Sign Up Failed","password and conform password does not match")
        else:
            messagebox.showerror("Sign Up Failed","Username and password already exist")
    else:
        if password==con_password and con_password==password :
                
                signup_sql="insert into auth_user(first_name,last_name,email,username,password) VALUES(%s,%s,%s,%s,%s)" #adding values into db
                signup_sql_val=(first_name,last_name,email,username,password,)
                fbcursor.execute(signup_sql,signup_sql_val,)
                finsysdb.commit()
                try:
                    main_frame_cmpny2.pack_forget()
                except:
                    pass
                try:
                    main_frame_signup.pack_forget()
                except:
                    pass
                
                main_frame_cmpny=Frame(root, height=750,bg="#213b52")
                main_frame_cmpny.pack(fill=X,)

                cmpny_dt_frm=Frame(main_frame_cmpny, height=650, width=500,bg="white")
                cmpny_dt_frm.pack(pady=50)

                def name_ent(event):
                    if nm_nm.get()=="Company Name":
                        nm_nm.delete(0,END)
                    else:
                        pass

                def cmp_add(event):
                    if cmp_cmpn.get()=="Company Address":
                            cmp_cmpn.delete(0,END)
                    else:
                        pass
                def cty_ent(event):
                    if cmp_cty.get()=="City":
                        cmp_cty.delete(0,END)
                    else:
                        pass

                def em_ent(event):
                    if cmp_email.get()=="Email":
                            cmp_email.delete(0,END)
                    else:
                        pass
                def ph_ent(event):
                    if cmp_ph.get()=="Phone Number":
                        cmp_ph.delete(0,END)
                    else:
                        pass

                def fil_ent(event):
                    sql_log_sql='select * from auth_user where username=%s'
                    vals=(sys_usr.get(),)
                    fbcursor.execute(sql_log_sql,vals)
                    check_logins=fbcursor.fetchone()
                    cmp_logo = askopenfilename(filetypes=(("png file ",'.png'),('PDF', '*.pdf',),("jpg file", ".jpg"),  ("All files", "*.*"),))
                    logo_crp=cmp_logo.split('/',-1)
                    im1 = Image.open(r""+cmp_logo) 
                    im1 = im1.save("profilepic/propic"+str(check_logins[0])+".png")
                    
                    cmp_files.delete(0,END)
                    cmp_files.insert(0,logo_crp[-1])
                
                def responsive_wid_cmp1(event):
                    dwidth = event.width
                    dheight = event.height
                    dcanvas = event.widget
            

                    dcanvas.coords("cmpny_hd",dwidth/2,dheight/13)
                    dcanvas.coords("nm_nm",dwidth/2,dheight/5)
                    dcanvas.coords("cmp_cmpn",dwidth/2,dheight/3.5)
                    dcanvas.coords("cmp_cty",dwidth/2,dheight/2.7)
                    dcanvas.coords("cmpny_cntry",dwidth/2,dheight/2.2)
                    dcanvas.coords("cmp_pin",dwidth/2,dheight/1.85)
                    dcanvas.coords("cmp_email",dwidth/2,dheight/1.6)
                    dcanvas.coords("cmp_ph",dwidth/2,dheight/1.4)
                    dcanvas.coords("cmp_files",dwidth/2,dheight/1.25)
                    dcanvas.coords("button_cmp",dwidth/2,dheight/1.1)


                lf_cmpy1= Canvas(cmpny_dt_frm,height=650, width=500)
                lf_cmpy1.bind("<Configure>", responsive_wid_cmp1)
                lf_cmpy1.pack(fill=X)

                cmpny_hd=Label(lf_cmpy1, text="We're Happy you're Here!",font=('Calibri 30 bold'), fg="black")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmpny_hd, tag=("cmpny_hd"))


                nm_nm = Entry(cmpny_dt_frm, width=30, font=('Calibri 16'),borderwidth=2)
                nm_nm.insert(0,"Company Name")
                nm_nm.bind("<Button-1>",name_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=nm_nm, tag=("nm_nm"))

                cmp_cmpn = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_cmpn.insert(0,"Company Address")
                cmp_cmpn.bind("<Button-1>",cmp_add)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_cmpn, tag=("cmp_cmpn"))

                cmp_cty = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_cty.insert(0,"City")
                cmp_cty.bind("<Button-1>",cty_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_cty, tag=("cmp_cty"))

                invset_bg_var = StringVar()
                cmpny_cntry = ttk.Combobox(lf_cmpy1,textvariable=invset_bg_var,width=29,font=('Calibri 16'))
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmpny_cntry, tag=("cmpny_cntry"))
                cmpny_cntry['values'] = ('Default','Black','Maroon','Green','Olive','Navy','Purple','Teal','Gray','Silver','Red','Lime','Yellow','Blue','Fuchsia','Aqua','White','ScrollBar','Background','ActiveCaption','InactiveCaption','Menu','Window','WindowFrame','MenuText','WindowText','CaptionText','ActiveBorder','InactiveBorder','AppWorkSpace','Highlight','HighlightText','BtnFace','InactiveCaptionText','BtnHighlight','3DDkShadow','3DLight','InfoText','InfoBk','Custom')
                cmpny_cntry.current(0)

                cmp_pin = Spinbox(lf_cmpy1,from_=1,to=1000000,width=29, font=('Calibri 16'),borderwidth=2)
                cmp_pin.delete(0,END)
                cmp_pin.insert(0,"Pincode")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_pin, tag=("cmp_pin"))
            

                cmp_email = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_email.insert(0,"Email")
                cmp_email.bind("<Button-1>",em_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_email, tag=("cmp_email"))

                cmp_ph = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_ph.insert(0,"Phone Number")
                cmp_ph.bind("<Button-1>",ph_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_ph, tag=("cmp_ph"))

                cmp_files = Entry(lf_cmpy1, width=30, font=('Calibri 16'),borderwidth=2)
                cmp_files.insert(0,"No file Chosen")
                cmp_files.bind("<Button-1>",fil_ent)
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=cmp_files, tag=("cmp_files"))

                button_cmp = customtkinter.CTkButton(master=lf_cmpy1,command=cmpny_crt2,text="Next",bg="#213b52")
                win_inv1 = lf_cmpy1.create_window(0, 0, anchor="center", window=button_cmp, tag=("button_cmp"))
        else:
                messagebox.showerror("Sign Up Failed","password and conform password does not match")
  
#--------------------------------------------------------------------------------------------------------Sign in frame in signup section
def fun_sign_in():
    try:
        bs_nm=nm_nm2.get()
        ind_type=industry_tp.get()
        com_typ=cmp_type.get()
        acount_manage=bs_act_man.get()
        paid_type=paid_typ.get()

        sql_log_sql='select id from auth_user where username=%s'
        sql_log_sql_val=(sys_usr.get(),)
            
        fbcursor.execute(sql_log_sql,sql_log_sql_val,)
        id=fbcursor.fetchone()
        signup_cmp_sql="update app1_company set bname=%s,industry=%s,ctype=%s,abt=%s,paid=%s  where id_id=%s" #adding values into db
        signup_cmp_sql_val=(bs_nm,ind_type,com_typ,acount_manage,paid_type,id[0],)
        fbcursor.execute(signup_cmp_sql,signup_cmp_sql_val,)
        finsysdb.commit()
    except:
        pass


    try:
        main_frame_signup.pack_forget()
    except:
        pass
    try:
        main_frame_cmpny2.pack_forget()
    except:
        pass

    main_frame_signin.pack(fill=X,)
    
#---------------------------------------------------------------------------------------------------------------------Sign Up Section
def func_sign_up():
    
    global main_frame_signup,fst_nm,lst_nm,sys_em,sys_usr,sys_pass,sys_cf
    main_frame_signin.pack_forget()

    main_frame_signup=Frame(root, height=750)
    main_frame_signup.pack(fill=X,)

    def responsive_wid_signup(event):
        dwidth = event.width
        dheight = event.height
        dcanvas = event.widget
   

        dcanvas.coords("round_signup",dwidth/2,-dheight/.5,dwidth/.7,dheight/.5)
        dcanvas.coords("sign_in_lb",dwidth/6,dheight/12)
        dcanvas.coords("fst_nm",dwidth/8.5,dheight/5)
        dcanvas.coords("lst_nm",dwidth/8.5,dheight/3.5)
        dcanvas.coords("sys_em",dwidth/8.5,dheight/2.7)
        dcanvas.coords("sys_usr",dwidth/8.5,dheight/2.2)
        dcanvas.coords("sys_pass",dwidth/8.5,dheight/1.85)
        dcanvas.coords("sys_cf",dwidth/8.5,dheight/1.6)
        dcanvas.coords("button_sign",dwidth/6,dheight/1.4)
        dcanvas.coords("lft_lab",dwidth/1.4,dheight/18)
        dcanvas.coords("lft_lab2",dwidth/1.52,dheight/10)
        dcanvas.coords("btn_signup2",dwidth/1.36,dheight/6.6)
        dcanvas.coords("label_img",dwidth/1.8,dheight/5)
        
        


    lf_signup= Canvas(main_frame_signup,width=1500, height=1500)
    lf_signup.bind("<Configure>", responsive_wid_signup)
    lf_signup.pack(fill=X)

    lf_signup.create_oval(0,0,0,0,fill="#213b52", tag=("round_signup"))

    # #--------------------------------------------------------------------------------sign up section
    sign_in_lb=Label(lf_signup, text="Sign Up",font=('Calibri 30 bold'), fg="black")
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sign_in_lb, tag=("sign_in_lb"))

    def nme(event):
        if fst_nm.get()=="Firstname":
            fst_nm.delete(0,END)
        else:
            pass

    def nme1(event):
        if lst_nm.get()=="Lastname":
            lst_nm.delete(0,END)
        else:
            pass
        
    def nme2(event):
        if sys_em.get()=="Email":
            sys_em.delete(0,END)
        else:
            pass
        
        
    def nme3(event):
        if sys_usr.get()=="Username":
            sys_usr.delete(0,END)
        else:
            pass
        
    def nme4(event):
        if sys_pass.get()=="Password":
            sys_pass.delete(0,END)
            messagebox.showerror("Password Format","The password length must be greater than or equal to 8 \n>The password must contain one or more uppercase characters\n>The password must contain one or more lowercase characters\n>The password must contain one or more numeric values\n>The password must contain one or more special characters")
        else:
            pass
    
    def nme5(event):
        if sys_cf.get()=="Confirm Password":
            sys_cf.delete(0,END)
        else:
            pass
    
    

    fst_nm = Entry(lf_signup, width=25, font=('Calibri 16'))
    fst_nm.insert(0,"Firstname")
    fst_nm.bind("<Button-1>",nme)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=fst_nm, tag=("fst_nm"))

    lst_nm = Entry(lf_signup,  width=25, font=('Calibri 16'))
    lst_nm.insert(0,"Lastname")
    lst_nm.bind("<Button-1>",nme1)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=lst_nm, tag=("lst_nm"))

    
    sys_em = Entry(lf_signup, width=25, font=('Calibri 16'))
    sys_em.insert(0,"Email")
    sys_em.bind("<Button-1>",nme2)
    def validateb211(value):
        
        pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
        if re.fullmatch(pattern, value) is None:
                            
            return False

        sys_em.config(fg="black")
        return True

    def on_invalidb211():
        
        sys_em.config(fg="red")

    vcmdb211 = (lf_signup.register(validateb211), '%P')
    ivcmdb211 = (lf_signup.register(on_invalidb211),)
    sys_em.config(validate='focusout', validatecommand=vcmdb211, invalidcommand=ivcmdb211)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sys_em, tag=("sys_em"))

    sys_usr = Entry(lf_signup, width=25, font=('Calibri 16'))
    sys_usr.insert(0,"Username")
    sys_usr.bind("<Button-1>",nme3)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sys_usr, tag=("sys_usr"))

    sys_pass = Entry(lf_signup, width=25, font=('Calibri 16'),)
    sys_pass.insert(0,"Password")
    sys_pass.bind("<Button-1>",nme4)
    def pas_val_fun(value):
        
        pattern = r'(?=^.{8,}$)(?=.*\d)(?=.*[!@#$%^&*]+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$'
        if re.fullmatch(pattern, value) is None:
                            
            return False

        sys_pass.config(fg="black")
        return True

    def pass_inval_fun():
        sys_pass.config(fg="red")

    pas_val = (lf_signup.register(pas_val_fun), '%P')
    pass_inval = (lf_signup.register(pass_inval_fun),)

    sys_pass.config(validate='focusout', validatecommand=pas_val, invalidcommand=pass_inval)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sys_pass, tag=("sys_pass"))

    sys_cf = Entry(lf_signup, width=25, font=('Calibri 16'))
    sys_cf.insert(0,"Confirm Password")
    sys_cf.bind("<Button-1>",nme5)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sys_cf, tag=("sys_cf"))

    button_sign = customtkinter.CTkButton(master=lf_signup, command=cmpny_crt1,text="Sign Up",bg="#213b52")
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=button_sign, tag=("button_sign"))

    label_img = Label(lf_signup, image = sign_up,bg="#213b52", width=800,anchor="w")
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=label_img, tag=("label_img"))
    
    

    lft_lab=Label(lf_signup, text="One of us ?",font=('Calibri 20 bold'), fg="white", bg="#213b52")
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=lft_lab, tag=("lft_lab"))
    lft_lab2=Label(lf_signup, text="click here for work with FinsYs.",font=('Calibri 16 bold'), fg="white", bg="#213b52")
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=lft_lab2, tag=("lft_lab2"))

    btn_signup2 = Button(lf_signup, text='Sign In', command=fun_sign_in, bg="white", fg="black",borderwidth = 3,height=1,width=10)
    win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=btn_signup2, tag=("btn_signup2"))


main_frame_signin=Frame(root, height=750)
main_frame_signin.pack(fill=X,)


def sig_nm(event):
        if nm_ent.get()=="Username":
            nm_ent.delete(0,END)
        else:
            pass

def sig_pass(event):
        if pass_ent.get()=="********":
            pass_ent.delete(0,END)
        else:
            pass


def responsive_wid_login(event):
        dwidth = event.width
        dheight = event.height
        dcanvas = event.widget
   

        dcanvas.coords("sign_inlb",dwidth/1.4,dheight/4)

        dcanvas.coords("nm_ent",dwidth/1.5,dheight/2.7)
        dcanvas.coords("pass_ent",dwidth/1.5,dheight/2.2)
        dcanvas.coords("button",dwidth/1.4,dheight/1.8)
        dcanvas.coords("round_login",-dwidth/2,-dheight/.5,dwidth/2,dheight/.5)
        dcanvas.coords("lft_lab",dwidth/4,dheight/18)
        dcanvas.coords("lft_lab2",dwidth/6,dheight/10)
        dcanvas.coords("btn2",dwidth/3.7,dheight/6.6)
        dcanvas.coords("img",dwidth/16,dheight/5.5)
    

lf_signup= Canvas(main_frame_signin,width=1366,height=750)
lf_signup.bind("<Configure>", responsive_wid_login)
lf_signup.pack(fill=X)

sign_inlb=Label(lf_signup, text="Sign In",font=('Calibri 30 bold'), fg="black")
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=sign_inlb, tag=("sign_inlb"))

nm_ent = Entry(lf_signup, width=25, font=('Calibri 16'))
nm_ent.insert(0,"Username")
nm_ent.bind("<Button-1>",sig_nm)
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=nm_ent, tag=("nm_ent"))

pass_ent = Entry(lf_signup, width=25, font=('Calibri 16'),show="*")
pass_ent.insert(0,"********")
pass_ent.bind("<Button-1>",sig_pass)
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=pass_ent, tag=("pass_ent"))

button = customtkinter.CTkButton(master=main_frame_signin,command=main_sign_in,text="Log In",bg="#213b52")
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=button, tag=("button"))

# #------------------------------------------------------------------------------------------------------------------------left canvas

lf_signup.create_oval(0,0,0,0,fill="#213b52", tag=("round_login"))

img = Label(lf_signup, image = exprefreshIcon,bg="#213b52", width=500, justify=RIGHT)
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=img, tag=("img"))

lft_lab=Label(lf_signup, text="New here ?",font=('Calibri 20 bold'), fg="white", bg="#213b52")
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=lft_lab, tag=("lft_lab"))
lft_lab2=Label(lf_signup, text="Join here to start a business with FinsYs!",font=('Calibri 16 bold'), fg="white", bg="#213b52")
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=lft_lab2, tag=("lft_lab2"))

btn2 = Button(main_frame_signin, text = 'Sign Up', command = func_sign_up, bg="white", fg="black",borderwidth = 3,height=1,width=10)
win_inv1 = lf_signup.create_window(0, 0, anchor="nw", window=btn2, tag=("btn2"))

root.mainloop()